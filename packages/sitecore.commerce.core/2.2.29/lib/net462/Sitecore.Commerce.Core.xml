<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sitecore.Commerce.Core</name>
    </assembly>
    <members>
        <member name="T:Sitecore.Commerce.Core.ChangedEventHandler">
            <summary>
            A delegate type for hooking up change notifications.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.Activity">
            <summary>
            The activity.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Activity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Activity"/> class.
            </summary>
        </member>
        <member name="E:Sitecore.Commerce.Core.Activity.ActivityComplete">
            <summary>
            An event that clients can use to be notified whenever the elements of the list change.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Activity.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Activity.ActivityId">
            <summary>
            Gets the activity identifier.
            </summary>
            <value>
            The activity identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Activity.Entities">
            <summary>
            Gets or sets the entities.
            </summary>
            <value>
            The entities.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Activity.Environment">
            <summary>
            Gets or sets the environment.
            </summary>
            <value>
            The environment.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Activity.Context">
            <summary>
            Gets or sets the context.
            </summary>
            <value>
            The context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Activity.StopWatch">
            <summary>
            Gets the stop watch.
            </summary>
            <value>
            The stop watch.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.Activity.Start``1(System.String)">
            <summary>
             Start the Activity. Returns the new Activity object back.
            </summary>
            <typeparam name="T">The activity type.</typeparam>
            <param name="name">The name.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Activity"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Activity.AddEntity(Sitecore.Commerce.Core.CommerceEntity)">
            <summary>
            The add entity.
            </summary>
            <param name="entity">
            The entity.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.Activity"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Activity.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Activity.OnActivityComplete(System.EventArgs)">
            <summary>
            Raises the <see cref="E:ActivityComplete"/> event.
            </summary>
            <param name="e">
            The <see cref="T:System.EventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Activity.AddActivityProperty(System.String,System.String)">
            <summary>
             Adds a activity property. This is a piece of information that you want to end up in a log or used as part of a response to an action
            </summary>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Activity.Dispose(System.Boolean)">
            <summary>
            When the Activity object is disposed, you can programmatically take an action such as logging, auditing, tripping
            alarms, fire a pipeline, etc.
            </summary>
            <param name="disposing">
            The disposing.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ActivityProperty">
            <summary>
            Simple property container for a Activity property
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ActivityProperty.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>
                The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.ActivityProperty.Value">
            <summary>
                Gets or sets the value.
            </summary>
            <value>
                The value.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.CommandActivity">
            <summary>
            The command activity.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommandActivity.Command">
            <summary>
            Gets or sets the Command associated with this activity
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandActivity.Start(Sitecore.Commerce.Core.CommerceContext,Sitecore.Commerce.Core.Commands.CommerceCommand)">
            <summary>
            Starts the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="command">The command.</param>
            <returns>The <see cref="T:Sitecore.Commerce.Core.Activity"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandActivity.Activity_ActivityComplete(System.Object,System.EventArgs)">
            <summary>
            The activity_ activity complete.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The System.EventArgs.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ActivityPerf">
            <summary>
            Storage class for the performance data of an Activity
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Model" />
        </member>
        <member name="P:Sitecore.Commerce.Core.ActivityPerf.ElapsedMs">
            <summary>
            Gets or sets the elapsed ms.
            </summary>
            <value>
            The elapsed ms.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.TrackActivityArgument">
            <summary>
            The Track Activity argument.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.TrackActivityArgument.#ctor(Sitecore.Commerce.Core.Activity)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.TrackActivityArgument"/> class.
            </summary>
            <param name="activity">
            The activity to be tracked.
            </param>
        </member>
        <member name="P:Sitecore.Commerce.Core.TrackActivityArgument.Activity">
            <summary>
                Gets or sets the Activity.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.TrackActivityBlock">
            <summary>
            Defines the track activity block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.TrackActivityArgument,
                    Sitecore.Commerce.Core.TrackActivityArgument, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.TrackActivityBlock.Run(Sitecore.Commerce.Core.TrackActivityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The execute.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.TrackActivityArgument"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ITrackActivityPipeline">
            <summary>
            The PersistEntityPipeline interface.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.TrackActivityPipeline">
            <summary>
            The Track Activity pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.TrackActivityPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.ITrackActivityPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.TrackActivityPipeline"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ActivityPolicy">
            <summary>
            Standard policies governing activities
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ActivityPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ActivityPolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ActivityPolicy.EnableCommandMessageLogging">
            <summary>
            Gets or sets a value indicating whether command message logging is enabled.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.GetPossibleApprovalStatusesCommand">
            <inheritdoc />
            <summary>
            Defines the get possible approval statuses command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetPossibleApprovalStatusesCommand.#ctor(Sitecore.Commerce.Core.IGetPossibleApprovalStatusesPipeline,System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.GetPossibleApprovalStatusesCommand" /> class.
            </summary>
            <param name="getpossibleStatuses">The clear cache store pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetPossibleApprovalStatusesCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.Object)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="item">The item.</param>
            <returns>The list of possible approval statuses.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.SetApprovalStatusCommand">
            <inheritdoc />
            <summary>
            Defines the set approval status command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.SetApprovalStatusCommand.#ctor(Sitecore.Commerce.Core.ISetApprovalStatusPipeline,System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.SetApprovalStatusCommand" /> class.
            </summary>
            <param name="setApprovalStatusPipeline">The clear cache store pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.SetApprovalStatusCommand.Process(Sitecore.Commerce.Core.CommerceContext,Sitecore.Commerce.Core.CommerceEntity,System.String,System.String,System.String)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="entity">The entity.</param>
            <param name="status">The status.</param>
            <param name="comment">The comment.</param>
            <param name="itemId">The item identifier.</param>
            <returns>The list of possible approval statuses.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.BootstrapCommand">
            <inheritdoc />
            <summary>
             Defines the boostrap environment command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.BootstrapCommand.#ctor(Sitecore.Commerce.Core.IBootstrapPipeline,System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.BootstrapCommand" /> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.BootstrapCommand.Process(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.BootstrapCommand"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.ClearCacheStoreCacheCommand">
            <summary>
            Defines the clear cache store's cache command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ClearCacheStoreCacheCommand.#ctor(Sitecore.Commerce.Core.IClearCacheStoreCachePipeline,Sitecore.Commerce.Core.Commands.GetEnvironmentCommand,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.ClearCacheStoreCacheCommand"/> class.
            </summary>
            <param name="clearCacheStorePipeline">The clear cache store pipeline.</param>
            <param name="getEnvironmentCommand">The get environment command.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ClearCacheStoreCacheCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String,System.String,System.String)">
            <summary>
            The process.
            </summary>
            <param name="commerceContext">
            The context.
            </param>
            <param name="cacheStoreName">
            The cache store name
            </param>
            <param name="cacheName">
            The cache name
            </param>
            <param name="environmentName">
            The environment name.
            </param>
            <returns>
            True if the cache store's cache was cleared, false otherwise.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.ClearCacheStoreCommand">
            <summary>
            Defines the clear cache store command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ClearCacheStoreCommand.#ctor(Sitecore.Commerce.Core.IClearCacheStorePipeline,Sitecore.Commerce.Core.Commands.GetEnvironmentCommand,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.ClearCacheStoreCommand"/> class.
            </summary>
            <param name="clearCacheStorePipeline">The clear cache store pipeline.</param>
            <param name="getEnvironmentCommand">The get environment command.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ClearCacheStoreCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String,System.String)">
            <summary>
            The process.
            </summary>
            <param name="commerceContext">
            The context.
            </param>
            <param name="cacheStoreName">
            The cache store name
            </param>
            <param name="environmentName">
            The environment name
            </param>
            <returns>
            True if the cache store was cleared, false otherwise.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.ClearEnvironmentCacheCommand">
            <inheritdoc />
            <summary>
            Defines the clear environment cache command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ClearEnvironmentCacheCommand.#ctor(Sitecore.Commerce.Core.IClearCacheStorePipeline,Sitecore.Commerce.Core.NodeContext,System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.ClearEnvironmentCacheCommand" /> class.
            </summary>
            <param name="clearStorePipeline">The clear environment pipeline.</param>
            <param name="nodeContext">The node context.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ClearEnvironmentCacheCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            Clears an environment.
            </summary>
            <param name="commerceContext"></param>
            <param name="environmentName"></param>
            <returns>True if environment was cleared, false otherwise</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.GetCacheStoreCommand">
            <summary>
            Defines the get cache store command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetCacheStoreCommand.#ctor(Sitecore.Commerce.Core.IGetCacheStoresPipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.GetCacheStoreCommand"/> class.
            </summary>
            <param name="getCacheStoresPipeline">The get cache stores pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetCacheStoreCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            The process.
            </summary>
            <param name="commerceContext">
            The context.
            </param>
            <param name="cacheStoreName">
            The cache store name.
            </param>
            <returns>
            A <see cref="T:Sitecore.Commerce.Core.CacheStoreModel"/>
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.CommerceCommand">
            <inheritdoc />
            <summary>
            Defines the base commerce command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.ICommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.CommerceCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.CommerceCommand.#ctor(System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" /> class.
            </summary>windows update
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.Commands.CommerceCommand.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Commands.CommerceCommand.ResponseCode">
            <summary>
            Gets or sets the response code.
            </summary>
            <value>
            The response code.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Commands.CommerceCommand.Messages">
            <summary>
            Gets or sets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Commands.CommerceCommand.Models">
            <summary>
            Gets or sets the models.
            </summary>
            <value>
            The models.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Commands.CommerceCommand.ActionUrl">
            <summary>
            Gets or sets the action URL.
            </summary>
            <value>
            The action URL.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Commands.CommerceCommand.TaskId">
            <summary>
            Gets or sets the task identifier.
            </summary>
            <value>
            The task identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Commands.CommerceCommand.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Commands.CommerceCommand.IsFaulted">
            <summary>
            Gets or sets a value indicating whether this instance is faulted.
            </summary>
            <value>
              <c>true</c> if this instance is faulted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Commands.CommerceCommand.IsCompleted">
            <summary>
            Gets or sets a value indicating whether this instance is completed.
            </summary>
            <value>
              <c>true</c> if this instance is completed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Commands.CommerceCommand.IsCanceled">
            <summary>
            Gets or sets a value indicating whether this instance is canceled.
            </summary>
            <value>
              <c>true</c> if this instance is canceled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.CommerceCommand.Command``1">
            <summary>
            Resolves a specific Command type
            </summary>
            <typeparam name="T">The command type.</typeparam>
            <returns>A command</returns>kd
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.CommerceCommand.Pipeline``1">
            <summary>
            Pipelines this instance.
            </summary>
            <typeparam name="T">The pipeline type.</typeparam>
            <returns>A pipeline</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.CommerceCommand.ProcessWithTransaction(Sitecore.Commerce.Core.CommerceContext,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Preocess a specific action within a command activity and a transaction
            </summary>
            <param name="commerceContext"></param>
            <param name="action"></param>
            <returns>The action</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.CommerceCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Process a specific action within a command activity
            </summary>
            <param name="commerceContext"></param>
            <param name="action"></param>
            <returns>The action</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.CommerceCommand.PerformTransaction(Sitecore.Commerce.Core.CommerceContext,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Performs the transaction.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="action">The action.</param>
            <returns>A <see cref="T:System.Func`1"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.CommerceCommand.ValidateTransaction(Sitecore.Commerce.Core.CommerceContext,System.Transactions.TransactionScope)">
            <summary>
            Validates the transaction.
            </summary>
            <param name="context">The context.</param>
            <param name="transaction">The transaction.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.GenerateUniqueCodeCommand">
            <summary>
            Generates a Unique Code.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GenerateUniqueCodeCommand.#ctor(System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.ValidateContextCommand" /> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GenerateUniqueCodeCommand.Process(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <returns>A unique code</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GenerateUniqueCodeCommand.ToBase36String(System.Guid)">
            <summary>
            To the base36 string.
            </summary>
            <param name="id">The identifier.</param>
            <returns>A string</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.GetLocalizableMessageCommand">
            <summary>
            Defines the get localizable message command.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetLocalizableMessageCommand.#ctor(Sitecore.Commerce.Core.IGetLocalizableMessagePipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.GetLocalizableMessageCommand"/> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetLocalizableMessageCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String,System.Object[])">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="localizationKey">The localization key.</param>
            <param name="parameters">The parameters.</param>
            <returns>A localizable message</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.ICommerceCommand">
            <summary>
            Defines the commerce command interface.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ICommerceCommand.ProcessWithTransaction(Sitecore.Commerce.Core.CommerceContext,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Preocess a specific action within a command activity and a transaction
            </summary>
            <param name="commerceContext"></param>
            <param name="action"></param>
            <returns>The action</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ICommerceCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Process a specific action within a command activity
            </summary>
            <param name="commerceContext"></param>
            <param name="action"></param>
            <returns>The action</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ICommerceCommand.PerformTransaction(Sitecore.Commerce.Core.CommerceContext,System.Func{System.Threading.Tasks.Task})">
            <summary>
            Performs the transaction.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="action">The action.</param>
            <returns>
            A <see cref="T:System.Func`1" />
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.ValidateContextCommand">
            <inheritdoc />
            <summary>
            Defines the validate context command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ValidateContextCommand.#ctor(Sitecore.Commerce.Core.IValidateContextPipeline,System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.ValidateContextCommand" /> class.
            </summary>
            <param name="validateContextPipeline">The validate context pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ValidateContextCommand.Process(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <returns>True if the context is valid, false otherwise.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.CloneEntityCommand">
            <inheritdoc />
            <summary>
            Defines the CloneEntity command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.CloneEntityCommand.#ctor(Sitecore.Commerce.Core.ICloneEntityPipeline,System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.DeleteEntityCommand" /> class.
            </summary>
            <param name="cloneEntityPipeline">The CloneEntity pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.CloneEntityCommand.Process``1(Sitecore.Commerce.Core.CommerceContext,Sitecore.Commerce.Core.CommerceEntity,System.String)">
            <summary>
            The process.
            </summary>
            <param name="commerceContext">
            The context.
            </param>
            <param name="entity">
            The CommerceEntity to Clone.
            </param>
            <param name="newId">
            A new Id to apply to the Clone.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.DeleteEntityCommand">
            <inheritdoc />
            <summary>
             Defines the delete entity command.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.DeleteEntityCommand.#ctor(Sitecore.Commerce.Core.IDeleteEntityPipeline,System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.DeleteEntityCommand" /> class.
            </summary>
            <param name="deleteEntityPipeline">The delete entity pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.DeleteEntityCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            The process.
            </summary>
            <param name="commerceContext">
            The context.
            </param>
            <param name="entityId">
            The entity Id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.EntitySerializerCommand">
            <inheritdoc />
            <summary>
            Defines the entity serialized command
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.EntitySerializerCommand.#ctor(System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.EntitySerializerCommand" /> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            windows update
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.EntitySerializerCommand.Deserialize``1(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            Deserializes the specified commerce context.
            </summary>
            <typeparam name="T">The entity type</typeparam>
            <param name="commerceContext">The commerce context.</param>
            <param name="serializedEntity">The serialized entity.</param>
            <returns>A deserialized entity</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.EntitySerializerCommand.SerializeEntity(Sitecore.Commerce.Core.CommerceContext,Sitecore.Commerce.Core.CommerceEntity)">
            <summary>
            Serializes the entity.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="entity">The entity.</param>
            <returns>A string representing the serialized entity</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.EntitySerializerCommand.DeserializeEntityFromStream(Sitecore.Commerce.Core.FindEntityArgument,Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Deserializes the entity from stream.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.FindEntityCommand">
            <inheritdoc />
            <summary>
            Defines the find entities command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.FindEntityCommand.#ctor(Sitecore.Commerce.Core.IFindEntityPipeline,Sitecore.Commerce.Core.ISecureEntityPipeline,System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.FindEntityCommand" /> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="securePipeline">The secure pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.FindEntityCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.Type,System.String,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="entityType">Type of the entity.</param>
            <param name="entityId">The entity identifier.</param>
            <param name="entityVersion">The entity version.</param>
            <param name="shouldCreate">if set to <c>true</c> [should create].</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.FindEntityCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.Type,System.String,System.Boolean)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="entityType">Type of the entity.</param>
            <param name="entityId">The entity identifier.</param>
            <param name="shouldCreate">if set to <c>true</c> [should create].</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.FindEntityVersionsCommand">
            <inheritdoc />
            <summary>
            Defines the find entity versions command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.FindEntityVersionsCommand.#ctor(Sitecore.Commerce.Core.IFindEntityVersionsPipeline,System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.FindEntityVersionsCommand"/> class.
            </summary>
            <param name="findEntityVersionsPipeline">The find entity versions pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.FindEntityVersionsCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.Type,System.String)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="entityType">Type of the entity.</param>
            <param name="entityId">The entity identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.GetEntityFromReferenceCommand">
            <summary>
            Defines the get entity from reference command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetEntityFromReferenceCommand.#ctor(Sitecore.Commerce.Core.IFindEntityPipeline,Sitecore.Commerce.Core.ISecureEntityPipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.FindEntityCommand"/> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="securePipeline">The secure pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetEntityFromReferenceCommand.Process(Sitecore.Commerce.Core.CommerceContext,Sitecore.Commerce.Core.EntityReference)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="reference">The reference.</param>
            <returns>The <see cref="T:Sitecore.Commerce.Core.CommerceEntity" /></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.GetRawEntityCommand">
            <summary>
            Defines the get raw entity command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetRawEntityCommand.#ctor(Sitecore.Commerce.Core.IGetRawEntityPipeline,Sitecore.Commerce.Core.Commands.GetEnvironmentCommand,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.GetRawEntityCommand"/> class.
            </summary>
            <param name="getRawEntityPipeline">The get raw entity pipeline.</param>
            <param name="getEnvironment">The get environment.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetRawEntityCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String,System.String)">
            <summary>
            The process.
            </summary>
            <param name="commerceContext">
            The context.
            </param>
            <param name="entityId">
            The entity Id.
            </param>
            <param name="environmentName">
            The environment name.
            </param>
            <returns>
            A string representing the entity.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.PersistEntityCommand">
            <summary>
            Defines the persist entity command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.PersistEntityCommand.#ctor(Sitecore.Commerce.Core.IPersistEntityPipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.PersistEntityCommand"/> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.PersistEntityCommand.Process(Sitecore.Commerce.Core.CommerceContext,Sitecore.Commerce.Core.CommerceEntity)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="entity">The entity.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.ValidateNameCommand">
            <summary>
            Defines the Validate name command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ValidateNameCommand.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.ValidateNameCommand"/> class.
            </summary>
            <param name="serviceProvider">
            The service provider.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ValidateNameCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="name">The name.</param>
            <returns>true if the name is valid</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.CleanEnvironmentCommand">
            <inheritdoc />
            <summary>
            Defines the clean environmentName command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.CleanEnvironmentCommand.#ctor(Sitecore.Commerce.Core.ICleanEnvironmentPipeline,Sitecore.Commerce.Core.Commands.GetEnvironmentCommand,System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.CleanEnvironmentCommand" /> class.
            </summary>
            <param name="cleanEnvironment">The clean environment.</param>
            <param name="getEnvironment">The get environment.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.CleanEnvironmentCommand.Process(System.String,Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            The process.
            </summary>
            <param name="environmentName">
            The environmentName to clean.
            This removes ALL artifacts related to this environmentName from the system and is unrecoverable.
            </param>
            <param name="commerceContext">
            The commerce context
            </param>
            <returns>The <see cref="T:System.Boolean"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.ExportEnvironmentCommand">
            <summary>
            Defines the export environment command.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ExportEnvironmentCommand.#ctor(Sitecore.Commerce.Core.IExportEnvironmentPipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.ExportEnvironmentCommand"/> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ExportEnvironmentCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            Processes the specified raw environment.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="name">The environment id.</param>
            <returns>A raw environment</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.GetEnvironmentArtifactStoreIdCommand">
            <summary>
            Defines the get environment command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="F:Sitecore.Commerce.Core.Commands.GetEnvironmentArtifactStoreIdCommand._findEntityPipeline">
            <summary>
            The find entity pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.Commands.GetEnvironmentArtifactStoreIdCommand._nodeContext">
            <summary>
            The node context.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetEnvironmentArtifactStoreIdCommand.#ctor(Sitecore.Commerce.Core.IFindEntityPipeline,Sitecore.Commerce.Core.NodeContext,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.GetEnvironmentArtifactStoreIdCommand"/> class.
            </summary>
            <param name="findEntityPipeline">The find entity pipeline.</param>
            <param name="nodeContext">The node context.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetEnvironmentArtifactStoreIdCommand.Process(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <returns>The environment artifact store id.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.GetEnvironmentCommand">
            <summary>
            Defines the get environment command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetEnvironmentCommand.#ctor(Sitecore.Commerce.Core.IFindEntityPipeline,Sitecore.Commerce.Core.IStartEnvironmentPipeline,System.IServiceProvider,Sitecore.Commerce.Core.NodeContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.GetEnvironmentCommand" /> class.
            </summary>
            <param name="findEntityPipeline">The find entity pipeline.</param>
            <param name="startEnvironmentPipeline">The start environment pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
            <param name="nodeContext">The node context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetEnvironmentCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="environmentName">Name of the environment.</param>
            <returns>The <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetEnvironmentCommand.ById(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            Bies the identifier.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="id">The identifier.</param>
            <returns>The <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.ImportEnvironmentCommand">
            <summary>
            Defines the import environment command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ImportEnvironmentCommand.#ctor(Sitecore.Commerce.Core.IImportEnvironmentPipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.ImportEnvironmentCommand"/> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ImportEnvironmentCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            Processes the specified raw environment.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="rawEnvironment">The raw environment.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.InitializeEnvironmentCommand">
            <inheritdoc />
            <summary>
            Defines a CommerceCommand that initializes an Environment.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.InitializeEnvironmentCommand.#ctor(Sitecore.Commerce.Core.IInitializeEnvironmentPipeline,System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.InitializeEnvironmentCommand" /> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.InitializeEnvironmentCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            The process.
            </summary>
            <param name="commerceContext">
            The commerce context
            </param>
            <param name="environment">The environment.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.FindEntitiesInListCommand">
            <summary>
             Defines the find entities in list command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.FindEntitiesInListCommand.#ctor(Sitecore.Commerce.Core.IFindEntitiesInListPipeline,Sitecore.Commerce.Core.ISecureEntitiesPipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.FindEntitiesInListCommand"/> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="securePipeline">The secure pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.FindEntitiesInListCommand.Process``1(Sitecore.Commerce.Core.CommerceContext,System.String,System.Int32,System.Int32)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <typeparam name="T">The entity type</typeparam>
            <param name="commerceContext">The commerce context.</param>
            <param name="listName">Name of the list.</param>
            <param name="skip">The skip.</param>
            <param name="take">The take.</param>
            <returns>A commerce list of commerce entities</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.FindEntitiesInListCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            The process.
            </summary>
            <param name="commerceContext">
            The context.
            </param>
            <param name="type">
            The entity Type.
            </param>
            <param name="listName">
            The list Name.
            </param>
            <param name="skip">
            The skip.
            </param>
            <param name="take">
            The take.
            </param>
            <returns>
            A <see cref="T:Sitecore.Commerce.Core.CommerceList`1"/> of <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.GetListMetadataCommand">
            <summary>
            Defines the get list metadata command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetListMetadataCommand.#ctor(Sitecore.Commerce.Core.IPopulateListMetadataPipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.GetListMetadataCommand"/> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetListMetadataCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            The process.
            </summary>
            <param name="commerceContext">
            The context.
            </param>
            <param name="listName">
            The Name of the List.
            </param>
            <returns>
            A <see cref="T:Sitecore.Commerce.Core.ListMetadata"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.MoveEntitiesToListCommand">
            <inheritdoc />
            <summary>
            Defines the removes entities from a  list command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.MoveEntitiesToListCommand.#ctor(Sitecore.Commerce.Core.IRemoveListEntitiesPipeline,Sitecore.Commerce.Core.IAddListEntitiesPipeline,System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.MoveEntitiesToListCommand" /> class.
            </summary>
            <param name="removeListEntitiespipeline">The RemoveListEntities pipeline.</param>
            <param name="addListEntitiesPipeline">The AddListEntities pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.MoveEntitiesToListCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            The process
            </summary>
            <param name="commerceContext">
            The context
            </param>
            <param name="itemIds">
            The ItemsIds
            </param>
            <param name="fromListName">
            The list Name to move from
            </param>
            <param name="toListName">
            The list name to move to
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.RemoveListEntitiesCommand">
            <summary>
            Defines the removes entities from a  list command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.RemoveListEntitiesCommand.#ctor(Sitecore.Commerce.Core.IRemoveListEntitiesPipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.RemoveListEntitiesCommand"/> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.RemoveListEntitiesCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            The process.
            </summary>
            <param name="commerceContext">
            The context.
            </param>
            <param name="listName">
            The list Name.
            </param>
            <param name="entityIds">
            The list of entity ids
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.RunMinionCommand">
            <inheritdoc />
            <summary>
            Defines the run minion command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.RunMinionCommand.#ctor(Sitecore.Commerce.Core.IRunMinionPipeline,Sitecore.Commerce.Core.Commands.GetEnvironmentCommand,System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.RunMinionCommand" /> class.
            </summary>
            <param name="runMinionPipeline">The run minion pipeline.</param>
            <param name="getEnvironmentPipeline">The get environment pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.RunMinionCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String,System.String,System.Boolean)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="minionFullName">Full name of the minion.</param>
            <param name="environmentName">The environment name.</param>
            <param name="runChildren">if set to <c>true</c> [run children].</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.RunMinionCommand"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.RunMinionCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String,System.String,System.Collections.Generic.IList{Sitecore.Commerce.Core.Policy})">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="minionFullName">Full name of the minion.</param>
            <param name="environmentName">Name of the environment.</param>
            <param name="policies">The policies.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.RunMinionCommand"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.CustomMetricCommand">
            <summary>
            Defines the Custom Metrics Tracking Command.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.CustomMetricCommand.#ctor(Microsoft.ApplicationInsights.TelemetryClient,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.CustomMetricCommand"/> class.
            </summary>
            <param name="telemetryClient"></param>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.CustomMetricCommand.Increment(System.String,System.String,System.String,Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Increments a custom metric
            </summary>
            <param name="categoryName"></param>
            <param name="counterName"></param>
            <param name="instanceName"></param>
            <param name="commerceContext"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.CustomMetricCommand.IncrementBy(System.String,System.String,System.String,System.Int64,Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Increments a custom metric by a value
            </summary>
            <param name="categoryName"></param>
            <param name="counterName"></param>
            <param name="instanceName"></param>
            <param name="lastValue"></param>
            <param name="commerceContext"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.CustomMetricCommand.PushAverage(System.String,System.String,System.String,System.Int64,Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Pushes a new Value to track a Performance Average
            </summary>
            <param name="categoryName"></param>
            <param name="counterName"></param>
            <param name="instanceName"></param>
            <param name="lastValue"></param>
            <param name="commerceContext"></param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.PerformanceCounterCommand">
            <summary>
            Defines the Performance Counter command.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.Commands.PerformanceCounterCommand.PermissionMessage">
            <summary>
            The permission message.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.Commands.PerformanceCounterCommand.LoggedPerfCounterMissingList">
            <summary>
            A list of whether a missing performance counter warning has been logged, as we only log once per counter.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.Commands.PerformanceCounterCommand.disabledDueToException">
            <summary>
            The disabled due to exception flag.
            As Perf counters can be logging a lot, if there are issues with the perf counter install 
            there could potentially be lots of Exceptions thrown.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.PerformanceCounterCommand.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.PerformanceCounterCommand"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.PerformanceCounterCommand.Increment(System.String,System.String,System.String,Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            The Increments a Performance Counter.
            </summary>
            <param name="categoryName">
            The Category Name of the Performance Counter.
            </param>
            <param name="counterName">
            The Name of the Performance Counter.
            </param>
            <param name="instanceName">
            The Instance Name of the Performance Counter.
            </param>
            <param name="commerceContext">
            The commerce context
            </param>
            <returns>false if the counter was not incremented</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.PerformanceCounterCommand.IncrementBy(System.String,System.String,System.String,System.Int64,Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Increments a Performance Counter by a Value.
            </summary>
            <param name="categoryName">
            The Category Name of the Performance Counter.
            </param>
            <param name="counterName">
            The Name of the Performance Counter to increment.
            </param>
            <param name="instanceName">
            The Instance Name of the Performance Counter to increment.
            </param>
            <param name="lastValue">
            The last performance value measured.
            </param>
            <param name="commerceContext">
            The commerce context
            </param>
            <returns>false if the counter was not incremented</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.PerformanceCounterCommand.Set(System.String,System.String,System.String,System.Int64,Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Sets a Performance Counter with a Value.
            </summary>
            <param name="categoryName">
            The Category Name of the Performance Counter.
            </param>
            <param name="counterName">
            The Name of the Performance Counter to increment.
            </param>
            <param name="instanceName">
            The Instance Name of the Performance Counter to increment.
            </param>
            <param name="lastValue">
            The last performance value measured.
            </param>
            <param name="commerceContext">
            The commerce context
            </param>
            <returns>false if the counter value was not set</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.PerformanceCounterCommand.PushAverage(System.String,System.String,System.String,System.Int64,Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Pushes a new Value to track a Performance Average.
            </summary>
            <param name="categoryName">
            The Category Name of the Performance Counter.
            </param>
            <param name="counterName">
            The Name of the Performance Counter to increment.
            </param>
            <param name="instanceName">
            The Instance Name of the Performance Counter to increment.
            </param>
            <param name="lastValue">
            The Value to Push to the Average Performance Counter.
            </param>
            <param name="commerceContext">
            The commerce context
            </param>
            <returns>false if the value was not pushed</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.PerformanceCounterCommand.LogMissingPerfCounter(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            Logs out whether the performance counter is missing.  Only logs out 1 time per performance counter
            </summary>
            <param name="commerceContext">
            The commerce context.
            </param>
            <param name="perfCategory">
            The performance category.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.ResetNodeContextCommand">
            <inheritdoc />
            <summary>
            Defines the reset node context command
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ResetNodeContextCommand.#ctor(Sitecore.Commerce.Core.NodeContext,System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.ResetNodeContextCommand" /> class.
            </summary>
            <param name="nodeContext">The node context.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ResetNodeContextCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="environmentId">The environment identifier.</param>
            <returns>True is the context was reset, false otherwise.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.GetPipelineConfigurationCommand">
            <inheritdoc />
            <summary>
            Defines the get pipelien configuration  command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetPipelineConfigurationCommand.#ctor(System.IServiceProvider,Sitecore.Framework.Configuration.ISitecoreServicesConfiguration)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.GetLocalizableMessageCommand" /> class.
            </summary>
            <param name="serviceProvider">The ServiceProvider.</param>
            <param name="services">The services configuration.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetPipelineConfigurationCommand.Process(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.ConfiguredPipelines"/> object with a List of <see cref="T:Sitecore.Commerce.Core.ConfiguredPipeline"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.RunningPluginsCommand">
            <inheritdoc />
            <summary>
            Defines the running plugins command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.RunningPluginsCommand.#ctor(Sitecore.Commerce.Core.IRunningPluginsPipeline,System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.RunningPluginsCommand" /> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.RunningPluginsCommand.Process(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <returns>A collection of <see cref="T:Sitecore.Commerce.Core.RegisteredPluginModel"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.AddPolicyToEntityCommand">
            <inheritdoc />
            <summary>
            Defines the add policy to entity command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.AddPolicyToEntityCommand.#ctor(Sitecore.Commerce.Core.IAddPolicyToEntityPipeline,Sitecore.Commerce.Core.IFindEntityPipeline,Sitecore.Commerce.Core.Commands.GetEnvironmentCommand,System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.AddPolicyToEntityCommand" /> class.
            </summary>
            <param name="addPolicyToEntityPipeline">The add policy to entity pipeline.</param>
            <param name="findEntityPipeline">The find entity pipeline.</param>
            <param name="getEnvironment">The get environment.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.AddPolicyToEntityCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String,Sitecore.Commerce.Core.Policy,System.String)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="entityId">The entity identifier.</param>
            <param name="policy">The policy.</param>
            <param name="environmentName">Name of the environment.</param>
            <returns>The <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.GetPolicySetCommand">
            <summary>
            Defines the get policy set command
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetPolicySetCommand.#ctor(Sitecore.Commerce.Core.IGetPolicySetPipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.GetPolicySetCommand" /> class.
            </summary>
            <param name="getPolicySetPipeline">The get policy set pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.GetPolicySetCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="policySetName">Name of the policy set.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.PolicySet"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.ImportPolicySetCommand">
            <summary>
            Defines the import policy set command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ImportPolicySetCommand.#ctor(Sitecore.Commerce.Core.IImportPolicySetPipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.ImportPolicySetCommand"/> class.
            </summary>
            <param name="pipeline">The pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.ImportPolicySetCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            Processes the specified raw policy set.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="rawPolicySet">The raw policy set.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.PolicySet"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Commands.RemovePolicyFromEntityCommand">
            <summary>
            Defines the remove policy from entity command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.RemovePolicyFromEntityCommand.#ctor(Sitecore.Commerce.Core.IRemovePolicyFromEntityPipeline,Sitecore.Commerce.Core.IFindEntityPipeline,Sitecore.Commerce.Core.Commands.GetEnvironmentCommand,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Commands.RemovePolicyFromEntityCommand"/> class.
            </summary>
            <param name="removePolicyFromEntityToEntityPipeline">The remove policy from entity to entity pipeline.</param>
            <param name="findEntityPipeline">The find entity pipeline.</param>
            <param name="getEnvironment">The get environment.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Commands.RemovePolicyFromEntityCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String,System.String,System.String,System.String)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="entityId">The entity identifier.</param>
            <param name="policyType">Type of the policy.</param>
            <param name="policyId">The policy identifier.</param>
            <param name="environmentName">Name of the environment.</param>
            <returns>True if the police was removed, false otherwise.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ApprovalComponent">
            <summary>
            Defines the approval component.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Component" />
        </member>
        <member name="M:Sitecore.Commerce.Core.ApprovalComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ApprovalComponent"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ApprovalComponent.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ApprovalComponent"/> class.
            </summary>
            <param name="status">The status.</param>
            <param name="comment">The comment.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.ApprovalComponent.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.ApprovalComponent.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.ApprovalComponent.Modified">
            <summary>
            Gets or sets the modified.
            </summary>
            <value>
            The modified.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.ApprovalComponent.ModifyStatus(System.String,System.String)">
            <summary>
            Modifies the status.
            </summary>
            <param name="status">The status.</param>
            <param name="comment">The comment.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetPossibleApprovalStatusesArgument">
            <summary>
            Defines the get possible approval statuses pipeline argument.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.PipelineArgument" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetPossibleApprovalStatusesArgument.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetPossibleApprovalStatusesArgument"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.GetPossibleApprovalStatusesArgument.Item">
            <summary>
            Gets or sets the item.
            </summary>
            <value>
            The item.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.SetApprovalStatusArgument">
            <summary>
            Defines the set approval status pipeline argument.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.PipelineArgument" />
        </member>
        <member name="M:Sitecore.Commerce.Core.SetApprovalStatusArgument.#ctor(Sitecore.Commerce.Core.CommerceEntity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.SetApprovalStatusArgument"/> class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="status">The status.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.SetApprovalStatusArgument.#ctor(Sitecore.Commerce.Core.CommerceEntity,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.SetApprovalStatusArgument"/> class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="status">The status.</param>
            <param name="comment">The comment.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.SetApprovalStatusArgument.#ctor(Sitecore.Commerce.Core.CommerceEntity,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.SetApprovalStatusArgument"/> class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="status">The status.</param>
            <param name="comment">The comment.</param>
            <param name="itemId">The item identifier.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.SetApprovalStatusArgument.Entity">
            <summary>
            Gets or sets the item.
            </summary>
            <value>
            The item.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.SetApprovalStatusArgument.ItemId">
            <summary>
            Gets or sets the item identifier.
            </summary>
            <value>
            The item identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.SetApprovalStatusArgument.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.SetApprovalStatusArgument.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetPossibleApprovalStatusesBlock">
            <summary>
            Defines the get possible approval statuses block
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.GetPossibleApprovalStatusesArgument,
                    System.Collections.Generic.IEnumerable{System.String}, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetPossibleApprovalStatusesBlock.Run(Sitecore.Commerce.Core.GetPossibleApprovalStatusesArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>An empty collection</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.SaveEntityBlock">
            <summary>
            Defines the save entity block.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.SaveEntityBlock.#ctor(Sitecore.Commerce.Core.IPersistEntityPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.SaveEntityBlock"/> class.
            </summary>
            <param name="persistEntityPipeline">The persist entity pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.SaveEntityBlock.Run(System.Boolean,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">if set to <c>true</c> [argument].</param>
            <param name="context">The context.</param>
            <returns>True if the status was set, false otherwise.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.SetApprovalStatusBlock">
            <summary>
            Defines the set approval status block
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.SetApprovalStatusArgument, System.Boolean,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.SetApprovalStatusBlock.Run(Sitecore.Commerce.Core.SetApprovalStatusArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>Always false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetPossibleApprovalStatusesPipeline">
            <summary>
            Defines the get possible approval statuses pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.GetPossibleApprovalStatusesArgument,
                    System.Collections.Generic.IEnumerable{System.String}}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IGetPossibleApprovalStatusesPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetPossibleApprovalStatusesPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IGetPossibleApprovalStatusesPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetPossibleApprovalStatusesPipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.IGetPossibleApprovalStatusesPipeline">
            <summary>
            Defines the get possible approval statuses pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.GetPossibleApprovalStatusesArgument,
                    System.Collections.Generic.IEnumerable{System.String}, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.ISetApprovalStatusPipeline">
            <summary>
            Defines the set approval status pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.SetApprovalStatusArgument, System.Boolean,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.SetApprovalStatusPipeline">
            <summary>
            Defines the set approval status pipeline.
            </summary>
            <seealso>
                <cref>Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.SetApprovalStatusArgument, System.Boolean}</cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.ISetApprovalStatusPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.SetApprovalStatusPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.ISetApprovalStatusPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.SetApprovalStatusPipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ApprovalStatusPolicy">
            <summary>
            Defines the approval status policy.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.ApprovalStatusPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ApprovalStatusPolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ApprovalStatusPolicy.Draft">
            <summary>
            Gets or sets the draft.
            </summary>
            <value>
            The draft.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.ApprovalStatusPolicy.ReadyForApproval">
            <summary>
            Gets or sets the ready for approval.
            </summary>
            <value>
            The ready for approval.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.ApprovalStatusPolicy.Approved">
            <summary>
            Gets or sets the approved.
            </summary>
            <value>
            The approved.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.Certificate">
            <summary>
            Defines the certificate
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Certificate.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>
            The subject.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Certificate.IssuerCN">
            <summary>
            Gets or sets the issuer cn.
            </summary>
            <value>
            The issuer cn.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Certificate.Thumbprint">
            <summary>
            Gets or sets the thumbprint.
            </summary>
            <value>
            The thumbprint.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Certificate.DefaultRoles">
            <summary>
            Gets or sets the default roles tied to the certificate.
            </summary>
            <value>
            Default roles tied to the certificate.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.CertificatesSettings">
            <summary>
            Defines the certificates settings
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CertificatesSettings.Certificates">
            <summary>
            Gets or sets the certificates.
            </summary>
            <value>
            The certificates.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CertificatesSettings.CertificateHeaderName">
            <summary>
            Gets or sets the header name.
            </summary>
            <value>
            The header name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CertificatesSettings.ValidationEnabled">
            <summary>
            Gets or sets a value indicating whether [validation enabled].
            </summary>
            <value>
              <c>true</c> if [validation enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.ClientCertificateValidationMiddleware">
            <summary>
            Defines the client certificate validation middleware
            When a HTTP request is received, the Invoke method is run for every request, and the configuration and logging types are passed to the middleware.
            The Invoke method will validate the certificate that is passed. 
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ClientCertificateValidationMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{Sitecore.Commerce.Core.ClientCertificateValidationMiddleware},Microsoft.Extensions.Options.IOptions{Sitecore.Commerce.Core.CertificatesSettings})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ClientCertificateValidationMiddleware"/> class.
            </summary>
            <param name="next">The next.</param>
            <param name="logger">The logger.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.ClientCertificateValidationMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invokes the specified context.
            </summary>
            <param name="context">The context.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.ClientCertificateValidationMiddleware.IsValidClientCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Determines whether [is valid client certificate] [the specified certificate].
            </summary>
            <param name="certificate">The certificate.</param>
            <returns>
              <c>true</c> if [is valid client certificate] [the specified certificate]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ClientCertificateValidationMiddlewareExtensions">
            <summary>
            Extension method used to add the client certificate validation middleware to the HTTP request pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ClientCertificateValidationMiddlewareExtensions.UseClientCertificateValidationMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Uses the client certificate validation middleware.
            </summary>
            <param name="builder">The builder.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.ClientCertificateValidationMiddlewareExtensions.UseClientCertificateValidationMiddleware(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Options.IOptions{Sitecore.Commerce.Core.CertificatesSettings})">
            <summary>
            Uses the client certificate validation middleware.
            </summary>
            <param name="builder">The builder.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.RoleAuthorizationRequirement">
            <summary>
            Role Authorization Requirement
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.RoleAuthorizationRequirement.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RoleAuthorizationRequirement"/> class.
            </summary>
            <param name="certificateHeaderName">The certificate header name</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.RoleAuthorizationRequirement.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Sitecore.Commerce.Core.RoleAuthorizationRequirement)">
            <inheritdoc />
            <summary>
            Handles Roles Authorization Requirement
            </summary>
            <param name="context"></param>
            <param name="requirement"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.RoleAuthorizationRequirement.ValidateDuplicateKeys(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext)">
            <summary>
            Validates the duplicate keys.
            </summary>
            <param name="mvcContext">The MVC context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.RoleAuthorizationRequirement.ValidateDuplicateKey(Microsoft.AspNetCore.Mvc.Filters.AuthorizationFilterContext,System.String)">
            <summary>
            Validates the duplicate key.
            </summary>
            <param name="mvcContext">The MVC context.</param>
            <param name="key">The key.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.BootstrapPipeline">
            <inheritdoc />
            <summary>
            Defines the bootstrap environment pipeline.
            </summary>
            <seealso cref="T:System.String" />
            <seealso cref="T:Sitecore.Commerce.Core.IBootstrapPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.BootstrapPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IBootstrapPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.BootstrapPipeline" /> class.
            </summary>
            <param name="configuration">
            The definition.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.IBootstrapPipeline">
            <summary>
            Defines the bootstrap environment pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetCacheStoresCommand">
            <summary>
            Defines the get cache stores command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCacheStoresCommand.#ctor(Sitecore.Commerce.Core.IGetCacheStoresPipeline,Sitecore.Commerce.Core.Commands.GetEnvironmentCommand,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetCacheStoresCommand"/> class.
            </summary>
            <param name="getCacheStoresPipeline">The get cache stores pipeline.</param>
            <param name="getEnvironmentCommand">The get environment command.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCacheStoresCommand.Process(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            The process.
            </summary>
            <param name="commerceContext">
            The context.
            </param>
            <returns>
            A list of <see cref="T:Sitecore.Commerce.Core.CacheStoreModel"/>
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.EnvironmentCacheComponent">
            <summary>
            Defines a component to store a Cache for an Environment.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Component" />
        </member>
        <member name="M:Sitecore.Commerce.Core.EnvironmentCacheComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.EnvironmentCacheComponent"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.EnvironmentCacheComponent.CacheStore">
            <summary>
            Gets or sets the cache store.
            </summary>
            <value>
            The cache store.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.EnvironmentCacheComponent.Caches">
            <summary>
            Gets or sets the caches.
            </summary>
            <value>
            The caches.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.EnvironmentCacheComponent.CacheFactory">
            <summary>
            Gets or sets the cache factory.
            </summary>
            <value>
            The cache factory.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.FromEntityCacheComponent">
            <summary>
            Defines a component that indicates the Entity was retrieved from the Entity CacheModel.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Component" />
        </member>
        <member name="T:Sitecore.Commerce.Core.NegativeCache">
            <summary>
            Defines the negative cache entity
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CommerceEntity" />
        </member>
        <member name="M:Sitecore.Commerce.Core.NegativeCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.NegativeCache"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.CacheHit">
            <summary>
            Defines the cache hit model
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Model" />
        </member>
        <member name="M:Sitecore.Commerce.Core.CacheHit.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CacheHit"/> class.
            </summary>
            <param name="itemKey">The item key.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.CacheHit.ItemKey">
            <summary>
            Gets or sets the item key.
            </summary>
            <value>
            The item key.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.CacheModel">
            <summary>
            Defines the cache model.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Model" />
        </member>
        <member name="M:Sitecore.Commerce.Core.CacheModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CacheModel"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CacheModel.Hits">
            <summary>
            Gets or sets the hits.
            </summary>
            <value>
            The hits.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CacheModel.Misses">
            <summary>
            Gets or sets the misses.
            </summary>
            <value>
            The misses.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CacheModel.StoreName">
            <summary>
            Gets or sets the name of the store.
            </summary>
            <value>
            The name of the store.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.CacheRequest">
            <summary>
            Defines the cache latest request model
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Model" />
        </member>
        <member name="M:Sitecore.Commerce.Core.CacheRequest.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CacheRequest"/> class.
            </summary>
            <param name="entityId">The entity id</param>
            <param name="version">The entity version.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.CacheRequest.EntityId">
            <summary>
            Gets or sets the entity id.
            </summary>
            <value>
            The entity id.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CacheRequest.Version">
            <summary>
            Gets or sets the requested entity version.
            </summary>
            <value>
            The entity version.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.CacheStoreModel">
            <summary>
            Defines the cache store model.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Model" />
        </member>
        <member name="M:Sitecore.Commerce.Core.CacheStoreModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CacheStoreModel"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CacheStoreModel.MaxSize">
            <summary>
            Gets or sets the maximum size.
            </summary>
            <value>
            The maximum size.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CacheStoreModel.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CacheStoreModel.ItemsCount">
            <summary>
            Gets or sets the items count.
            </summary>
            <value>
            The items count.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CacheStoreModel.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CacheStoreModel.Caches">
            <summary>
            Gets or sets the caches.
            </summary>
            <value>
            The caches.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.CacheStoreCacheArgument">
            <summary>
            Defines the cache store cache argument
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.PipelineArgument" />
        </member>
        <member name="M:Sitecore.Commerce.Core.CacheStoreCacheArgument.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CacheStoreCacheArgument"/> class.
            </summary>
            <param name="cacheStoreName">Name of the cache store.</param>
            <param name="cacheName">Name of the cache.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.CacheStoreCacheArgument.CacheStoreName">
            <summary>
            Gets or sets the name of the cache store.
            </summary>
            <value>
            The name of the cache store.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CacheStoreCacheArgument.CacheName">
            <summary>
            Gets or sets the name of the cache.
            </summary>
            <value>
            The name of the cache.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.EnvironmentCacheArgument">
            <summary>
            Defines the environment cache argument.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.EnvironmentCacheArgument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.EnvironmentCacheArgument"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.EnvironmentCacheArgument.EnvironmentName">
            <summary>
            Gets or sets the name of the environment.
            </summary>
            <value>
            The name of the environment.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.EnvironmentCacheArgument.CacheName">
            <summary>
            Gets or sets the name of the cache.
            </summary>
            <value>
            The name of the cache.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetEntityFromCacheArgument">
            <summary>
            Defines the get entity from cache argument.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetEntityFromCacheArgument.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetEntityFromCacheArgument"/> class.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <param name="entityType">Type of the entity.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.GetEntityFromCacheArgument.EntityId">
            <summary>
            Gets or sets the entity identifier.
            </summary>
            <value>
            The entity identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GetEntityFromCacheArgument.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.ClearCacheStoreBlock">
            <summary>
             Defines the clear cache store block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.String, System.Boolean,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.ClearCacheStoreBlock.#ctor(Sitecore.Framework.Caching.ICacheManager,Sitecore.Framework.Caching.ICacheStoreManager,Sitecore.Commerce.Core.NodeContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ClearCacheStoreBlock"/> class.
            </summary>
            <param name="cacheManager">The cache manager.</param>
            <param name="cacheStoreManager">The cache store manager.</param>
            <param name="nodeContext">The NodeContext.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.ClearCacheStoreBlock.Run(System.String,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            True is cache store was cleared, false otherwise.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ClearCacheStoreCacheBlock">
            <summary>
            Defines the clear cache store cache block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.CacheStoreCacheArgument, System.Boolean,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.ClearCacheStoreCacheBlock.#ctor(Sitecore.Framework.Caching.ICacheManager,Sitecore.Commerce.Core.NodeContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ClearCacheStoreCacheBlock"/> class.
            </summary>
            <param name="cacheManager">The cache manager.</param>
            <param name="nodeContext">The NodeContext.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.ClearCacheStoreCacheBlock.Run(Sitecore.Commerce.Core.CacheStoreCacheArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            True is cache store was cleared, false otherwise.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.FindEntityInMemoryCacheBlock">
            <summary>
            Finds an entity in the cache store in use
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.FindEntityArgument,
                    Sitecore.Commerce.Core.FindEntityArgument, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.FindEntityInMemoryCacheBlock.#ctor(Sitecore.Commerce.Core.IGetEnvironmentCachePipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.FindEntityInMemoryCacheBlock"/> class.
            </summary>
            <param name="cachePipeline">The cache pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.FindEntityInMemoryCacheBlock.Run(Sitecore.Commerce.Core.FindEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.FindEntityArgument"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetCacheStoresBlock">
            <summary>
            Defines the get cache stores block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.String,
                    System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.CacheStoreModel},
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCacheStoresBlock.#ctor(Sitecore.Framework.Caching.ICacheStoreManager,Sitecore.Framework.Caching.ICacheManager,Sitecore.Commerce.Core.NodeContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetCacheStoresBlock" /> class.
            </summary>
            <param name="cacheStoreManager">The cache store manager.</param>
            <param name="cacheManager">The cache manager.</param>
            <param name="nodeContext">The node context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCacheStoresBlock.Run(System.String,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            A list of <see cref="T:Sitecore.Commerce.Core.CacheStoreModel"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCacheStoresBlock.GetCacheStores(System.String)">
            <summary>
            Gets the cache stores.
            </summary>
            <param name="cacheStoreName">Name of the cache store.</param>
            <returns>An enumerable of <see cref="T:Sitecore.Commerce.Core.CacheStoreModel"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCacheStoresBlock.GetEnvironmentsCacheStores(System.String)">
            <summary>
            Gets the environments cache stores.
            </summary>
            <param name="cacheStoreName">Name of the cache store.</param>
            <returns>An enumerable of <see cref="T:Sitecore.Commerce.Core.CacheStoreModel"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetEntityFromCacheBlock">
            <summary>
            Defines the get entity from cache block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.String, System.String,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetEntityFromCacheBlock.#ctor(Sitecore.Commerce.Core.IGetEnvironmentCachePipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetEntityFromCacheBlock"/> class.
            </summary>
            <param name="cachePipeline">The cache pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetEntityFromCacheBlock.Run(Sitecore.Commerce.Core.GetEntityFromCacheArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetEnvironmentCacheBlock">
            <summary>
            Defines the get environment cache block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.EnvironmentCacheArgument,
                    Sitecore.Framework.Caching.ICache, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetEnvironmentCacheBlock.#ctor(Sitecore.Framework.Caching.ICacheFactory,Sitecore.Commerce.Core.NodeContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetEnvironmentCacheBlock" /> class.
            </summary>
            <param name="cacheFactory">The cache factory.</param>
            <param name="nodeContext">The node context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetEnvironmentCacheBlock.Run(Sitecore.Commerce.Core.EnvironmentCacheArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            A list of <see cref="T:Sitecore.Commerce.Core.CacheStoreModel"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.RemoveEntityFromMemoryCacheBlock">
            <summary>
            Defines the block that removes an entity that is stored in the memory cache
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.DeleteEntityArgument,
                    Sitecore.Commerce.Core.DeleteEntityArgument, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.RemoveEntityFromMemoryCacheBlock.#ctor(Sitecore.Commerce.Core.IGetEnvironmentCachePipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RemoveEntityFromMemoryCacheBlock"/> class.
            </summary>
            <param name="cachePipeline">The cache pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.RemoveEntityFromMemoryCacheBlock.Run(Sitecore.Commerce.Core.DeleteEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A string</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.StoreCommerceEntityInMemoryCacheBlock">
            <summary>
            Stores a CommerceEntity in the memory cache if specified by the Entity Caching policy.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.CommerceEntity,
                    Sitecore.Commerce.Core.CommerceEntity, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.StoreCommerceEntityInMemoryCacheBlock.#ctor(Sitecore.Commerce.Core.IGetEnvironmentCachePipeline,Sitecore.Commerce.Core.Commands.EntitySerializerCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.StoreCommerceEntityInMemoryCacheBlock" /> class.
            </summary>
            <param name="cachePipeline">The cache pipeline.</param>
            <param name="entitySerializerCommand">The entity serializer command.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.StoreCommerceEntityInMemoryCacheBlock.Run(Sitecore.Commerce.Core.CommerceEntity,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.StoreEntityInCacheBlock">
            <summary>
            Defines the block that stores an Entity in the CacheModel
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.CommerceEntity,
                    Sitecore.Commerce.Core.CommerceEntity, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.StoreEntityInCacheBlock.#ctor(Sitecore.Commerce.Core.IGetEnvironmentCachePipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.StoreEntityInCacheBlock"/> class.
            </summary>
            <param name="cachePipeline">The cache pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.StoreEntityInCacheBlock.Run(Sitecore.Commerce.Core.CommerceEntity,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.StoreEntityInMemoryCacheBlock">
            <summary>
            Defines the store entity in memory cache block
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.PersistEntityArgument,
                    Sitecore.Commerce.Core.PersistEntityArgument, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.StoreEntityInMemoryCacheBlock.#ctor(Sitecore.Commerce.Core.IGetEnvironmentCachePipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.StoreEntityInMemoryCacheBlock"/> class.
            </summary>
            <param name="cachePipeline">The cache pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.StoreEntityInMemoryCacheBlock.Run(Sitecore.Commerce.Core.PersistEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ValidateCacheStoreNameBlock">
            <summary>
            Defines the validate cache store name block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.String, System.String,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidateCacheStoreNameBlock.#ctor(Sitecore.Framework.Caching.ICacheStoreManager,Sitecore.Commerce.Core.NodeContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ValidateCacheStoreNameBlock" /> class.
            </summary>
            <param name="storeManager">The store manager.</param>
            <param name="nodeContext">The node context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidateCacheStoreNameBlock.Run(System.String,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The cache store name
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ClearCacheStoreCachePipeline">
            <summary>
            Defines the clear cache store cache pipeline.
            </summary>
            <seealso>
                <cref>Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.CacheStoreCacheArgument, System.Boolean}</cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IClearCacheStoreCachePipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.ClearCacheStoreCachePipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IClearCacheStoreCachePipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ClearCacheStoreCachePipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ClearCacheStorePipeline">
            <summary>
            Defines the clear cache store pipeline.
            </summary>
            <seealso>
                <cref>Sitecore.Commerce.Core.CommercePipeline{System.String, System.Boolean}</cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IClearCacheStorePipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.ClearCacheStorePipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IClearCacheStorePipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ClearCacheStorePipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetCacheStoresPipeline">
            <summary>
            Defines the get cache stores pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{System.String,
                    System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.CacheStoreModel}}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IGetCacheStoresPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCacheStoresPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IGetCacheStoresPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetCacheStoresPipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetEntityFromCachePipeline">
            <summary>
            Defines the pipeline to retrieve a CommerceEntity from cache.
            Pass in a fully qualified id and type of the entity
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.GetEntityFromCacheArgument,
                    Sitecore.Commerce.Core.CommerceEntity}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IGetEntityFromCachePipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetEntityFromCachePipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IGetEntityFromCachePipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetEntityFromCachePipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetEnvironmentCachePipeline">
            <summary>
            Defines the get environment cache pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.EnvironmentCacheArgument,
                    Sitecore.Framework.Caching.ICache}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IGetEnvironmentCachePipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetEnvironmentCachePipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IGetEnvironmentCachePipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetEnvironmentCachePipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.IClearCacheStoreCachePipeline">
            <summary>
            Defines the clear cache store cache pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.CacheStoreCacheArgument, System.Boolean,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IClearCacheStorePipeline">
            <summary>
            Defines the clear cache store pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{System.String, System.Boolean,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IGetCacheStoresPipeline">
            <summary>
            Defines the get cache stores pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{System.String,
                    System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.CacheStoreModel},
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IGetEntityFromCachePipeline">
            <summary>
            Pipeline to retrieve a CommerceEntity from cache.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.GetEntityFromCacheArgument,
                    Sitecore.Commerce.Core.CommerceEntity, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IGetEnvironmentCachePipeline">
            <summary>
            Defines the get environment cache pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.EnvironmentCacheArgument,
                    Sitecore.Framework.Caching.ICache, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IStoreEntityInCachePipeline">
            <summary>
            Defines the pipeline to store a CommerceEntity in the Entity cache.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.CommerceEntity,
                    Sitecore.Commerce.Core.CommerceEntity, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.StoreEntityInCachePipeline">
            <summary>
            Defines the pipeline to store a CommerceEntity in cache.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.CommerceEntity,
                    Sitecore.Commerce.Core.CommerceEntity}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IStoreEntityInCachePipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.StoreEntityInCachePipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IStoreEntityInCachePipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.StoreEntityInCachePipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.CacheLoggingPolicy">
            <summary>
            Defines the cache logging policy
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.CacheLoggingPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CacheLoggingPolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CacheLoggingPolicy.LogSkipCache">
            <summary>
            Gets or sets a value indicating whether [log skip cache].
            </summary>
            <value>
              <c>true</c> if [log skip cache]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.CachePolicy">
            <summary>
            Defines the cache policy
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.CachePolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CachePolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CachePolicy.CacheName">
            <summary>
            Gets or sets the name of the cache.
            </summary>
            <value>
            The name of the cache.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CachePolicy.Expiration">
            <summary>
            Gets or sets the expiration.
            </summary>
            <value>
            The expiration.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CachePolicy.AllowCaching">
            <summary>
            Gets or sets a value indicating whether [allow caching].
            </summary>
            <value>
              <c>true</c> if [allow caching]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.CachePolicy.GetCacheEntryOptions">
            <summary>
            Gets the cache entry options.
            </summary>
            <returns>A <see cref="T:Sitecore.Framework.Caching.CacheEntryOptions"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Caching.EntityMemoryCachingPolicy">
            <summary>
            Defines the policy driving the memory caching for the Commerce Entity
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Caching.EntityMemoryCachingPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Caching.EntityMemoryCachingPolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Caching.EntityMemoryCachingPolicy.EntityFullName">
            <summary>
            Gets or sets the full name of the entity.
            </summary>
            <value>
            The full name of the entity.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Caching.EntityMemoryCachingPolicy.Priority">
            <summary>
            Gets or sets the priority.
            Caching priority
            Valid options: Normal, High, Low, NeverRemove
            </summary>
            <value>
            The priority.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Caching.EntityMemoryCachingPolicy.CacheAsEntity">
            <summary>
            Gets or sets a value indicating whether [cache as entity].
            If true, will cache as a CommerceEntity rather than a serialized string
            </summary>
            <value>
              <c>true</c> if [cache as entity]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Caching.EntityMemoryCachingPolicy.HasNegativeCaching">
            <summary>
            Gets or sets a value indicating whether this instance has negative caching.
            If true, will cache the fact an entity does not exist, reducing the need to constantly go back to the persistent store
            </summary>
            <value>
            <c>true</c> if this instance has negative caching; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.Caching.EntityMemoryCachingPolicy.GetCachePolicy(Sitecore.Commerce.Core.CommerceContext,System.Type)">
            <summary>
            Gets the cache policy.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="arg">The argument.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Caching.EntityMemoryCachingPolicy"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.CommandMessage">
            <summary>
            Defines a command message.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CommandMessage"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommandMessage.MessageDate">
            <summary>
            Gets or sets the message date.
            </summary>
            <value>
            The message date.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommandMessage.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommandMessage.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommandMessage.CommerceTermKey">
            <summary>
            Gets or sets the commerce term key.
            </summary>
            <value>
            The commerce term key.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.CommandsServiceCollectionExtensions">
            <summary>
            The commands service collection extensions.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandsServiceCollectionExtensions.RegisterAllCommands(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly)">
            <summary>
            Registers all of the commands for this assembly.
            Commands implement the <see cref="T:Sitecore.Commerce.Core.Commands.ICommerceCommand"/> interface
            </summary>
            <param name="services">
            The services collection.
            </param>
            <param name="assembly">
            The assembly to register the pipeline blocks from
            </param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.CommerceCommander">
            <inheritdoc />
            <summary>
            Defines the base commerce commander
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceCommander.#ctor(System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CommerceCommander" /> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceCommander.CurrentNodeContext(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Currents the node context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <returns>a <see cref="T:Sitecore.Commerce.Core.NodeContext"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceCommander.GetGlobalContext(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Gets an instance of a GlobalContext
            </summary>
            <param name="commerceContext">The call commerceContext</param>
            <returns>A CommerceContext representing the Global Context</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceCommander.GetGlobalPipelineContext(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Gets an instance of a Pipeline Context for passing into a Pipeline
            </summary>
            <param name="commerceContext">The call level CommerceContext</param>
            <returns>Pipeline Context Options</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceCommander.GetEntity``1(Sitecore.Commerce.Core.CommerceContext,System.String,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Gets the entity.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="commerceContext">The commerce context.</param>
            <param name="entityId">The entity identifier.</param>
            <param name="entityVersion">The entity version.</param>
            <param name="autoCreate">if set to <c>true</c> [automatic create].</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceCommander.GetEntity``1(Sitecore.Commerce.Core.CommerceContext,System.String,System.Boolean)">
            <summary>
            Gets the entity.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="commerceContext">The commerce context.</param>
            <param name="entityId">The entity identifier.</param>
            <param name="autoCreate">if set to <c>true</c> [automatic create].</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceCommander.GetGlobalEntity``1(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            Gets the global entity.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="commerceContext">The commerce context.</param>
            <param name="entityId">The entity identifier.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceCommander.PersistEntity(Sitecore.Commerce.Core.CommerceContext,Sitecore.Commerce.Core.CommerceEntity)">
            <summary>
            Persists the entity.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="entity">The entity.</param>
            <returns>True if the entity was persisted.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceCommander.DeleteEntity(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            Deletes the entity.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="entityId">The entity identifier.</param>
            <returns>True if the entity was deleted.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceCommander.PersistGlobalEntity(Sitecore.Commerce.Core.CommerceContext,Sitecore.Commerce.Core.CommerceEntity)">
            <summary>
            Persists the global entity.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="entity">The entity.</param>
            <returns>True if the entity was persisted.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceCommander.GetLocalizeTerm(Sitecore.Commerce.Core.CommerceContext,System.String,System.Object[],System.String)">
            <summary>
            Gets the localize term.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="termKey">The term key.</param>
            <param name="args">The arguments.</param>
            <param name="language">The language.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.LocalizedTerm"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceCommander.GetLocalizeTerms(Sitecore.Commerce.Core.CommerceContext,System.String,System.String)">
            <summary>
            Gets the localize terms.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="termKey">The term key.</param>
            <param name="language">The language.</param>
            <returns>A sollection of <see cref="T:Sitecore.Commerce.Core.LocalizedTerm"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ListCommander">
            <inheritdoc />
            <summary>
            Defines the list commander.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.ListCommander.#ctor(System.IServiceProvider)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ListCommander" /> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.ListCommander.GetListItems``1(Sitecore.Commerce.Core.CommerceContext,System.String,System.Int32,System.Int32)">
            <summary>
            Gets items from a list
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="commerceContext">The commerceContext</param>
            <param name="listName">The list name</param>
            <param name="skip">The skip.</param>
            <param name="take">The take.</param>
            <returns>A list of items.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.ListCommander.GetListItemIds``1(Sitecore.Commerce.Core.CommerceContext,System.String,System.Int32,System.Int32)">
            <summary>
            Gets the list item ids.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="commerceContext">The commerce context.</param>
            <param name="listName">Name of the list.</param>
            <param name="skip">The skip.</param>
            <param name="take">The take.</param>
            <returns>The ids of the items in the list.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.ListCommander.RemoveItemsFromList(Sitecore.Commerce.Core.CommerceContext,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Removes items from a list
            </summary>
            <param name="commerceContext">The commerceContext</param>
            <param name="listName">The list name</param>
            <param name="entityIds">The entityIds.</param>
            <returns>True if the items were removed.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.KnownResultCodes">
            <summary>
            The KnownResultCodes policy.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.KnownResultCodes.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.KnownResultCodes"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.KnownResultCodes.Error">
            <summary>
            Gets or sets the error.
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.KnownResultCodes.ValidationError">
            <summary>
            Gets or sets the ValidationError.
            </summary>
            <value>
            The ValidationError.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.KnownResultCodes.Warning">
            <summary>
            Gets or sets the warning.
            </summary>
            <value>
            The warning.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.KnownResultCodes.Information">
            <summary>
            Gets or sets the information.
            </summary>
            <value>
            The information.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.TasksExtensions">
            <summary>
            Defines the tasks extensions
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.TasksExtensions.ToCommerceCommand(System.Threading.Tasks.Task{Sitecore.Commerce.Core.Commands.CommerceCommand})">
            <summary>
            Froms the task.
            </summary>
            <param name="task">The task.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Component">
            <summary>
            Defines the base component
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Component.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Component"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Component.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Component.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Component.Comments">
            <summary>
            Gets or sets the comments.
            </summary>
            <value>
            The comments.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Component.Policies">
            <summary>
            Gets or sets the policies.
            </summary>
            <value>
            The policies.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Component.ChildComponents">
            <summary>
            Gets or sets the child components.
            </summary>
            <value>
            The child components.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.Component.HasPolicy``1">
            <summary>
            Determines whether this instance has policy.
            </summary>
            <typeparam name="T">The type</typeparam>
            <returns>
              <c>true</c> if this instance has policy; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Component.GetPolicy``1">
            <summary>
            Helper method to resolve a policy
            If Policy is not located in the Policies list then Activator is called to create a new instance
            </summary>
            <typeparam name="T">
            Anything inheriting from GetPolicy
            </typeparam>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.Policy"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Component.SetPolicy(Sitecore.Commerce.Core.Policy)">
            <summary>
            Sets a policy.  Adds it if it doesn't exist, replaces it if it does.
            </summary>
            <param name="policy">The policy.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Component.RemovePolicy(System.Type)">
            <summary>
            Removes a specific policy by type if present
            </summary>
            <param name="policyType">The <see cref="T:System.Type"/>.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Component.HasComponent``1">
            <summary>
            The has component.
            </summary>
            <typeparam name="T">
            The sub component type
            </typeparam>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Component.GetComponent``1">
            <summary>
            The sub component.
            </summary>
            <typeparam name="T">
            The sub component type
            </typeparam>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.Component"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Component.GetComponents``1">
            <summary>
            Gets the components.
            </summary>
            <typeparam name="T">The type</typeparam>
            <returns>A list of <see cref="T:Sitecore.Commerce.Core.Component"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Component.SetComponent(Sitecore.Commerce.Core.Component)">
            <summary>
            Adds or Replaces a component in the entity
            </summary>
            <param name="component">The component to Add or Replace</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Component.RemoveComponent(System.Type)">
            <summary>
            Removes the component.
            </summary>
            <param name="componentType">Type of the component.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ContactComponent">
            <summary>
            Defines contact component.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ContactComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ContactComponent"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ContactComponent.ShopperId">
            <summary> 
            Gets or sets the Shopper Id.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ContactComponent.CustomerId">
            <summary> 
            Gets or sets the customer Id.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ContactComponent.IpAddress">
            <summary> 
            Gets or sets the Shopper IP address.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ContactComponent.Latitude">
            <summary> 
            Gets or sets the Shopper latitude
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ContactComponent.Longitude">
            <summary> 
            Gets or sets the Shopper longitude.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ContactComponent.Currency">
            <summary> 
            Gets or sets the currency
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ContactComponent.Language">
            <summary> 
            Gets or sets the language
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ContactComponent.Email">
            <summary> 
            Gets or sets the email
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ContactComponent.IsRegistered">
            <summary> 
            Gets or sets the is registered
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.InternetLocation">
            <summary>
            The internet location.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.InternetLocation.IpAddress">
            <summary>
            Gets or sets the ip address.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.InternetLocation.Uri">
            <summary>
            Gets or sets the uri.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.InternetLocation.Host">
            <summary>
            Gets or sets the host.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.InternetLocation.Port">
            <summary>
            Gets or sets the port.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.LifeCycle">
            <summary>
            Defines the lifecycle.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.LifeCycle.StartDate">
            <summary>
            Gets or sets the start date.
            </summary>
            <value>
            The start date.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LifeCycle.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>
            <value>
            The end date.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.LocalizedEntityComponent">
            <summary>
            Defines localized entity component.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Component" />
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizedEntityComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LocalizedEntityComponent"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizedEntityComponent.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LocalizedEntityComponent"/> class.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <param name="entityName">Name of the entity.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizedEntityComponent.Entity">
            <summary>
            Gets or sets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.MessageComponent">
            <summary>
            Defines the message component
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.MessageComponent.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.MessageComponent"/> class.
            </summary>
            <param name="code">The code.</param>
            <param name="text">The text.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.MessageComponent.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.MessageComponent.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.MessageModel">
            <summary>
            Defines the message model
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.MessageModel.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.MessageModel"/> class.
            </summary>
            <param name="code">The code.</param>
            <param name="text">The text.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.MessageModel.Code">
            <summary>
            A standardized code for the message
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.MessageModel.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.MessageModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.MessagesComponent">
            <summary>
            Defines the messages component
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Component" />
        </member>
        <member name="M:Sitecore.Commerce.Core.MessagesComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.MessagesComponent"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.MessagesComponent.Messages">
            <summary>
            Gets or sets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.MessagesComponent.AddMessage(System.String,System.String)">
            <summary>
            Adds the message.
            </summary>
            <param name="code">The code.</param>
            <param name="text">The message text.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.MessagesComponent.AddMessages(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.MessageModel})">
            <summary>
            Adds the messages.
            </summary>
            <param name="messages">The messages.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.MessagesComponent.GetMessages(System.String)">
            <summary>
            Gets the messages.
            </summary>
            <param name="code">The code.</param>
            <returns>A collection of <see cref="T:Sitecore.Commerce.Core.MessageComponent"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.MessagesComponent.Clear(System.String)">
            <summary>
            Clears the specified code.
            </summary>
            <param name="code">The code.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.Money">
            <summary>
            Common type defining the basic concept of Money.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Money.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Money"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Money.#ctor(System.String,System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Money"/> class.
            </summary>
            <param name="currencyCode">
            The currency code.
            </param>
            <param name="amount">
            The amount.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Money.#ctor(System.Decimal)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Money"/> class.
            </summary>
            <param name="amount">
            The amount.
            </param>
        </member>
        <member name="P:Sitecore.Commerce.Core.Money.CurrencyCode">
            <summary>
            Gets or sets the currency code.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Money.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Money.AsCurrency(System.Boolean,System.String)">
            <summary>
            As currency.
            </summary>
            <param name="displayCurrencyCode">if set to <c>true</c> [display currency code].</param>
            <param name="currencyGroupSeparator">The currency group separator.</param>
            <returns>A string representing amount as currency.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Money.AsCurrency(System.String)">
            <summary>
            As the currency.
            </summary>
            <param name="language">The language.</param>
            <returns>A string representing amount as currency.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Money.AsCurrency(System.String,System.String,System.Boolean)">
            <summary>
            As currency.
            </summary>
            <param name="format">The string format</param>
            <param name="language">The language.</param>
            <param name="displayCurrencyCode">Determines whether to display the currency code or not.</param>
            <returns>A string representing amount as currency.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.PolicySetsComponent">
            <summary>
            Defines policy sets component.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Component" />
        </member>
        <member name="T:Sitecore.Commerce.Core.PropertiesComponent">
            <summary>
            Defines properties component.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Component" />
        </member>
        <member name="M:Sitecore.Commerce.Core.PropertiesComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.PropertiesComponent"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.PropertiesComponent.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.PropertiesComponent.ContainsProperty(System.String)">
            <summary>
            Determines whether the specified key contains property.
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if the specified key contains property; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.PropertiesComponent.SetPropertyValue(System.String,System.Object)">
            <summary>
            Sets the property value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.PropertiesComponent.SetPropertyValue(System.String)">
            <summary>
            Sets the property value.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.PropertiesComponent.GetPropertyValue(System.String)">
            <summary>
            Gets the property value.
            </summary>
            <param name="key">The key.</param>
            <returns>The value of a property.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.PropertiesComponent.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.ConfigureOpsServiceApiBlock">
            <summary>
            Defines a block which configures the OData model for the plugin
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Microsoft.AspNetCore.OData.Builder.ODataConventionModelBuilder,
                    Microsoft.AspNetCore.OData.Builder.ODataConventionModelBuilder,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.ConfigureOpsServiceApiBlock.Run(Microsoft.AspNetCore.OData.Builder.ODataConventionModelBuilder,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The execute.
            </summary>
            <param name="modelBuilder">The argument.</param>
            <param name="context">The context.</param>
            <returns>
            The <see cref="T:Microsoft.AspNetCore.OData.Builder.ODataConventionModelBuilder" />.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ConfigureServiceApiBlock">
            <summary>
            Defines a block which configures the OData model for the plugin
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ConfigureServiceApiBlock.Run(Microsoft.AspNetCore.OData.Builder.ODataConventionModelBuilder,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The execute.
            </summary>
            <param name="modelBuilder">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Microsoft.AspNetCore.OData.Builder.ODataConventionModelBuilder"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ConfigureSitecore">
            <summary>
             The core ConfigureSitecore class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ConfigureSitecore.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            The configure services.
            </summary>
            <param name="services">
            The services.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.CommerceContext">
            <summary>
            Defines the commerce context.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.ApplicationInsights.TelemetryClient,Sitecore.Commerce.Core.IGetLocalizableMessagePipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CommerceContext"/> class.
            </summary>
            <param name="logger">The logger.</param>
            /// <param name="telemetryClient">Telemetry Client</param>
            <param name="getLocalizableMessagePipeline">The get localizable message pipeline.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.TelemetryClient">
            <summary>
            Gets the Telemetry Client.
            </summary>
            <value>
            The Telemetry Client.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.Logger">
            <summary>
            Gets the logger.
            </summary>
            <value>
            The logger.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.LocalizableMessagePipeline">
            <summary>
            Gets the localizable message pipeline.
            </summary>
            <value>
            The localizable message pipeline.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.Environment">
            <summary>
            Gets or sets the environment.
            </summary>
            <value>
            The environment.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.GlobalEnvironment">
            <summary>
            Gets or sets the global environment.
            </summary>
            <value>
            The global environment.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.Location">
            <summary>
            Gets or sets the location
            </summary>
            <value>
            The location.
            </value>
            <returns>The <see cref="T:Sitecore.Commerce.Core.GeoLocation"/> default information based off of location policy</returns>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.ContactId">
            <summary>
            Gets or sets the contact identifier.
            </summary>
            <value>
            The contact identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.ConnectionId">
            <summary>
            Gets or sets the connection identifier.
            </summary>
            <value>
            The connection identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.CorrelationId">
            <summary>
            Gets or sets the correlation identifier.
            </summary>
            <value>
            The correlation identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.IsOriginCertified">
            <summary>
            Gets or sets a value indicating whether this instance is certified by origin.
            </summary>
            <value>
              <c>true</c> if this instance is certified by origin; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.Headers">
            <summary>
            Gets or sets the headers.
            </summary>
            <value>
            The headers.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.Objects">
            <summary>
            Gets or sets the objects.
            </summary>
            <value>
            The objects.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.TrackActivityPipeline">
            <summary>
            Gets or sets the track activity pipeline.
            </summary>
            <value>
            The track activity pipeline.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.Messages">
            <summary>
            Gets or sets the messages.
            </summary>
            <value>
            The messages.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.Models">
            <summary>
            Gets or sets the models.
            </summary>
            <value>
            The models.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.Entities">
            <summary>
            Gets or sets the entities.
            </summary>
            <value>
            The entities.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceContext.HasFaultInjection">
            <summary>
            Gets a value indicating whether this instance has fault injection.
            </summary>
            <value>
            <c>true</c> if this instance has fault injection; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.CurrentShopName">
            <summary>
            Current the name of the shop.
            </summary>
            <returns>The current shop name in the request header.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.CurrentShopperId">
            <summary>
            Current the shopper identifier.
            </summary>
            <returns>The current shopper id in the request header.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.CurrentCsrId">
            <summary>
            Current Csr identifier.
            </summary>
            <returns>If header is present, the Csr id, otherwise a default id.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.CurrentCsrEmail">
            <summary>
            Currents the CSR email.
            </summary>
            <returns>If header is present, the Csr email, otherwise an empty string.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.CurrentCustomerId">
            <summary>
            Currents the customer identifier.
            </summary>
            <returns>The current customer id in the request header.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.CurrentCurrency">
            <summary>
            returns the current currency or the default currency if there is no currency in the request header.
            </summary>
            <returns>The current currency in the request header or the default currency.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.PolicyKeys">
            <summary>
            Policies the keys.
            </summary>
            <returns>A list of keys</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.CurrentLanguage">
            <summary>
            Currents the language.
            </summary>
            <returns>The current language in the request header.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.CurrentEffectiveDate">
            <summary>
            Represents the effective date of the activity. This allows time travel calls to use a passed in date from the header
            </summary>
            <returns>The current effective date in the request header.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.CurrentGeoLocation">
            <summary>
            The current geo location
            </summary>
            <returns>the <see cref="T:Sitecore.Commerce.Core.GeoLocation"/> information from the header or default information based off of location policy</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.CurrentLatitude">
            <summary>
            Currents the latitude.
            </summary>
            <returns>The current latitude in the request header.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.CurrentLongitude">
            <summary>
            Currents the longitude.
            </summary>
            <returns>The current longitude in the request header.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.CurrentIpAddress">
            <summary>
            Currents the IP address.
            </summary>
            <returns>The current IP address in the request header.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.CurrentRoles">
            <summary>
            Currents the roles.
            </summary>
            <returns>The current roles in the request header.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.HasRole(System.String)">
            <summary>
            Determines whether the specified role name has role.
            </summary>
            <param name="roleName">Name of the role.</param>
            <returns>
              <c>true</c> if the specified role name has role; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.CurrentUserIsRegistered">
            <summary>
            Currents the user is registered.
            </summary>
            <returns>If the current user is registered or not base on value in the request header.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.InjectedFaults">
            <summary>
            Injected the faults.
            </summary>
            <returns>A list of faults.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.HasErrors">
            <summary>
            Determines whether this instance has errors.
            </summary>
            <returns>
              <c>true</c> if this instance has errors; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.AddMessage(Sitecore.Commerce.Core.CommandMessage)">
            <summary>
            Adds a message to the context.
            </summary>
            <param name="message">The command message.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.AddMessage(System.String,System.String,System.Object[],System.String)">
            <summary>
            Adds the message.
            </summary>
            <param name="code">The code.</param>
            <param name="commerceTermKey">The commerce term key.</param>
            <param name="args">The arguments.</param>
            <param name="defaultMessage">The default message.</param>
            <returns>The localized message if found, otherwise the default message.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetMessages">
            <summary>
            Gets the list of messages associated with this context.
            </summary>
            <returns>The list of messages associated with this context.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetMessages(System.Func{Sitecore.Commerce.Core.CommandMessage,System.Boolean})">
            <summary>
            Gets the list of messages associated with this context.
            </summary>
            <param name="predicate">A function that checks entries for a match.</param>
            <returns>The list of messages associated with this context.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetMessage(System.Func{Sitecore.Commerce.Core.CommandMessage,System.Boolean})">
            <summary>
            Gets the first message matching the provided <paramref name="predicate"/>.
            </summary>
            <param name="predicate">The match criteria.</param>
            <returns>The first message matching the provided <paramref name="predicate"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.AnyMessage(System.Func{Sitecore.Commerce.Core.CommandMessage,System.Boolean})">
            <summary>
            Checks if any message in the context matches the provided <paramref name="predicate"/>.
            </summary>
            <param name="predicate">The match criteria.</param>
            <returns>True if a message matches the provided <paramref name="predicate"/>, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.LogException(System.String,System.Exception)">
            <summary>
            Logs the exception.
            </summary>
            <param name="caller">The caller.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.LogExceptionAndMessage(System.String,System.Exception)">
            <summary>
            Logs the exception and message.
            </summary>
            <param name="caller">The caller.</param>
            <param name="ex">The ex.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.AddDataMessage(System.String,System.String)">
            <summary>
            Adds the data message.
            </summary>
            <param name="messageType">Type of the message.</param>
            <param name="dataMessage">The data message.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.ClearMessages">
            <summary>
            Clears the messages.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetObjects``1">
            <summary>
            Retrieves a list of objects of a specific type.
            </summary>
            <typeparam name="T">
            Any T
            </typeparam>
            <returns>
            A list of type T.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetObject``1(System.Func{``0,System.Boolean})">
            <summary>
            Gets the first object of a specific type from the objects collection matching the provided <paramref name="predicate"/>.
            </summary>
            <param name="predicate">The match predicate.</param>
            <typeparam name="T">The type of object to retrieve.</typeparam>
            <returns>The first available object of the specified type, matching the provided <paramref name="predicate"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetObject``1">
            <summary>
            Gets the first object of a specific type from the objects collection.
            </summary>
            <typeparam name="T">The type of object to retrieve.</typeparam>
            <returns>The first available object of the specified type.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.AddUniqueObjectByType(System.Object)">
            <summary>
            Adds a unique object by type.
            </summary>
            <param name="uniqueObject">The unique object.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.AddUniqueObject(System.Object)">
            <summary>
            Adds a unique object.
            </summary>
            <param name="uniqueObject">The unique object.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.AddObject(System.Object)">
            <summary>
            Adds a object to the Objects collection.
            </summary>
            <param name="objectToAdd">The object.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.RemoveObject(System.Object)">
            <summary>
            Removes the object.
            </summary>
            <param name="objectToRemove">The object to remove.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.RemoveObjects``1(System.Func{``0,System.Boolean})">
            <summary>
            Removes the objects.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="predicate">The predicate.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.RemoveObjects``1">
            <summary>
            Removes the objects.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.ClearObjects">
            <summary>
            Clears the objects.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetEntities">
            <summary>
            Gets the entities.
            </summary>
            <returns>A list of entities</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetEntities``1">
            <summary>
            Gets the entities.
            </summary>
            <typeparam name="T">The entity type</typeparam>
            <returns>A list of entities</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetEntity``1">
            <summary>
            Gets the the first available entity of the specified type.
            </summary>
            <typeparam name="T">The entity type</typeparam>
            <returns>The first available entity of the specified type.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetEntity``1(System.Func{``0,System.Boolean})">
            <summary>
            Gets the the first available entity of the specified type that matches the provided <paramref name="predicate"/>.
            </summary>
            <typeparam name="T">The entity type</typeparam>
            <param name="predicate">The match predicate.</param>
            <returns>The first available entity of the specified type that matches the provided <paramref name="predicate"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.AddEntity(Sitecore.Commerce.Core.CommerceEntity)">
            <summary>
            Adds the entity.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.AddUniqueEntityByType(Sitecore.Commerce.Core.CommerceEntity)">
            <summary>
            Adds the type of the unique entity by.
            </summary>
            <param name="uniqueEntity">The unique entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.AddUniqueEntity(Sitecore.Commerce.Core.CommerceEntity)">
            <summary>
            Adds the unique entity.
            </summary>
            <param name="uniqueEntity">The unique entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.ClearEntities">
            <summary>
            Clears the entities.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetModels``1">
            <summary>
            Gets list of models of the specified type..
            </summary>
            <typeparam name="T">The type of model to retrieve.</typeparam>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Model"/> list.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetModel``1">
            <summary>
            Gets the first model of the specified type.
            </summary>
            <typeparam name="T">The type of model to retrieve.</typeparam>
            <returns>the first model of the specified type.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetModel``1(System.Func{``0,System.Boolean})">
            <summary>
            Gets the first model of the specified type matching the specified <paramref name="predicate"/>.
            </summary>
            <param name="predicate">The match criteria.</param>
            <typeparam name="T">The type of model to retrieve.</typeparam>
            <returns>the first model of the specified type matching the specified <paramref name="predicate"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetModels">
            <summary>
            Gets the models.
            </summary>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Model"/> list.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.AddUniqueModelByType(Sitecore.Commerce.Core.Model)">
            <summary>
            Adds the type of the unique model by.
            </summary>
            <param name="uniqueModel">The unique model.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.AddUniqueModel(Sitecore.Commerce.Core.Model)">
            <summary>
            Adds the unique model.
            </summary>
            <param name="uniqueModel">The unique model.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.AddModel(Sitecore.Commerce.Core.Model)">
            <summary>
            Adds the model.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.RemoveModel(Sitecore.Commerce.Core.Model)">
            <summary>
            Removes the model.
            </summary>
            <param name="modelToRemove">The model to remove.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.RemoveModels(System.Predicate{Sitecore.Commerce.Core.Model})">
            <summary>
            Removes all models matching the provided predicate <paramref name="match"/>.
            </summary>
            <param name="match">The match criteria.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.ClearModels">
            <summary>
            Clears the models.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetPolicy``1">
            <summary>
            Helper method to resolve a policy.  Will check a series of scopes for an active policy
            Starts with the current Shop, then the active Environment, then the Global environment
            Creates a default policy if none is found
            </summary>
            <typeparam name="T">
            Anything inheriting from GetPolicy
            </typeparam>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.Policy"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.HasPolicy``1">
            <summary>
            Has policy
            </summary>
            <typeparam name="T">The policy type.</typeparam>
            <returns>True if policy found, false otherwise</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.SetPolicy(Sitecore.Commerce.Core.Policy)">
            <summary>
            Sets the policy.
            </summary>
            <param name="policy">The policy.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetPipelineContextOptions">
            <summary>
            Gets the pipeline context.
            </summary>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommercePipelineExecutionContextOptions"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.GetPipelineContext">
            <summary>
            Gets the pipeline context.
            </summary>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommercePipelineExecutionContext"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.Dispose">
            <summary>
            Releases resources managed by this object.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceContext.Dispose(System.Boolean)">
            <summary>
            Releases resources managed by this object.
            </summary>
            <param name="disposing">Specifies whether managed objects should be disposed.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.NoContextException">
            <summary>
            Defines the exception raised when a Commerce Context can't be found
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Sitecore.Commerce.Core.NullObjectToContextException">
            <summary>
            Attempt to insert a null object into the context Objects collection
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.NullObjectToContextException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.NullObjectToContextException"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.NullObjectToContextException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.NullObjectToContextException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ReadLockScope">
            <summary>
            Used to enforce a scope in which an object protected by a <see cref="T:System.Threading.ReaderWriterLockSlim"/> can be read.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ReadLockScope.#ctor(System.Threading.ReaderWriterLockSlim)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ReadLockScope"/> class.
            </summary>
            <param name="readerLock">The <see cref="T:System.Threading.ReaderWriterLockSlim"/> used to protect the object.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.ReadLockScope.Dispose">
            <summary>
            Releases resources managed by this object.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ReadLockScope.Dispose(System.Boolean)">
            <summary>
            Releases resources managed by this object.
            </summary>
            <param name="disposing">Specifies whether managed objects should be disposed.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.WriteLockScope">
            <summary>
            Used to enforce a scope in which an object protected by a <see cref="T:System.Threading.ReaderWriterLockSlim"/> can be read.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.WriteLockScope.#ctor(System.Threading.ReaderWriterLockSlim)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.WriteLockScope"/> class.
            </summary>
            <param name="writerLock">The <see cref="T:System.Threading.ReaderWriterLockSlim"/> used to protect the object.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.WriteLockScope.Dispose">
            <summary>
            Releases resources managed by this object.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.WriteLockScope.Dispose(System.Boolean)">
            <summary>
            Releases resources managed by this object.
            </summary>
            <param name="disposing">Specifies whether managed objects should be disposed.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ApiController">
            <summary>
            Defines the api controller.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:Sitecore.Commerce.Core.ApiController.#ctor(System.IServiceProvider,Sitecore.Commerce.Core.CommerceEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ApiController"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="globalEnvironment">The global environment.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.ApiController.GetListMetadata(System.String)">
            <summary>
            Get the Metadata for a List.
            </summary>
            <param name="listName">Name of the list.</param>
            <returns>
            A list of <see cref="T:Sitecore.Commerce.Core.ListMetadata" />
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.ApiController.GetEnvironmentArtifactStoreId">
            <summary>
            Gets the environment artifact store identifier.
            </summary>
            <returns>An environment artifact store id.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.CommandsController">
            <summary>
            Defines the core commands controller.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CommerceController" />
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandsController.#ctor(System.IServiceProvider,Sitecore.Commerce.Core.CommerceEnvironment,Sitecore.Commerce.Core.Commands.EntitySerializerCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CommandsController"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="globalEnvironment">The global environment.</param>
            <param name="entitySerializerCommand">The entity serializer command.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandsController.RunMinion(System.Web.Http.OData.ODataActionParameters)">
            <summary>
            Runs the minion.
            </summary>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandsController.AddPolicy(System.Web.Http.OData.ODataActionParameters)">
            <summary>
            Adds the policy.
            </summary>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandsController.RemovePolicy(System.Web.Http.OData.ODataActionParameters)">
            <summary>
            Removes the policy.
            </summary>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandsController.ClearCacheStore(System.Web.Http.OData.ODataActionParameters)">
            <summary>
            Clears the cache store.
            </summary>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandsController.ClearCacheStoreCache(System.Web.Http.OData.ODataActionParameters)">
            <summary>
            Clears the cache store cache.
            </summary>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandsController.ClearEnvironmentCache(System.Web.Http.OData.ODataActionParameters)">
            <summary>
            Clears the environment cache.
            </summary>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandsController.Bootstrap">
            <summary>
            Bootstraps this instance.
            </summary>
            <returns>A <see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandsController.InitializeEnvironment(System.String)">
            <summary>
            Initializes the environment.
            </summary>
            <param name="environment">The environment.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandsController.CleanEnvironment(System.Web.Http.OData.ODataActionParameters)">
            <summary>
            Cleans the environment.
            </summary>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandsController.CleanGlobalEnvironment">
            <summary>
            Cleans the environment.
            </summary>
            <returns>A <see cref="T:System.Boolean"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandsController.ImportEnvironment(System.Web.Http.OData.ODataActionParameters)">
            <summary>
            Imports an environment.
            </summary>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandsController.ResetNodeContext(System.Web.Http.OData.ODataActionParameters)">
            <summary>
            Resets the node context.
            </summary>
            <param name="value">The value.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommandsController.CheckCommandStatus(System.Int32)">
            <summary>
            Checks the command status.
            </summary>
            <param name="taskId">The task identifier.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.CommerceController">
            <inheritdoc />
            <summary>
            Defines the base commerce controller.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceController.#ctor(System.IServiceProvider,Sitecore.Commerce.Core.CommerceEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CommerceController"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="globalEnvironment">The global environment.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceController.CurrentContext">
            <summary>
            Gets the current context.
            </summary>
            <value>
            The current context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceController.ServiceProvider">
            <summary>
            Gets the service provider.
            </summary>
            <value>
            The service provider.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceController.Logger">
            <summary>
            Gets the logger.
            </summary>
            <value>
            The logger.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceController.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            Called before the action method is invoked.
            </summary>
            <param name="context">The action executing context.</param>
            <param name="next">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate" /> to execute. Invoke this delegate in the body
            of <see cref="M:Microsoft.AspNetCore.Mvc.Controller.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)" /> to continue execution of the action.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> instance.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceController.Command``1">
            <summary>
            Commands this instance.
            </summary>
            <typeparam name="T">The command type.</typeparam>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceController.Delete(System.String)">
            <summary>
            Deletes the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>True if deleted, false otherwise</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceController.ValidateRouteRoles(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Validates the route roles.
            </summary>
            <param name="context">The context.</param>
            <returns>true if the user has the correct role(s).</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceController.ValidateAntiForgery(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Validates the anti forgery.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceController.ValidateCertificate(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Validates the certificate.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceController.ValidateCommerceRequest(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Validates the commerce request.
            </summary>
            <param name="context">The context.</param>
            <returns>True is the request is valid, false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceController.ExecuteLongRunningCommand(System.Func{System.Threading.Tasks.Task{Sitecore.Commerce.Core.Commands.CommerceCommand}})">
            <summary>
            Executes the long running command.
            </summary>
            <param name="action">The action.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.CommerceOpsController">
            <summary>
             Defines the CommerceOps controller.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceOpsController.#ctor(System.IServiceProvider,Sitecore.Commerce.Core.CommerceEnvironment)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CommerceOpsController" /> class.
            </summary>
            <param name="serviceProvider">
                The service provider.
            </param>
            <param name="globalEnvironment">
                The global environment.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceOpsController.GetApiRoutes">
            <summary>
            Gets the API routes.
            </summary>
            <returns>A list of API routes</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceOpsController.RunningPlugins">
            <summary>
            Running plugins.
            </summary>
            <returns>A list of <see cref="T:Sitecore.Commerce.Core.RegisteredPluginModel" /></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceOpsController.GetPipelines">
            <summary>
            Gets the pipelines.
            </summary>
            <returns>A list of registered pipelines</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceOpsController.ExportEnvironment(System.String)">
            <summary>
            Exports the environment.
            </summary>
            <param name="environmentName">The environment name.</param>
            <returns>
            The raw environment
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceOpsController.GetCacheStores">
            <summary>
            Gets the cache stores.
            </summary>
            <returns>A list of <see cref="T:Sitecore.Commerce.Core.CacheStoreModel"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceOpsController.GetCacheStore(System.String)">
            <summary>
            Gets a cache store by name.
            </summary>
            <param name="name">The name.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CacheStoreModel"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceOpsController.GetRawEntity(System.Web.Http.OData.ODataActionParameters)">
            <summary>
                Gets the raw entity.
            </summary>
            <param name="value">The value.</param>
            <returns>The raw entity</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.EnvironmentsController">
            <summary>
            Defines the policy set controller.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CommerceController" />
        </member>
        <member name="M:Sitecore.Commerce.Core.EnvironmentsController.#ctor(System.IServiceProvider,Sitecore.Commerce.Core.CommerceEnvironment,Sitecore.Commerce.Core.NodeContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.EnvironmentsController"/> class. 
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.PolicySetsController"/> class.
            </summary>
            <param name="serviceProvider">
            The service provider.
            </param>
            <param name="globalEnvironment">
            The global environment.
            </param>
            <param name="nodeContext">
            The node context
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Core.EnvironmentsController.Get">
            <summary>
            Gets a list of Carts.
            </summary>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.EnvironmentsController.Get(System.String)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.PolicySetsController">
            <summary>
            Defines the policy set controller.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CommerceController" />
        </member>
        <member name="M:Sitecore.Commerce.Core.PolicySetsController.#ctor(System.IServiceProvider,Sitecore.Commerce.Core.CommerceEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.PolicySetsController"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="globalEnvironment">The global environment.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.PolicySetsController.Get">
            <summary>
            Gets a list of Carts.
            </summary>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.PolicySetsController.Get(System.String)">
            <summary>
            Gets the specified identifier.
            </summary>
            <param name="id">The identifier.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.PolicySet"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.JsonCreationConverter`1">
            <summary>Base Generic JSON Converter that can help quickly define converters for specific types by automatically
            generating the CanConvert, ReadJson, and WriteJson methods, requiring the implementer only to define a strongly typed Create method.</summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.JsonCreationConverter`1.Create(System.Type,Newtonsoft.Json.Linq.JObject)">
            <summary>Create an instance of objectType, based properties in the JSON object</summary>
            <param name="objectType">type of object expected</param>
            <param name="jObject">contents of JSON object that will be deserialized</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.JsonCreationConverter`1.CanConvert(System.Type)">
            <summary>Determines if this converted is designed to deserialization to objects of the specified type.</summary>
            <param name="objectType">The target type for deserialization.</param>
            <returns>True if the type is supported.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.JsonCreationConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Parses the json to the specified type.</summary>
            <param name="reader">Newtonsoft.Json.JsonReader</param>
            <param name="objectType">Target type.</param>
            <param name="existingValue">Ignored</param>
            <param name="serializer">Newtonsoft.Json.JsonSerializer to use.</param>
            <returns>Deserialized Object</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.JsonCreationConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>Serializes to the specified type</summary>
            <param name="writer">Newtonsoft.Json.JsonWriter</param>
            <param name="value">Object to serialize.</param>
            <param name="serializer">Newtonsoft.Json.JsonSerializer to use.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.CoreConstants">
            <summary>
            Defines the core constants.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Environment">
            <summary>
            Environment Constant
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Commands">
            <summary>
            Commands constant
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.CoreConstants.Pipelines">
            <summary>
            The name of the core pipelines and blocks.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.ConfigureServiceApiPipeline">
            <summary>
            The configure service API pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.InitializeEnvironment">
            <summary>
            The initialize environment pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.BootStrapImportEnvironmentsPipeline">
            <summary>
            The boot strap import environments pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.CloneEntityPipeline">
            <summary>
            The configure service API pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.ConfigureOpsServiceApiPipeline">
            <summary>
            The configure ops service API pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.NodeHeartBeatMinion">
            <summary>
            The configure service API pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.StartNode">
            <summary>
            The StartNode Pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.ClearCacheStore">
            <summary>
            The clear cache store pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.GetEntityFromCache">
            <summary>
            The GetEntityFromCache pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.StoreEntityInCache">
            <summary>
            The StoreEntityInCache pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.GetCacheStores">
            <summary>
            The get cache stores pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.RunMinion">
            <summary>
            The run minion pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.MinionBoss">
            <summary>
            The minion boss pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.ValidateContext">
            <summary>
            The validate context pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.ValidatePartyPipeline">
            <summary>
            The validate party pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.DeleteEntity">
            <summary>
                The delete entity pipeline for providers
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.FindEntitiesInList">
            <summary>
                The find list of entities pipeline for providers
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.FindEntity">
            <summary>
                The find single entity pipeline for providers
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.FindEntityVersions">
            <summary>
                The find entity version pipelines
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.FindEntityListReferences">
            <summary>
                The find entity list references pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.EntityMigration">
            <summary>
            The entity migration
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.GetPolicySet">
            <summary>
                The find policy set
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.PersistEntity">
            <summary>
                The persist entity pipeline for providers
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.AddListEntities">
            <summary>
                The add list entities.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.GetListsNames">
            <summary>
                The get lists names
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.RemoveListEntities">
            <summary>
                The remove list entities.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.GetListItemsCount">
            <summary>
            The get list items count.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.PopulateListMetadata">
            <summary>
            The get list items count.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.TrackActivity">
            <summary>
                The Track Activity command.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.SecureEntity">
            <summary>
            The secure entity pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.SecureEntities">
            <summary>
            The secure entities pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.StartEnvironment">
            <summary>
            The start environment pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.CleanEnvironment">
            <summary>
            The clean environment pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.ValidateEnvironment">
            <summary>
            The validate environment pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.GetLocalizableMessage">
            <summary>
            The get localizable message pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.EntityPersisted">
            <summary>
            The entity persisted pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.ImportEnvironment">
            <summary>
            The import environment pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.ExportEnvironment">
            <summary>
            The export environment pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.GetRawEntity">
            <summary>
            The get raw entity pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.RunningPlugins">
            <summary>
            The running plugins pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.GetEnvironmentCache">
            <summary>
            The get cache pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.GetCountry">
            <summary>
            The get country pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.GetCountries">
            <summary>
            The get countries pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.GetCurrencySets">
            <summary>
            The get currency sets pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.GetCurrencySet">
            <summary>
            The get currency set pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.GetPossibleApprovalStatuses">
            <summary>
            The get possible approval statuses pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.SetApprovalStatus">
            <summary>
            The set approval status pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.AddPolicyToEntity">
            <summary>
            The add policy to entity pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.RemovePolicyFromEntity">
            <summary>
            The remove policy from entity pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.DoesEntityExist">
            <summary>
            The does entity exist pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.ClearCacheStoreCache">
            <summary>
            The clear cache store cache pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.ValidateEntity">
            <summary>
            The validate entity
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.ImportPolicySet">
            <summary>
            The import policy set pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.LocalizableTerm">
            <summary>
            The localizable term pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.LocalizableTerms">
            <summary>
            The localizable terms pipeline name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Bootstrap">
            <summary>
            The bootstrap pipeline name
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks">
            <summary>
            The name of the price pipeline block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.GetCountryBlock">
            <summary>
            The get country block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.EntityPersistenceModelOutputBlock">
            <summary>
            The EntityPersistenceModelOutputBlock name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.EntityPersistenceJournalingBlock">
            <summary>
            The EntityPersistenceJournalingBlock name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.BootStrapImportJsonsBlock">
            <summary>
            The boot strap import jsons block
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.CloneEntityBlock">
            <summary>
            The EntityPersistenceJournalingBlock name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.StoreCommerceEntityInMemoryCacheBlock">
            <summary>
            The StoreCommerceEntityInMemoryCacheBlock name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.NodeHeartBeatMinionBlock">
            <summary>
            The node heart beat minion
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.StartEnvironmentMinionsBlock">
            <summary>
            The EntityPersistenceJournalingBlock name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.LoadEnvironmentBlock">
            <summary>
            The EntityPersistenceJournalingBlock name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.LoadPolicySetsBlock">
            <summary>
            The load policy sets block
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.StartEnvironmentBlock">
            <summary>
            The StartEnvironmentBlock name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.StartEnvironmentCacheBlock">
            <summary>
            The StartEnvironmentCacheBlock name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.RunMinionBlock">
            <summary>
            The run minion block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.MoveItemsBlock">
            <summary>
            The move items block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.GetEntityFromCacheBlock">
            <summary>
            The GetEntityFromCacheBlock name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.StoreEntityInCacheBlock">
            <summary>
            The StoreEntityInCacheBlock name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.TrackActivityBlock">
            <summary>
            The Track Activity block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.FindEntityInMemoryCacheBlock">
            <summary>
            The FindEntityInMemoryCache block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.DeserializeEntityBlock">
            <summary>
            The DeserializeEntity block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.CheckNegativeCacheBlock">
            <summary>
            The CheckNegativeCacheEntity block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.RemoveEntityFromMemoryCacheBlock">
            <summary>
            The RemoveEntityFromMemoryCacheBlock name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.SerializeEntityBlock">
            <summary>
            The SerializeEntity block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.MigrateEntityBlock">
            <summary>
            The migrate entity block
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.PrepPersistEntityBlock">
            <summary>
            The PrepPersistEntity Block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.StoreEntityInMemoryCacheBlock">
            <summary>
            The StoreEntityInMemoryCacheBlock name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.UpdatePolicySetInCacheBlock">
            <summary>
            The UpdatePolicySetInCacheBlock name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.ValidateCacheStoreNameBlock">
            <summary>
            The validate cache store name block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.ValidatePartyBlock">
            <summary>
            The validate party block
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.ClearCacheStoreBlock">
            <summary>
            The clear cache store block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.GetCacheStoresBlock">
            <summary>
            The get cache stores block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.ConfigureServiceApiBlock">
            <summary>
            The configure Shops service API block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.ConfigureOpsServiceApiBlock">
            <summary>
            The configure Operations service API block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.ValidateEnvironmentJsonBlock">
            <summary>
            The validate environment json block
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.ImportEnvironmentBlock">
            <summary>
            The import environment block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.ExportEnvironmentBlock">
            <summary>
            The export environment block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.ValidateQaRoleBlock">
            <summary>
            The validate qa role block
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.GetRawEntityBlock">
            <summary>
            The get raw entity block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.RunningPluginsBlock">
            <summary>
            The running plugins block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.GetEnvironmentCacheBlock">
            <summary>
            The get environment cache block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.PersistEnvironmentBlock">
            <summary>
            The persist environment block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.ClearEnvironmentCacheBlock">
            <summary>
            The clear environment cache block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.GetCurrencySetBlock">
            <summary>
            The get currency set block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.GetCurrencySetsBlock">
            <summary>
            The get currency sets block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.GetPossibleApprovalStatusesBlock">
            <summary>
            The get possible approval statuses block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.SetApprovalStatusBlock">
            <summary>
            The set approval status block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.SaveEntityBlock">
            <summary>
            The save entity block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.AddPolicyToEntityBlock">
            <summary>
            The add policy to entity block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.RemovePolicyFromEntityBlock">
            <summary>
            The remove policy from entity block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.DoesEntityExistBlock">
            <summary>
            The does entity exist block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.ClearCacheStoreCacheBlock">
            <summary>
            The clear cache store cache block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.ValidateEntityComponentsBlock">
            <summary>
            The validate entity components block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.ValidateEntityBlock">
            <summary>
            The validate entity block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.FinalizeEntityValidationBlock">
            <summary>
            The finalize entity validation block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.ValidatePolicySetJsonBlock">
            <summary>
            The validate policy set json block name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.ImportPolicySetBlock">
            <summary>
            The import policy set block name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.PersistPolicySetBlock">
            <summary>
            The persist policy set block name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.GetMinionsToRunBlock">
            <summary>
            The get minions to run block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.FilterMinionsToRunByListBlock">
            <summary>
            The filter minions to run by list block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.LoadLocalizationEntityBlock">
            <summary>
            The load localization entity block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.LoadEntityLocalizedValuesBlock">
            <summary>
            The load entity localized values block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.LocalizeEntityBlock">
            <summary>
            The localize entity block name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Pipelines.Blocks.DeleteLocalizationEntityBlock">
            <summary>
            The delete localization entity block name.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.CoreConstants.Events">
            <summary>
            The name of the events.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Events.ListItemUpdated">
            <summary>
            The item updated event name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Events.ListItemProcessedEvent">
            <summary>
            The item processed event name
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.CoreConstants.Headers">
            <summary>
            Known names used with headers
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Headers.GeoLocation">
            <summary>
            The GeoLocation header name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Headers.Roles">
            <summary>
            The Roles header name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Headers.IsRegistered">
            <summary>
            The IsRegistered header name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Headers.FaultInjection">
            <summary>
            The FaultInjection header name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Headers.ShopName">
            <summary>
            The ShopName header name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Headers.ShopperId">
            <summary>
            The ShopperId header name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Headers.CsrId">
            <summary>
            The CSR unique identifier header name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Headers.CsrEmail">
            <summary>
            The CSR email header name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Headers.CustomerId">
            <summary>
            The CustomerId header name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Headers.Currency">
            <summary>
            The Currency header name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Headers.PolicyKeys">
            <summary>
            The PolicyKeys header name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Headers.Language">
            <summary>
            The Language header name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.Headers.EffectiveDate">
            <summary>
            The EffectiveDate header name
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters">
            <summary>
            The known performance counter information.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters.CategoryNames">
            <summary>
            The performance counter category names.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters.CategoryNames.SitecoreCommerceCommands">
            <summary>
            The commerce commands category name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters.CategoryNames.SitecoreCommerceMetrics">
            <summary>
            The commerce metrics category name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters.CategoryNames.SitecoreCommerceLists">
            <summary>
            The commerce lists category name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters.CategoryNames.SitecoreCommerceCounters">
            <summary>
            The commerce counters category name.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters.CustomMetricsCategoryNames">
            <summary>
            The Custom metrics category names.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters.CustomMetricsCategoryNames.SitecoreCommerceCommands">
            <summary>
            The commerce commands category name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters.CustomMetricsCategoryNames.SitecoreCommerceMetrics">
            <summary>
            The commerce metrics category name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters.CustomMetricsCategoryNames.SitecoreCommerceLists">
            <summary>
            The commerce lists category name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters.CustomMetricsCategoryNames.SitecoreCommerceCounters">
            <summary>
            The commerce counters category name.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters.CounterNames">
            <summary>
            The performance counter names.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters.CounterNames.CommandsRun">
            <summary>
            The commands run performance counter name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters.CounterNames.CommandRun">
            <summary>
            The command run performance counter name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters.CounterNames.CommandRunAverage">
            <summary>
            The command run average performance counter name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters.CounterNames.MetricCount">
            <summary>
            The metric count performance counter name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.CoreConstants.KnownPerformanceCounters.CounterNames.ListCount">
            <summary>
            The list count performance counter name.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.CommerceEntity">
            <summary>
            Defines the base commerce entity.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEntity.CompositeKey">
            <summary>
            Gets or sets the composite key.
            </summary>
            <value>
            The composite key.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEntity.Components">
            <summary>
            Gets or sets the components.
            </summary>
            <value>
            The components.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEntity.CreatedBy">
            <summary>
            Gets or sets the created by.
            </summary>
            <value>
            The created by.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEntity.UpdatedBy">
            <summary>
            Gets or sets the updated by.
            </summary>
            <value>
            The updated by.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEntity.DateCreated">
            <summary>
            Gets or sets the date created.
            </summary>
            <value>
            The date created.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEntity.DateUpdated">
            <summary>
            Gets or sets the date updated.
            </summary>
            <value>
            The date updated.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEntity.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEntity.FriendlyId">
            <summary>
            Gets or sets the friendly identifier.
            </summary>
            <value>
            The friendly identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEntity.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEntity.Version">
            <summary>
            Gets or sets the concurrency version.
            </summary>
            <value>
            The concurrency version.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEntity.EntityVersion">
            <summary>
            Gets or sets the entity version.
            </summary>
            <value>
            The entity version.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEntity.Published">
            <summary>
            Gets or sets a value indicating whether this instance is published.
            </summary>
            <value>
              <c>true</c> if published; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEntity.IsPersisted">
            <summary>
            Gets or sets a value indicating whether this instance is persisted.
            </summary>
            <value>
            <c>true</c> if this instance is persisted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEntity.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEntity.Policies">
            <summary>
            Gets or sets the policies.
            </summary>
            <value>
            The policies.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.SerializeToStream(System.Object,System.IO.Stream)">
            <summary>
            Serializes an Entity to a Stream
            </summary>
            <param name="value">The Entity to Serialize</param>
            <param name="s">The Stream to serialize to</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.DeserializeFromStream``1(System.IO.Stream)">
            <summary>
            Deserializes an Entity from a Stream
            </summary>
            <typeparam name="T">The expected Type of the Entity</typeparam>
            <param name="s">The Stream to deserialize from</param>
            <returns>A CommerceEntity</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.ListName``1">
            <summary>
            List name.
            </summary>
            <typeparam name="T">The type</typeparam>
            <returns>The name of the entity list</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.ListName(System.Type)">
            <summary>
            List name.
            </summary>
            <param name="entityType">The type</param>
            <returns>The name of the entity list</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.VersionedListName(Sitecore.Commerce.Core.CommerceEntity,System.String)">
            <summary>
            Returns the versioned entity name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="listName">Name of the list.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.IdPrefix``1">
            <summary>
            Identifiers the prefix.
            </summary>
            <typeparam name="T">The type</typeparam>
            <returns>The prefix for an entity id</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.SetPolicy(Sitecore.Commerce.Core.Policy)">
            <summary>
            Sets a policy.  Adds it if it doesn't exist, replaces it if it does.
            </summary>
            <param name="policy">The policy.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.AsList">
            <summary>
            Return this Entity as a List for those methods that require a list of Entities
            </summary>
            <returns>
            The <see>
                    <cref>List</cref>
                </see>
                of <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.AsReference">
            <summary>
            Return this Entity as an EntityReference
            </summary>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.EntityReference"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.Clone``1">
            <summary>
            Clones this instance.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <returns>The <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.GetComponent``1">
            <summary>
            Helper method to resolve a component
            </summary>
            <typeparam name="T">
            Anything inheriting from GetComponent
            </typeparam>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.Component"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.SetComponent(Sitecore.Commerce.Core.Component)">
            <summary>
            Adds or Replaces a component in the entity
            </summary>
            <param name="component">The component to Add or Replace</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.Deflate">
            <summary>
            Default the Entity into a string
            </summary>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.GetViewableFields">
            <summary>
            Return the fields for this Entity determined to be viewable in a UI
            </summary>
            <returns>
            The <see>
                    <cref>List</cref>
                </see>
                of <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.HasComponent``1">
            <summary>
            Helper method to determine if a component has been attached to this Entity
            </summary>
            <typeparam name="T">
            The Type of the component to look for
            </typeparam>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.HasComponent(System.Type)">
            <summary>
            Determines whether the specified component type has component.
            </summary>
            <param name="componentType">Type of the component.</param>
            <returns>
              <c>true</c> if the specified component type has component; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.RemoveComponent(System.Type)">
            <summary>
            Removes the component.
            </summary>
            <param name="componentType">Type of the component.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.HasPolicy``1">
            <summary>
            Returns true if the Policies list has a policy of type T.
            </summary>
            <typeparam name="T">
            The policy type
            </typeparam>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.HasPolicy(System.Type)">
            <summary>
            Determines whether the specified policy type has policy.
            </summary>
            <param name="policyType">Type of the policy.</param>
            <returns>
              <c>true</c> if the specified policy type has policy; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.RemovePolicy(System.Type)">
            <summary>
            Removes a specific policy by type if present
            </summary>
            <param name="policyType">The <see cref="T:System.Type"/>.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.GetPolicy``1">
            <summary>
            Helper method to resolve a policy
            If Policy is not located in the Policies list then Activator is called to create a new instance
            </summary>
            <typeparam name="T">
            Anything inheriting from Policy
            </typeparam>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.Policy"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEntity.GetPolicies``1">
            <summary>
            Retrieves a list of policies of a specific type.
            </summary>
            <typeparam name="T">
            Any T
            </typeparam>
            <returns>
            A list of type T.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.EntityIndex">
            <summary>
            Defines the entity index.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CommerceEntity" />
        </member>
        <member name="P:Sitecore.Commerce.Core.EntityIndex.IndexKey">
            <summary>
            Gets or sets the index key.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.EntityIndex.EntityId">
            <summary>
            Gets or sets the entity id.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.EntityIndex.IndexPrefix``1(System.String)">
            <summary>
            Indexes the prefix.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="indexProperty">The index property.</param>
            <returns>The index prefix</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.EntityItemReference">
            <summary>
             Defines an entity item reference.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.EntityItemReference.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.EntityItemReference"/> class.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <param name="itemId">The item identifier.</param>
            <param name="entityName">Name of the entity.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.EntityItemReference.ItemTarget">
            <summary>
            Gets or sets the item target.
            </summary>
            <value>
            The item target.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.EntityReference">
            <summary>
             Defines an entity reference.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.EntityReference.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.EntityReference"/> class.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <param name="entityName">Name of the entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.EntityReference.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.EntityReference"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.EntityReference.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.EntityReference.EntityTarget">
            <summary>
            Gets or sets the entity target.
            </summary>
            <value>
            The entity target.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.EntityReference.Policies">
            <summary>
            Gets or sets the policies.
            </summary>
            <value>
            The policies.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.Exceptions.EntityDuplicateException">
            <summary>
            Attempt to insert an Entity with a duplicate Id
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Exceptions.EntityDuplicateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Exceptions.EntityDuplicateException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Exceptions.EntityDuplicateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Exceptions.EntityDuplicateException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.Exceptions.EntityPersistException">
            <summary>
            Defines the exception raised when an error occurs during the persistence of an entity.
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Exceptions.EntityPersistException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Exceptions.EntityPersistException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Exceptions.EntityPersistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Exceptions.EntityPersistException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.Exceptions.EntityStoreConnectException">
            <summary>
            Defines the exception raised when a connection error is raised by the entity store in use.
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Exceptions.EntityStoreConnectException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Exceptions.EntityStoreConnectException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.Exceptions.EntityStoreException">
            <summary>
            Defines the exception raised when an error occurs during the persistence of an entity.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Exceptions.CommerceException" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Exceptions.EntityStoreException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Exceptions.EntityStoreException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Exceptions.EntityStoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Exceptions.EntityStoreException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.Exceptions.EntityStoreFullException">
            <summary>
            Defines the exception raised when the entity store becomes full and can not accept any entries
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Exceptions.EntityStoreException" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Exceptions.EntityStoreFullException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Exceptions.EntityStoreFullException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Exceptions.EntityStoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Exceptions.EntityStoreFullException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.Exceptions.EntityStoreTimeoutException">
            <summary>
            Defines the exception raised when a timeout error occurs in the entity store in use
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Exceptions.EntityStoreTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Exceptions.EntityStoreTimeoutException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.Exceptions.ExternalIntegrationConnectException">
            <summary>
            Defines the error raised when an integration error occurs
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Exceptions.ExternalIntegrationConnectException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Exceptions.ExternalIntegrationConnectException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.Exceptions.CommerceException">
            <summary>
            Defines the exception raised when an error occurs during the persistence of an entity.
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Exceptions.CommerceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Exceptions.CommerceException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Exceptions.CommerceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Exceptions.CommerceException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.LocalizationEntity">
            <summary>
            Defines the localization entity
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CommerceEntity" />
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizationEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LocalizationEntity"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizationEntity.HasProperties">
            <summary>
            Gets a value indicating whether this instance has properties.
            </summary>
            <value>
              <c>true</c> if this instance has properties; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizationEntity.HasComponentsProperties">
            <summary>
            Gets a value indicating whether this instance has components properties.
            </summary>
            <value>
              <c>true</c> if this instance has components properties; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizationEntity.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizationEntity.ComponentsProperties">
            <summary>
            Gets or sets the components properties.
            </summary>
            <value>
            The components properties.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizationEntity.GetPropertyValues(System.String)">
            <summary>
            Gets the property values.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>A list of <see cref="T:Sitecore.Commerce.Core.Parameter"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizationEntity.ContainsProperty(System.String)">
            <summary>
            Determines whether the specified property name contains property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>
              <c>true</c> if the specified property name contains property; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizationEntity.GetPathValue(System.String)">
            <summary>
            Gets the path value.
            </summary>
            <param name="componentPath">The component path.</param>
            <returns>The value for a path.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizationEntity.GetComponentValue(System.String,System.String)">
            <summary>
            Gets the component value.
            </summary>
            <param name="componentPath">The component path.</param>
            <param name="componentId">The component identifier.</param>
            <returns>The value for a component.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizationEntity.GetComponentPropertyValues(System.String,System.String,System.String)">
            <summary>
            Gets the component property values.
            </summary>
            <param name="componentPath">
            Path of the component.
            </param>
            <param name="componentId">
            The component Id.
            </param>
            <param name="propertyName">
            Name of the property.
            </param>
            <returns>
            A list of <see cref="T:Sitecore.Commerce.Core.Parameter"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizationEntity.AddOrUpdatePropertyValue(System.String,System.Collections.Generic.List{Sitecore.Commerce.Core.Parameter})">
            <summary>
            Adds the or update property value.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizationEntity.AddOrUpdateComponentValue(System.String,System.String,System.String,System.Collections.Generic.List{Sitecore.Commerce.Core.Parameter})">
            <summary>
            Adds the or update component value.
            </summary>
            <param name="componentPath">The component path.</param>
            <param name="componentId">The component identifier.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizationEntity.GetComponentsForPath(System.String,System.Collections.Generic.IList{Sitecore.Commerce.Core.Component})">
            <summary>
            Gets the components for path.
            </summary>
            <param name="componentPath">The component path.</param>
            <param name="components">The components.</param>
            <returns>A list of <see cref="T:Sitecore.Commerce.Core.Component"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizationEntity.GetComponentId(System.String,System.String,Sitecore.Commerce.Core.LocalizeEntityComponentPolicy,System.Collections.Generic.IList{Sitecore.Commerce.Core.Component})">
            <summary>
            Gets the component identifier.
            </summary>
            <param name="itemId">The item identifier.</param>
            <param name="viewName">Name of the view.</param>
            <param name="componentPolicy">The component policy.</param>
            <param name="components">The components.</param>
            <returns>The component id.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizationEntity.GetComponentById(System.String,System.Collections.Generic.IList{Sitecore.Commerce.Core.Component})">
            <summary>
            Gets the component by identifier.
            </summary>
            <param name="componentId">The component identifier.</param>
            <param name="components">The components.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Component"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.FoundEntity">
            <summary>
            Defines the cache hit model
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Model" />
        </member>
        <member name="M:Sitecore.Commerce.Core.FoundEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.FoundEntity"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.FoundEntity.EntityId">
            <summary>
            Gets or sets the entity identifier.
            </summary>
            <value>
            The entity identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FoundEntity.EntityVersion">
            <summary>
            Gets or sets the entity version.
            </summary>
            <value>
            The entity version.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FoundEntity.FoundInCache">
            <summary>
            Gets or sets a value indicating whether [found in cache].
            </summary>
            <value>
              <c>true</c> if [found in cache]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FoundEntity.SerializedEntity">
            <summary>
            Gets or sets the serialized entity.
            </summary>
            <value>
            The serialized entity.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FoundEntity.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>
            The entity.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FoundEntity.CachedAsEntity">
            <summary>
            Gets or sets a value indicating whether [cached as entity].
            </summary>
            <value>
              <c>true</c> if [cached as entity]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FoundEntity.TypeFullName">
            <summary>
            Gets or sets the full name of the type.
            </summary>
            <value>
            The full name of the type.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.InvalidEntity">
            <summary>
            Defines the cache hit model
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Model" />
        </member>
        <member name="M:Sitecore.Commerce.Core.InvalidEntity.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.InvalidEntity"/> class.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.InvalidEntity.EntityId">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>
            The entity.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.InvalidEntity.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>
            The entity.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.PersistedEntityModel">
            <summary>
            Defines PersistedEntity model
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Model" />
        </member>
        <member name="P:Sitecore.Commerce.Core.PersistedEntityModel.EntityId">
            <summary>
            Gets or sets the entity identifier.
            </summary>
            <value>
            The entity identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.PersistedEntityModel.EntityFriendlyId">
            <summary>
            Gets or sets the entity friendly identifier.
            </summary>
            <value>
            The entity friendly identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.PersistedEntityModel.Version">
            <summary>
            Gets or sets the Version of the entity being Persisted.
            </summary>
            <value>
            The entity identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.RequestedEntityVersion">
            <summary>
            Defines the requested version model.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Model" />
        </member>
        <member name="M:Sitecore.Commerce.Core.RequestedEntityVersion.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RequestedEntityVersion"/> class.
            </summary>
            <param name="entityId">The entity identifier.</param>
            <param name="entityVersion">The entity version.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.RequestedEntityVersion.EntityId">
            <summary>
            Gets or sets the entity identifier.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.RequestedEntityVersion.EntityVersion">
            <summary>
            Gets or sets the entity version.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.CheckNegativeCacheBlock">
            <summary>
            Defines the CheckNegativeCacheEntityBlock.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.FindEntityArgument,
                    Sitecore.Commerce.Core.FindEntityArgument, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.CheckNegativeCacheBlock.#ctor(Sitecore.Commerce.Core.IGetEnvironmentCachePipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CheckNegativeCacheBlock" /> class.
            </summary>
            <param name="cachePipeline">The cache pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CheckNegativeCacheBlock.Run(Sitecore.Commerce.Core.FindEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.FindEntityArgument"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.CloneEntityBlock">
            <summary>
            Defines the clone entity block
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.CommerceEntity,
                    Sitecore.Commerce.Core.CommerceEntity, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.CloneEntityBlock.Run(Sitecore.Commerce.Core.CommerceEntity,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The CommerceEntity.
            </param>
            <param name="context">
            The pipeline execution context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CloneEntityBlock.SerializeToStream(System.Object,System.IO.Stream)">
            <summary>
            The serialize to stream.
            </summary>
            <param name="value">
            The value.
            </param>
            <param name="s">
            The s.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CloneEntityBlock.DeserializeFromStream``1(System.IO.Stream)">
            <summary>
            The deserialize from stream.
            </summary>
            <param name="s">
            The stream.
            </param>
            <typeparam name="T">
            the type
            </typeparam>
            <returns>
            The deserialized type.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.DeleteLocalizationEntityBlock">
            <summary>
            Defines the delete localization entity block
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.DeleteEntityArgument,
                    Sitecore.Commerce.Core.CommerceEntity, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.DeleteLocalizationEntityBlock.#ctor(Sitecore.Commerce.Core.CommerceCommander)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.DeleteLocalizationEntityBlock"/> class.
            </summary>
            <param name="commerceCommander">
            The commerce Commander.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Core.DeleteLocalizationEntityBlock.Run(Sitecore.Commerce.Core.DeleteEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.DeleteEntityArgument"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.DeserializeEntityBlock">
            <summary>
            Defines the deserialize entity block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.FindEntityArgument,
                    Sitecore.Commerce.Core.CommerceEntity, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.DeserializeEntityBlock.#ctor(Sitecore.Commerce.Core.Commands.EntitySerializerCommand,Sitecore.Commerce.Core.IEntityMigrationPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.DeserializeEntityBlock" /> class.
            </summary>
            <param name="entitySerializerCommand">The find entity pipeline.</param>
            <param name="entityMigrationPipeline">The entity migration pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.DeserializeEntityBlock.Run(Sitecore.Commerce.Core.FindEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.DeserializeEntityBlock.InitializeDefault(Sitecore.Commerce.Core.FindEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Initializes the default.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.DoesEntityExistBlock">
            <summary>
            Defines the does entity exist block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.FindEntityArgument, System.Boolean,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.DoesEntityExistBlock.Run(Sitecore.Commerce.Core.FindEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment"/>
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.EntityPersistenceModelOutputBlock">
            <summary>
            Defines the entity persistence model output block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.PersistEntityArgument,
                    Sitecore.Commerce.Core.PersistEntityArgument, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.EntityPersistenceModelOutputBlock.Run(Sitecore.Commerce.Core.PersistEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.PersistEntityArgument"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetRawEntityBlock">
            <summary>
            Defines the get raw entity block.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CommercePipelineExecutionContext" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetRawEntityBlock.#ctor(Sitecore.Commerce.Core.IFindEntityPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetRawEntityBlock"/> class.
            </summary>
            <param name="findEntityPipeline">The find entity pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetRawEntityBlock.Run(System.String,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A string representing the entity json.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.LoadEntityLocalizedValuesBlock">
            <summary>
            Defines the load entity localized values block
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.CommerceEntity,
                    Sitecore.Commerce.Core.CommerceEntity, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.LoadEntityLocalizedValuesBlock.Run(Sitecore.Commerce.Core.CommerceEntity,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.LoadEntityLocalizedValuesBlock.LoadLocalizableProperties(Sitecore.Commerce.Core.CommerceEntity,Sitecore.Commerce.Core.LocalizationEntity,Sitecore.Commerce.Core.LocalizeEntityPolicy,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Loads localizable properties.
            </summary>
            <param name="entity">The entity.</param>
            <param name="localizationEntity">The localization entity.</param>
            <param name="localizationPolicy">The localizable policy.</param>
            <param name="context">The pipeline execution context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.LoadEntityLocalizedValuesBlock.LoadLocalizableComponentsProperties(Sitecore.Commerce.Core.CommerceEntity,Sitecore.Commerce.Core.LocalizationEntity,Sitecore.Commerce.Core.LocalizeEntityPolicy,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Loads localizable components properties.
            </summary>
            <param name="entity">The entity.</param>
            <param name="localizationEntity">The localization entity.</param>
            <param name="localizationPolicy">The localizable policy.</param>
            <param name="context">The pipeline execution context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.LoadEntityLocalizedValuesBlock.LoadLocalizeProperties(Sitecore.Commerce.Core.LocalizationEntity,System.Reflection.PropertyInfo[],System.Collections.Generic.List{System.String},System.String,System.String,System.Object,System.Func{System.String,System.Collections.Generic.List{Sitecore.Commerce.Core.Parameter}})">
            <summary>
            Loads the localized properties.
            </summary>
            <param name="localizationEntity">The localization entity.</param>
            <param name="properties">The properties.</param>
            <param name="policyProperties">The policy properties.</param>
            <param name="language">The language.</param>
            <param name="defaultLanguage">The default language.</param>
            <param name="target">The target.</param>
            <param name="getLocalizedValues">Resolves the localized values.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.LoadLocalizationEntityBlock">
            <summary>
            Defines the load localization entity block
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.CommerceEntity,
                    Sitecore.Commerce.Core.CommerceEntity, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.LoadLocalizationEntityBlock.#ctor(Sitecore.Commerce.Core.IFindEntityPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LoadLocalizationEntityBlock"/> class.
            </summary>
            <param name="findEntityPipeline">The find entity pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.LoadLocalizationEntityBlock.Run(Sitecore.Commerce.Core.CommerceEntity,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.LocalizeEntityBlock">
            <summary>
            Defines the localize entity block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Plugin.Promotions.Promotion,
                    Sitecore.Commerce.Plugin.Promotions.Promotion, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizeEntityBlock.#ctor(Sitecore.Commerce.Core.CommerceCommander)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LocalizeEntityBlock"/> class.
            </summary>
            <param name="commander">The commander.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizeEntityBlock.Run(Sitecore.Commerce.Core.PersistEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.PersistEntityArgument"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizeEntityBlock.LocalizeProperties(Sitecore.Commerce.Core.CommerceEntity,Sitecore.Commerce.Core.LocalizationEntity,Sitecore.Commerce.Core.LocalizeEntityPolicy,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Localizes an entity properties
            </summary>
            <param name="entity">
            The entity.
            </param>
            <param name="localizationEntity">
            The localization entity.
            </param>
            <param name="localizationPolicy">
            The localizable policy.
            </param>
            <param name="context">
            The pipeline execution context.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizeEntityBlock.LocalizeComponentsProperties(Sitecore.Commerce.Core.CommerceEntity,Sitecore.Commerce.Core.LocalizationEntity,Sitecore.Commerce.Core.LocalizeEntityPolicy,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Localizes an entity properties
            </summary>
            <param name="entity">
            The entity.
            </param>
            <param name="localizationEntity">
            The localization entity.
            </param>
            <param name="localizationPolicy">
            The localization policy.
            </param>
            <param name="context">
            The pipeline execution context.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.MigrateEntityBlock">
            <summary>
            Defines the deserialize entity block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.FindEntityArgument,
                    Sitecore.Commerce.Core.CommerceEntity, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.MigrateEntityBlock.#ctor(Sitecore.Commerce.Core.Commands.EntitySerializerCommand,Sitecore.Commerce.Core.IPersistEntityPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.MigrateEntityBlock" /> class.
            </summary>
            <param name="entitySerializerCommand">The find entity pipeline.</param>
            <param name="persistEntityPipeline">The persist entity pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.MigrateEntityBlock.Run(Sitecore.Commerce.Core.FindEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.MigrateEntityBlock.MigrateAndDeserializeEntity(System.String,Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Migrates the and deserialize entity.
            </summary>
            <param name="entity">The entity.</param>
            <param name="context">The context.</param>
            <returns>Migrated entity</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.MigrateEntityBlock.RemoveObsoleteTokens(Newtonsoft.Json.Linq.JToken,Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Removes the obsolete tokens.
            </summary>
            <param name="token">The token.</param>
            <param name="context">The Commerce context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.MigrateEntityBlock.FindTokens(Newtonsoft.Json.Linq.JToken,System.Collections.Generic.List{Newtonsoft.Json.Linq.JToken},Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Finds the obsolete tokens.
            </summary>
            <param name="containerToken">The container token.</param>
            <param name="matches">The matches.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.PrepPersistEntityBlock">
            <summary>
            Prepares an Entity for persistence by making any general changes to the Entity such as incrementing version, updated date time stamp, etc.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.PrepPersistEntityBlock.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.PrepPersistEntityBlock"/> class.
            </summary>
            <param name="httpContextAccessor">The HTTP context accessor.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.PrepPersistEntityBlock.Run(Sitecore.Commerce.Core.PersistEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.PersistEntityArgument"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.SerializeEntityBlock">
            <summary>
            The persist entity block.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.SerializeEntityBlock.#ctor(Sitecore.Commerce.Core.Commands.EntitySerializerCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.SerializeEntityBlock"/> class.
            </summary>
            <param name="entitySerializerCommand">The find entity pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.SerializeEntityBlock.Run(Sitecore.Commerce.Core.PersistEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The arg.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.PersistEntityArgument"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ValidateQaRoleBlock">
            <summary>
             Defines the validate qa role block.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidateQaRoleBlock.Run(System.String,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment"/>
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.CloneEntityPipeline">
            <summary>
            The delete entity pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.CloneEntityPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.ICloneEntityPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.DeleteEntityPipeline" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.DeleteEntityPipeline">
            <inheritdoc />
            <summary>
            The delete entity pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.DeleteEntityArgument,
                    Sitecore.Commerce.Core.DeleteEntityArgument}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IDeleteEntityPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.DeleteEntityPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IDeleteEntityPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.DeleteEntityPipeline" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.DoesEntityExistPipeline">
            <summary>
            Defines the does entity exist pipeline
            </summary>
            <seealso>
                <cref>Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.FindEntityArgument, System.Boolean}</cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IDoesEntityExistPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.DoesEntityExistPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IDoesEntityExistPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.DoesEntityExistPipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.EntityMigrationPipeline">
            <summary>
            The find entity pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.EntityMigrationPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IEntityMigrationPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.EntityMigrationPipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.EntityPersistedPipeline">
            <inheritdoc />
            <summary>
            Defines the persist entity pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.PersistEntityArgument,
                    Sitecore.Commerce.Core.PersistEntityArgument}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IEntityPersistedPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.EntityPersistedPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IEntityPersistedPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.EntityPersistedPipeline" /> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.FindEntityPipeline">
            <inheritdoc />
            <summary>
            Defines the find entity pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.FindEntityArgument,
                    Sitecore.Commerce.Core.CommerceEntity}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IFindEntityPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.FindEntityPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IFindEntityPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.FindEntityPipeline" /> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.FindEntityVersionsPipeline">
            <inheritdoc />
            <summary>
            Defines the find entity versions pipeline.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.IFindEntityVersionsPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.FindEntityVersionsPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IFindEntityVersionsPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.FindEntityVersionsPipeline" /> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetRawEntityPipeline">
            <summary>
            Defines the get raw entity pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetRawEntityPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IGetRawEntityPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetRawEntityPipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ICloneEntityPipeline">
            <summary>
            The DeleteEntityPipeline interface.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IDeleteEntityPipeline">
            <summary>
            The DeleteEntityPipeline interface.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IDoesEntityExistPipeline">
            <summary>
            Defines the does entity exist pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.FindEntityArgument, System.Boolean,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IEntityMigrationPipeline">
            <summary>
            The EntityMigrationPipeline interface.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IEntityPersistedPipeline">
            <summary>
            The IEntityPersistedPipeline interface.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IFindEntityPipeline">
            <summary>
            Defines the find entity pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.FindEntityArgument,
                    Sitecore.Commerce.Core.CommerceEntity, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IFindEntityVersionsPipeline">
            <summary>
            Defines the find entity versions pipeline
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IGetRawEntityPipeline">
            <summary>
            Defines the get raw entity pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IPersistEntityPipeline">
            <summary>
            The PersistEntityPipeline interface.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.ISecureEntitiesPipeline">
            <summary>
            The SecureEntitiesPipeline interface.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.ISecureEntityPipeline">
            <summary>
            The SecureEntityPipeline interface.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.PersistEntityPipeline">
            <inheritdoc />
            <summary>
            Defines the persist entity pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.PersistEntityArgument,
                    Sitecore.Commerce.Core.PersistEntityArgument}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IPersistEntityPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.PersistEntityPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IPersistEntityPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.PersistEntityPipeline" /> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.SecureEntitiesPipeline">
            <inheritdoc />
            <summary>
            Defines the secure entities pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.CommerceEntity},
                    System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.CommerceEntity}}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.ISecureEntitiesPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.SecureEntitiesPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.ISecureEntitiesPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.SecureEntitiesPipeline" /> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.SecureEntityPipeline">
            <inheritdoc />
            <summary>
            Defines the secure entity pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.CommerceEntity,
                    Sitecore.Commerce.Core.CommerceEntity}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.ISecureEntityPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.SecureEntityPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.ISecureEntityPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.SecureEntityPipeline" /> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.AutoApprovePolicy">
            <summary>
            Defines the auto approve policy.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="T:Sitecore.Commerce.Core.EntitySerializationPolicy">
            <summary>
                Defines basic serialization policies
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.EntitySerializationPolicy.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.EntitySerializationPolicy.InflateViaStream">
            <summary>
            Indicates serialization should use a streaming approach to serialization
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IgnorePublishedPolicy">
            <summary>
            Defines the ignore published policy.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.LocalizeEntityComponentPolicy">
            <summary>
            Defines the localize entity component policy
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizeEntityComponentPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LocalizeEntityComponentPolicy"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizeEntityComponentPolicy.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LocalizeEntityComponentPolicy"/> class.
            </summary>
            <param name="path">The path.</param>
            <param name="properties">The properties.</param>
            <param name="actionView">The action view.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizeEntityComponentPolicy.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizeEntityComponentPolicy.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizeEntityComponentPolicy.ActionView">
            <summary>
            Gets or sets the action view.
            </summary>
            <value>
            The action view.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizeEntityComponentPolicy.IsItemComponent">
            <summary>
            Gets or sets the is item component.
            </summary>
            <value>
            The is item component.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.LocalizeEntityPolicy">
            <summary>
            Defines the localize entity policy
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizeEntityPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LocalizeEntityPolicy"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizeEntityPolicy.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LocalizeEntityPolicy"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="properties">The properties.</param>
            <param name="actionView">The action view.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizeEntityPolicy.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizeEntityPolicy.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizeEntityPolicy.ActionView">
            <summary>
            Gets or sets the action view.
            </summary>
            <value>
            The action view.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizeEntityPolicy.ComponentsPolicies">
            <summary>
            Gets or sets the components policies.
            </summary>
            <value>
            The components policies.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizeEntityPolicy.GetPolicyByType(Sitecore.Commerce.Core.CommerceContext,System.Type)">
            <summary>
            Gets the type of the policy by.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="type">The type.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.LocalizeEntityPolicy"/> if found, otherwise null.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizeEntityPolicy.GetComponentPolicyByView(System.String)">
            <summary>
            Gets the component policy by view.
            </summary>s
            <param name="viewName">The view name.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.LocalizeEntityComponentPolicy"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizeEntityPolicy.GetItemComponentPolicyByView(System.String)">
            <summary>
            Gets the items component policy by view.
            </summary>s
            <param name="viewName">The view name.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.LocalizeEntityComponentPolicy"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizeEntityPolicy.GetItemComponentPolicyByName(System.String)">
            <summary>
            Gets the item component policy by name.
            </summary>
            <param name="componentName">Name of the component.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.LocalizeEntityComponentPolicy"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.SpecialCharactersPolicy">
            <summary>
            Defines the special characters policy
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.SpecialCharactersPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.SpecialCharactersPolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.SpecialCharactersPolicy.NotAllowedCharacters">
            <summary>
            Gets or sets the not allowed characters.
            </summary>
            <value>
            The not allowed characters.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.Tombstone">
            <summary>
            Defines the tombstone entity
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CommerceEntity" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Tombstone.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Tombstone"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Tombstone.IndexId">
            <summary>
            Gets or sets the index identifier.
            </summary>
            <value>
            The index identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Tombstone.EntityId">
            <summary>
            Gets or sets the entity identifier.
            </summary>
            <value>
            The entity identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.CommerceEnvironment">
            <summary>
            The commerce environment.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CommerceEntity" />
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEnvironment.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEnvironment.ArtifactStoreId">
            <summary>
            Gets or sets the artifact store id.
            </summary>
            <value>
            The artifact store identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceEnvironment.LongRunningCommands">
            <summary>
            Gets the long running commands.
            </summary>
            <value>
            The long runnig commands.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEnvironment.AddLongRunningCommand(System.Threading.Tasks.Task{Sitecore.Commerce.Core.Commands.CommerceCommand})">
            <summary>
            Adds the long running command.
            </summary>
            <param name="command">The command.</param>
            <exception cref="T:Sitecore.Commerce.Core.NullObjectToContextException">Throw if command is null.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEnvironment.GetLongRunningCommands">
            <summary>
            Gets the long running commands.
            </summary>
            <returns>The long running commands collection.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceEnvironment.GetLongRunningCommands(System.Func{System.Threading.Tasks.Task{Sitecore.Commerce.Core.Commands.CommerceCommand},System.Boolean})">
            <summary>
            Gets the long running commands.
            </summary>
            <param name="predicate">The predicate.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand"/> that match the predicate.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.NoEnvironmentContextException">
            <summary>
            Defines the exception being raised if an Environment can't be found
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="T:Sitecore.Commerce.Core.GlobalEnvironmentPolicy">
            <inheritdoc />
            <summary>
            Establishes the Global environment Policy
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GlobalEnvironmentPolicy.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GlobalEnvironmentPolicy" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.GlobalEnvironmentPolicy.Languages">
            <summary>
            Gets or sets the languages.
            </summary>
            <value>
            The languages.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GlobalEnvironmentPolicy.DefaultCurrency">
            <summary>
            Gets or sets the default currency.
            </summary>
            <value>
            The default currency.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GlobalEnvironmentPolicy.DefaultCountry">
            <summary>
            Gets or sets the default country.
            </summary>
            <value>
            The default country.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GlobalEnvironmentPolicy.Countries">
            <summary>
            Gets or sets the countries.
            </summary>
            <value>
            The countries.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GlobalEnvironmentPolicy.DefaultLocale">
            <summary>
            Gets or sets the default locale.
            </summary>
            <value>
            The default locale.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GlobalEnvironmentPolicy.TimeZone">
            <summary>
            Gets or sets the time zone.
            </summary>
            <value>
            The time zone.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GlobalEnvironmentPolicy.FirstDayOfWeek">
            <summary>
            Gets or sets the first day of week.
            </summary>
            <value>
            The first day of week.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GlobalEnvironmentPolicy.PostalCodeOptionalCountries">
            <summary>
            Gets or sets the postal code optional countries.
            </summary>
            <value>
            The postal code optional countries.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.EnvironmentContext">
            <inheritdoc />
            <summary>
            Defines the commerce context used by a running Environment.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CommerceContext" />
        </member>
        <member name="M:Sitecore.Commerce.Core.EnvironmentContext.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.ApplicationInsights.TelemetryClient,Sitecore.Commerce.Core.IGetLocalizableMessagePipeline)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.EnvironmentContext" /> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="telemetryClient">Telemetry Client</param>
            <param name="getLocalizableMessagePipeline">The get localizable message pipeline.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ImportedEnvironmentModel">
            <summary>
            Defines imported environment model component.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ImportedEnvironmentModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ImportedEnvironmentModel"/> class.
            </summary>
            <param name="environmentId">The environment identifier.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.ImportedEnvironmentModel.EnvironmentId">
            <summary>
            Gets or sets the environment identifier.
            </summary>
            <value>
            The environment identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.BootStrapImportJsonsBlock">
            <summary>
            Defines the bootstrap import json block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.String, System.String,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.BootStrapImportJsonsBlock.#ctor(Sitecore.Commerce.Core.NodeContext,Sitecore.Commerce.Core.Commands.ImportEnvironmentCommand,Sitecore.Commerce.Core.Commands.ImportPolicySetCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.BootStrapImportJsonsBlock" /> class.
            </summary>
            <param name="nodeContext">The nodeContext.</param>
            <param name="importEnvironmentCommand">The importEnvironmentCommand.</param>
            <param name="importPolicySetCommand">The import policy set command.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.BootStrapImportJsonsBlock.Run(System.String,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment"/>
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ClearEnvironmentCacheBlock">
            <summary>
            Defines the clear environment cache block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.CommerceEnvironment,
                    Sitecore.Commerce.Core.CommerceEnvironment, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.ClearEnvironmentCacheBlock.#ctor(Sitecore.Commerce.Core.IGetEnvironmentCachePipeline,Sitecore.Commerce.Core.IClearCacheStorePipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ClearEnvironmentCacheBlock"/> class.
            </summary>
            <param name="cachePipeline">The cache pipeline.</param>
            <param name="clearCacheStorePipeline">The clear cache store pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.ClearEnvironmentCacheBlock.Run(Sitecore.Commerce.Core.CommerceEnvironment,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>The <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ExportEnvironmentBlock">
            <summary>
            Defines the export environment block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.String, System.String,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.ExportEnvironmentBlock.#ctor(Sitecore.Commerce.Core.IFindEntityPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ExportEnvironmentBlock"/> class.
            </summary>
            <param name="findEntityPipeline">The find entity pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.ExportEnvironmentBlock.Run(System.String,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment"/>
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ImportEnvironmentBlock">
            <summary>
            Defines the import environment block.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.ImportEnvironmentBlock.findEntityPipeline">
            <summary>
            The find entity pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ImportEnvironmentBlock.#ctor(Sitecore.Commerce.Core.IFindEntityPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ImportEnvironmentBlock"/> class.
            </summary>
            <param name="findEntityPipeline">The find entity pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.ImportEnvironmentBlock.Run(Sitecore.Commerce.Core.CommerceEnvironment,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment"/>
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.LoadEnvironmentBlock">
            <summary>
            Defines a block which which loads an Environment.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.String, Sitecore.Commerce.Core.CommerceEnvironment,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.LoadEnvironmentBlock.#ctor(Sitecore.Commerce.Core.IFindEntityPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LoadEnvironmentBlock" /> class.
            </summary>
            <param name="findEntityPipeline">The find entity pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.LoadEnvironmentBlock.Run(System.String,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.LoadPolicySetsBlock">
            <summary>
            Defines a block which which loads an Environment.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.String, Sitecore.Commerce.Core.CommerceEnvironment,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.LoadPolicySetsBlock.#ctor(Sitecore.Commerce.Core.IFindEntityPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LoadEnvironmentBlock" /> class.
            </summary>
            <param name="findEntityPipeline">The find entity pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.LoadPolicySetsBlock.Run(Sitecore.Commerce.Core.CommerceEnvironment,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.PersistEnvironmentBlock">
            <summary>
            Defines the persist environment block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.CommerceEnvironment,
                    Sitecore.Commerce.Core.CommerceEnvironment, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.PersistEnvironmentBlock.#ctor(Sitecore.Commerce.Core.IPersistEntityPipeline,Sitecore.Commerce.Core.Commands.ResetNodeContextCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.PersistEnvironmentBlock"/> class.
            </summary>
            <param name="persistEntityPipeline">The persist entity pipeline.</param>
            <param name="resetNodeContextCommand">The reset node context command.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.PersistEnvironmentBlock.Run(Sitecore.Commerce.Core.CommerceEnvironment,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="environment">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment"/>
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.StartEnvironmentBlock">
            <summary>
            Defines a block which which Starts an Environment.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.CommerceEnvironment,
                    Sitecore.Commerce.Core.CommerceEnvironment, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="F:Sitecore.Commerce.Core.StartEnvironmentBlock._localizableMessagePipeline">
            <summary>
            The _localizable message pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.StartEnvironmentBlock._telemetryClient">
            <summary>
            The _telemetry client.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.StartEnvironmentBlock._performanceCounterCommand">
            <summary>
            The _performance counter command.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.StartEnvironmentBlock._customMetricCommand">
            <summary>
            The customeMetric counter command.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.StartEnvironmentBlock.#ctor(Sitecore.Commerce.Core.IGetLocalizableMessagePipeline,Microsoft.ApplicationInsights.TelemetryClient,Sitecore.Commerce.Core.Commands.PerformanceCounterCommand,Sitecore.Commerce.Core.Commands.CustomMetricCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.StartEnvironmentBlock"/> class.
            </summary>
            <param name="localizableMessagePipeline">The localizable message pipeline.</param>
            <param name="telemetryClient">The telemetry client.</param>
            <param name="performanceCounterCommand">The performance counter command.</param>
            <param name="customMetricCommand">The custom metric counter command</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.StartEnvironmentBlock.Run(Sitecore.Commerce.Core.CommerceEnvironment,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run method to perform the task of starting the environment block.
            </summary>
            <param name="environment">The environment.</param>
            <param name="context">The context.</param>
            <returns>
            A <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment" />.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.StartEnvironmentCacheBlock">
            <summary>
            Defines a block which which starts an environment cache.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.CommerceEnvironment,
                    Sitecore.Commerce.Core.CommerceEnvironment, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.StartEnvironmentCacheBlock.#ctor(System.IServiceProvider,Sitecore.Commerce.Core.NodeContext,Sitecore.Framework.Common.MatchingOptions.IMatchingOptions{Sitecore.Framework.Caching.CacheOptions})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.StartEnvironmentCacheBlock"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="nodeContext">The node context.</param>
            <param name="cacheOptions">The cache options.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.StartEnvironmentCacheBlock.Run(Sitecore.Commerce.Core.CommerceEnvironment,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="environment">The environment.</param>
            <param name="context">The context.</param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment" />.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ValidateEnvironmentJsonBlock">
            <summary>
            Defines the validate environment json block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.String, Sitecore.Commerce.Core.CommerceEnvironment,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidateEnvironmentJsonBlock.Run(System.String,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment"/>
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.BootStrapImportEnvironmentsPipeline">
            <inheritdoc />
            <summary>
            Defines the BootStrap ImportEnvironment pipeline.
            </summary>
            <seealso>
                <cref>string</cref>
            </seealso>
            <seealso cref="!:Sitecore.Commerce.Core.IBootStrapImportEnvironmentsPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.BootStrapImportEnvironmentsPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IBootStrapImportEnvironmentsPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.BootStrapImportEnvironmentsPipeline" /> class.
            </summary>
            <param name="configuration">
            The definition.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.CleanEnvironmentPipeline">
            <summary>
            Defines the clean environment pipeline.
            </summary>
            <seealso>
                <cref>Sitecore.Commerce.Core.CommercePipeline{System.String, System.String}</cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.ICleanEnvironmentPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.CleanEnvironmentPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.ICleanEnvironmentPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CleanEnvironmentPipeline"/> class.
            </summary>
            <param name="configuration">
            The definition.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ExportEnvironmentPipeline">
            <summary>
            Defines the export environment pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ExportEnvironmentPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IExportEnvironmentPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ExportEnvironmentPipeline"/> class.
            </summary>
            <param name="configuration">
            The definition.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.IBootStrapImportEnvironmentsPipeline">
            <summary>
            Defines the BootStrapImportEnvironmentsPipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.ICleanEnvironmentPipeline">
            <summary>
            Defines the clean environment pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{System.String, System.String,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IExportEnvironmentPipeline">
            <summary>
            Defines the clean environment pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IImportEnvironmentPipeline">
            <summary>
            Defines the clean environment pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IInitializeEnvironmentPipeline">
            <summary>
            Defines the initialize environment pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{System.String, System.String,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.ImportEnvironmentPipeline">
            <summary>
            Defines the import environment pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ImportEnvironmentPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IImportEnvironmentPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ImportEnvironmentPipeline"/> class.
            </summary>
            <param name="configuration">
            The definition.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.InitializeEnvironmentPipeline">
            <inheritdoc />
            <summary>
            Defines the bootstrap environment pipeline.
            </summary>
            <seealso>
                <cref>string</cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IInitializeEnvironmentPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.InitializeEnvironmentPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IInitializeEnvironmentPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.InitializeEnvironmentPipeline" /> class.
            </summary>
            <param name="configuration">
            The definition.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.IStartEnvironmentPipeline">
            <summary>
            Defines the start environment pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{System.String, Sitecore.Commerce.Core.CommerceEnvironment,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IValidateEnvironmentPipeline">
            <summary>
            Defines the validate environment pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.StartEnvironmentPipeline">
            <summary>
            Defines the start StartEnvironmentPipeline pipeline.
            </summary>
            <seealso>
                <cref>Sitecore.Commerce.Core.CommercePipeline{System.String, Sitecore.Commerce.Core.CommerceEnvironment}</cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IStartEnvironmentPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.StartEnvironmentPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IStartEnvironmentPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.StartEnvironmentPipeline"/> class.
            </summary>
            <param name="configuration">
            The definition.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ValidateEnvironmentPipeline">
            <summary>
            Defines the bootstrap environment pipeline.
            </summary>
            <seealso>
                <cref>Sitecore.Commerce.Core.CommercePipeline{System.String, System.String}</cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IValidateEnvironmentPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidateEnvironmentPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IValidateEnvironmentPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ValidateEnvironmentPipeline"/> class.
            </summary>
            <param name="configuration">
            The definition.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.EnvironmentInitializationPolicy">
            <summary>
            Defines the environment initialization policy
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.EnvironmentInitializationPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.EnvironmentInitializationPolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.EnvironmentInitializationPolicy.InitialArtifactSets">
            <summary>
            Gets or sets the initial artifact sets.
            </summary>
            <value>
            The initial artifact sets.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.EventRegistryExtensions">
            <summary>
             Defines the event registry extensions.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.EventRegistryExtensions.ListItemUpdated(Sitecore.Framework.Eventing.IEventRegistry)">
            <summary>
             Defines the list item updated event extension.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.EventRegistryExtensions.ListItemProcessed(Sitecore.Framework.Eventing.IEventRegistry)">
            <summary>
             Defines the list item processed event extension.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.ListItemProcessedEvent">
            <summary>
            Defines the list item updated event.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ListItemProcessedEvent.#ctor(Sitecore.Framework.Eventing.IEventRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ListItemProcessedEvent"/> class.
            </summary> 
            <param name="registry">The event registry.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ListItemUpdatedEvent">
            <summary>
            Defines the list item updated event.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ListItemUpdatedEvent.#ctor(Sitecore.Framework.Eventing.IEventRegistry)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ListItemUpdatedEvent"/> class.
            </summary> 
            <param name="registry">The event registry.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ODataFormInputFormatter">
            <summary>
            Defines the odata form inout formatter
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatter" />
        </member>
        <member name="M:Sitecore.Commerce.Core.ODataFormInputFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ODataFormInputFormatter"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ODataFormInputFormatter.ReadRequestBodyAsync(Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext)">
            <summary>
            Reads an object from the request body.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Mvc.Formatters.InputFormatterContext" />.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> that on completion deserializes the request body.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetCurrencySetCommand">
            <inheritdoc />
            <summary>
            Defines the get currency set command
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCurrencySetCommand.#ctor(Sitecore.Commerce.Core.IGetCurrencySetPipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetCurrencySetCommand"/> class.
            </summary>
            <param name="getCurrencySetPipeline">The get countries pipeline.</param>
            <param name="serviceProvider">The Service Provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCurrencySetCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="currencySetId">The currency set identifier.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CurrencySet"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetCurrencySetsCommand">
            <summary>
            Defines the get currency sets command
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCurrencySetsCommand.#ctor(Sitecore.Commerce.Core.IGetCurrencySetsPipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetCurrencySetsCommand"/> class.
            </summary>
            <param name="getCurrencySetsPipeline">The get CurrencySets pipeline.</param>
            <param name="serviceProvider">The ServiceProvider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCurrencySetsCommand.Process(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <returns>A list of <see cref="T:Sitecore.Commerce.Core.CurrencySet"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.CurrenciesComponent">
            <summary>
            Defines the currencies component.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Component" />
        </member>
        <member name="M:Sitecore.Commerce.Core.CurrenciesComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CurrenciesComponent"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CurrenciesComponent.Currencies">
            <summary>
            Gets or sets the currencies.
            </summary>
            <value>
            The currencies.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.CurrencySet">
            <summary>
            Defines the currency set entity
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CommerceEntity" />
        </member>
        <member name="M:Sitecore.Commerce.Core.CurrencySet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CurrencySet"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CurrencySet.DefaultCurrency">
            <summary>
            Gets or sets the default currency.
            </summary>
            <value>
            The default currency.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CurrencySet.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.LocalizedTerm">
            <summary>
            Defines the localized term
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizedTerm.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LocalizedTerm"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizedTerm.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LocalizedTerm" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizedTerm.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizedTerm.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizedTerm.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>
            The description.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.LocalizableMessageArgument">
            <summary>
            Defines the localizable message pipeline argument.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.PipelineArgument" />
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizableMessageArgument.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LocalizableMessageArgument"/> class.
            </summary>
            <param name="localizationKey">The localization key.</param>
            <param name="args">The Args.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizableMessageArgument.LocalizationKey">
            <summary>
            Gets or sets the localization key.
            </summary>
            <value>
            The localization key.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizableMessageArgument.Args">
            <summary>
            Gets or sets the Args.
            </summary>
            <value>
            The Args.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.LocalizableTermArgument">
            <inheritdoc />
            <summary>
            Defines the localizable term pipeline argument.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.PipelineArgument" />
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizableTermArgument.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LocalizableTermArgument"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="path">The path.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizableTermArgument.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizableTermArgument.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizableTermArgument.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>
            The language.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizableTermArgument.Args">
            <summary>
            Gets or sets the arguments.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetCurrencySetBlock">
            <summary>
            Defines the get currency set block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.String, Sitecore.Commerce.Core.CurrencySet,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCurrencySetBlock.#ctor(Sitecore.Commerce.Core.IFindEntityPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetCurrencySetBlock"/> class.
            </summary>
            <param name="findEntityPipeline">The find entity pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCurrencySetBlock.Run(System.String,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CurrencySet"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetCurrencySetsBlock">
            <summary>
            Defines the get currency sets block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.String,
                    System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.CurrencySet},
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCurrencySetsBlock.#ctor(Sitecore.Commerce.Core.IFindEntitiesInListPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetCurrencySetBlock"/> class.
            </summary>
            <param name="findEntitiesInListPipeline">The find entities in list pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCurrencySetsBlock.Run(System.String,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A list of<see cref="T:Sitecore.Commerce.Core.CurrencySet"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetCurrencySetPipeline">
            <summary>
            Defines the get currency set pipeline
            </summary>
            <seealso>
                <cref>Sitecore.Commerce.Core.CommercePipeline{GetCurrencySetArgument, Sitecore.Commerce.Core.CurrencySet}</cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IGetCurrencySetPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCurrencySetPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IGetCurrencySetPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetCurrencySetPipeline"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetCurrencySetsPipeline">
            <summary>
            Defines the get currency sets pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{System.String,
                    System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.CurrencySet}}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IGetCurrencySetsPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCurrencySetsPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IGetCurrencySetsPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetCurrencySetsPipeline"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetLocalizableMessagePipeline">
            <summary>
            Defines the get localizable message pipeline.
            </summary>
            <seealso>
                <cref>Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.LocalizableMessageArgument, System.String}</cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IGetLocalizableMessagePipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetLocalizableMessagePipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IGetLocalizableMessagePipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetLocalizableMessagePipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.IGetCurrencySetPipeline">
            <summary>
            Defines the get currency set pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{GetCurrencySetArgument, Sitecore.Commerce.Core.CurrencySet,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IGetCurrencySetsPipeline">
            <summary>
            Defines the get currency set pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{System.String,
                    System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.CurrencySet},
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IGetLocalizableMessagePipeline">
            <summary>
             Defines the get localizable message pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.LocalizableMessageArgument, System.String,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.ILocalizableTermPipeline">
            <summary>
            Defines the localizable term pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.LocalizableTermArgument,
                    Sitecore.Commerce.Core.LocalizedTerm, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.ILocalizableTermsPipeline">
            <summary>
            Defines the localizable terms pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.LocalizableTermArgument,
                    System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.LocalizedTerm},
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.LocalizableTermPipeline">
            <summary>
             Defines the localizable term pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.LocalizableTermArgument,
                    Sitecore.Commerce.Core.LocalizedTerm}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.ILocalizableTermPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizableTermPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.ILocalizableTermPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LocalizableTermPipeline" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.LocalizableTermsPipeline">
            <summary>
            Defines the localizable terms pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.LocalizableTermArgument,
                    System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.LocalizedTerm}}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.ILocalizableTermsPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizableTermsPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.ILocalizableTermsPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LocalizableTermsPipeline" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.GlobalCurrencyPolicy">
            <summary>
            Defines the currency set policy
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GlobalCurrencyPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GlobalCurrencyPolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.GlobalCurrencyPolicy.DefaultCurrencySet">
            <summary>
            Gets or sets the default currency set.
            </summary>
            <value>
            The default currency set.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.LocalizedMessagesPolicy">
            <summary>
            Standard policies governing Localized Messaging
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CachePolicy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizedMessagesPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LocalizedMessagesPolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizedMessagesPolicy.MaxMessageSize">
            <summary>
            Gets or sets the maximum size of the message.
            </summary>
            <value>
            The maximum size of the message.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.LocalizedTermsCachePolicy">
            <inheritdoc />
            <summary>
            Defines the localize terms cache policy
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CachePolicy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizedTermsCachePolicy.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LocalizedTermsCachePolicy" /> class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.FindEntityListReferencesCommand">
            <summary>
             Defines the find entity list references command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.FindEntityListReferencesCommand.#ctor(Sitecore.Commerce.Core.IFindEntityListReferencesPipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.FindEntityListReferencesCommand"/> class.
            </summary>
            <param name="findEntityListReferencesPipeline">The find entity list references pipeline.</param>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.FindEntityListReferencesCommand.Process(Sitecore.Commerce.Core.CommerceContext,Sitecore.Commerce.Core.CommerceEntity)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="entity">The entity.</param>
            <returns>A commerce list of commerce entities</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.CommerceList`1">
            <summary>
            The commerce list.
            </summary>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceList`1.#ctor(Sitecore.Commerce.Core.CommerceList{Sitecore.Commerce.Core.CommerceEntity})">
            <summary>
            Cast a CommerceList of CommerceEntities into a type list of T
            </summary>
            <param name="entitiesList">A typed list of T</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceList`1.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceList`1.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommerceList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CommerceList`1"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceList`1.TotalItemCount">
            <summary>
            Gets or sets the total item count.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceList`1.CurrentPage">
            <summary>
            Gets or sets the current page.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceList`1.LastSkip">
            <summary>
            Gets or sets the last skip.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceList`1.PreviousSkip">
            <summary>
            Gets or sets the previous skip.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceList`1.NextSkip">
            <summary>
            Gets or sets the next skip.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceList`1.PageCount">
            <summary>
            Gets or sets the page count.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceList`1.SearchOptions">
            <summary>
            Gets or sets the search options.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommerceList`1.Items">
            <summary>
            Gets or sets the items.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.ItemList">
            <summary>
            The item list.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.LocalizedList`1">
            <summary>
            Represents a Localized list of KeyValuePair for a generic class of type T
            </summary>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="F:Sitecore.Commerce.Core.LocalizedList`1._list">
            <summary>
                The _list
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizedList`1.List">
            <summary>
                Gets the list.
            </summary>
            <value>
                The list.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.LocalizedList`1.Add(System.String)">
            <summary>
            Adds the specified name.
            </summary>
            <param name="name">
            The name.
            </param>
            <returns>
            An instance of a LocalizedListItem
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.LocalizedListItem`1">
            <summary>
            Represents a Localized item for a list of KeyValuePair targeting a generic class of type T
            </summary>
            <typeparam name="T">
            </typeparam>
        </member>
        <member name="F:Sitecore.Commerce.Core.LocalizedListItem`1._list">
            <summary>
                The _list
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizedListItem`1.Name">
            <summary>
                Gets or sets the name.
            </summary>
            <value>
                The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LocalizedListItem`1.List">
            <summary>
                Gets the list.
            </summary>
            <value>
                The list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.ListMetadata">
            <summary>
            This class represent the Metadata that may be retrieved about a list.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ListMetadata.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ListCountArgument"/> class.
            </summary>
            <param name="listName">The name of the ManagedList.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.ListMetadata.ListName">
            <summary>
            Gets or sets the ListName identifier.
            </summary>
            <value>
            The ListName identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.ListMetadata.Count">
            <summary>
            Gets or sets the count of items in the list.
            </summary>
            <value>
              An long count of the items in the list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.ListMetadata.IsManagedList">
            <summary>
            Gets or sets whether the list is a ManagedList.
            </summary>
            <value>
                True if the list is a ManagedList.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.Pager">
            <summary>
            The pager.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Pager.Page">
            <summary>
            Gets or sets the page.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Pager.ItemsPerPage">
            <summary>
            Gets or sets the items per page.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.AddListEntitiesPipeline">
            <inheritdoc />
            <summary>
            Defines the add list entities pipeline 
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.ListEntitiesArgument,
                    Sitecore.Commerce.Core.ListEntitiesArgument}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IAddListEntitiesPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.AddListEntitiesPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IAddListEntitiesPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.AddListEntitiesPipeline" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.DeleteEntityArgument">
            <summary>
            This class represent the argument used to delete an entity from the store.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.PipelineArgument" />
        </member>
        <member name="M:Sitecore.Commerce.Core.DeleteEntityArgument.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.DeleteEntityArgument"/> class.
            </summary>
            <param name="entityId">The entity identifier.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.DeleteEntityArgument.EntityId">
            <summary>
            Gets or sets the entity identifier.
            </summary>
            <value>
            The entity identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.DeleteEntityArgument.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Sitecore.Commerce.Core.DeleteEntityArgument"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.DeleteEntityArgument.EntityToDelete">
            <summary>
            Gets or sets the entity to delete.
            </summary>
            <value>
            The entity to delete.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.FindEntitiesInListArgument">
            <summary>
            The find entities in list argument.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.FindEntitiesInListArgument.#ctor(System.Type,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.FindEntitiesInListArgument"/> class.
            </summary>
            <param name="entityType">
            The entity type.
            </param>
            <param name="listName">
            The list name.
            </param>
            <param name="skip">
            The skip.
            </param>
            <param name="take">
            The take.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Core.FindEntitiesInListArgument.#ctor(Sitecore.Commerce.Core.CommerceEntity,System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.FindEntitiesInListArgument"/> class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="listName">Name of the list.</param>
            <param name="skip">The skip.</param>
            <param name="take">The take.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntitiesInListArgument.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntitiesInListArgument.ListName">
            <summary>
            Gets or sets the name of the list.
            </summary>
            <value>
            The name of the list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntitiesInListArgument.Skip">
            <summary>
            Gets or sets the skip.
            </summary>
            <value>
            The skip.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntitiesInListArgument.Take">
            <summary>
            Gets or sets the take.
            </summary>
            <value>
            The take.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntitiesInListArgument.IdList">
            <summary>
            Gets or sets the identifier list.
            </summary>
            <value>
            The identifier list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntitiesInListArgument.IdVersionMap">
            <summary>
            Gets or sets the identifier/Version disctionary.
            </summary>
            <value>
            The identifier list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntitiesInListArgument.List">
            <summary>
            Gets or sets the list.
            </summary>
            <value>
            The list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntitiesInListArgument.LoadEntities">
            <summary>
            Gets or sets a value indicating whether [load entities].
            </summary>
            <value>
              <c>true</c> if [load entities]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.FindEntityListReferencesArgument">
            <summary>
            The find entity list references argument.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.FindEntityListReferencesArgument.#ctor(Sitecore.Commerce.Core.CommerceEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.FindEntityListReferencesArgument"/> class.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntityListReferencesArgument.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>
            The entity.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntityListReferencesArgument.ListReferences">
            <summary>
            Gets or sets the list references.
            </summary>
            <value>
            The list references.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.ListCountArgument">
            <summary>
            This class represent the argument used to delete an entity from the store.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ListCountArgument.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ListCountArgument"/> class.
            </summary>
            <param name="listName">The name of the ManagedList.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.ListCountArgument.ListName">
            <summary>
            Gets or sets the ListName identifier.
            </summary>
            <value>
            The ListName identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.ListCountArgument.Count">
            <summary>
            Gets or sets the count of items in the list.
            </summary>
            <value>
              An long count of the items in the list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.ListCountArgument.ListWasFound">
            <summary>
            Gets or sets whether the list was found.
            </summary>
            <value>
                True if the list was found.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.ListEntitiesArgument">
            <summary>
            Defines the list entities argument argument.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ListEntitiesArgument.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ListEntitiesArgument"/> class.
            </summary>
            <param name="entityIds">
            The entities ids.
            </param>
            <param name="listName">
            The list name.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Core.ListEntitiesArgument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Int32},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ListEntitiesArgument"/> class.
            </summary>
            <param name="entityVersionMap">
            The entity ids with their corresponding versions.
            </param>
            <param name="listName">
            The list name.
            </param>
        </member>
        <member name="P:Sitecore.Commerce.Core.ListEntitiesArgument.EntityIds">
            <summary>
            Gets or sets the entity.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ListEntitiesArgument.EntityVersionMap">
            <summary>
            Gets or sets the entity version map.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ListEntitiesArgument.ListName">
            <summary>
            Gets or sets the list name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ListEntitiesArgument.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Sitecore.Commerce.Core.ListEntitiesArgument"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.PopulateListMetadataBlock">
            <summary>
            Defines a block which populates the ListMetadata
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.ListMetadata,
                    Sitecore.Commerce.Core.ListMetadata, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.PopulateListMetadataBlock.Run(Sitecore.Commerce.Core.ListMetadata,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The execute.
            </summary>
            <param name="listMetadata">
            The argument listMetadata.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.ListMetadata"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.FindEntitiesInListPipeline">
            <summary>
            Defines the find entities in list pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.FindEntitiesInListArgument,
                    Sitecore.Commerce.Core.FindEntitiesInListArgument}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IFindEntitiesInListPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.FindEntitiesInListPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IFindEntitiesInListPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.FindEntitiesInListPipeline" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.FindEntityListReferencesPipeline">
            <summary>
            The find entity list references pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.FindEntityListReferencesPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IFindEntityListReferencesPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.FindEntityListReferencesPipeline" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetListsNamesPipeline">
            <summary>
            The find entity pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetListsNamesPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IGetListsNamesPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetListsNamesPipeline" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.IAddListEntitiesPipeline">
            <summary>
            The add list entities pipeline interface.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IFindEntitiesInListPipeline">
            <summary>
            Defines the find entities in list pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.FindEntitiesInListArgument,
                    Sitecore.Commerce.Core.FindEntitiesInListArgument, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IFindEntityListReferencesPipeline">
            <summary>
            Defines the find entity list references pipeline
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IGetListsNamesPipeline">
            <summary>
            The GetListsNamesPipeline interface.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IPopulateListMetadataPipeline">
            <summary>
            Populates a List's Metadata and returns it.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.ListMetadata,
                    Sitecore.Commerce.Core.ListMetadata, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IRemoveListEntitiesPipeline">
            <summary>
            The RemoveListEntitiesPipeline interface.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.PopulateListMetadataPipeline">
            <summary>
            The PopulateListMetadata Pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.ListMetadata,
                    Sitecore.Commerce.Core.ListMetadata}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IPopulateListMetadataPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.PopulateListMetadataPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IPopulateListMetadataPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.PopulateListMetadataPipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.RemoveListEntitiesPipeline">
            <summary>
            Defines the remov list entities pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.ListEntitiesArgument,
                    Sitecore.Commerce.Core.ListEntitiesArgument}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IRemoveListEntitiesPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.RemoveListEntitiesPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IRemoveListEntitiesPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RemoveListEntitiesPipeline" /> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.RelatedList">
            <summary>
            The related list.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.RelatedList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RelatedList"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.RelatedList.ListName">
            <summary>
            Gets or sets the list name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.RelatedList.RelationshipType">
            <summary>
            Gets or sets the relationship type.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.RelatedList.Policies">
            <summary>
            Policies for Entity
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.RelatedList.ListDisplayName">
            <summary>
            Gets or sets the list display name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.RelatedList.TotalItemCount">
            <summary>
            Gets or sets the total item count.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.TimeSpanEntry">
            <summary>
            The time span entry.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.TimeSpanList`1">
            <summary>
            Defines the time span list.
            </summary>
            <typeparam name="T">The type.</typeparam>
        </member>
        <member name="P:Sitecore.Commerce.Core.TimeSpanList`1.DateFrom">
            <summary>
            Gets or sets the date from.
            </summary>
            <value>
            The date from.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.TimeSpanList`1.DateTo">
            <summary>
            Gets or sets the date to.
            </summary>
            <value>
            The date to.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.TimeSpanList`1.List">
            <summary>
            Gets the list.
            </summary>
            <value>
            The list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetCountriesCommand">
            <summary>
            Defines the get countries command
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCountriesCommand.#ctor(Sitecore.Commerce.Core.IGetCountriesPipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetCountriesCommand"/> class.
            </summary>
            <param name="getCountriesPipeline">The get countries pipeline.</param>
            <param name="serviceProvider">The Service Provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCountriesCommand.Process(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <returns>A list of <see cref="T:Sitecore.Commerce.Core.Country"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetCountryCommand">
            <summary>
            Defines the get country command
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCountryCommand.#ctor(Sitecore.Commerce.Core.IGetCountryPipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetCountryCommand"/> class.
            </summary>
            <param name="getCountryPipeline">The get countries pipeline.</param>
            <param name="serviceProvider">The get countries pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCountryCommand.Process(Sitecore.Commerce.Core.CommerceContext,System.String,System.Boolean)">
            <summary>
            Processes the specified commerce context.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="countryCode">The code of the country.</param>
            <param name="includeRegions">Whether to include the country regions or not.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Country"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ValidatePartyCommand">
            <summary>
            Defines the validate party command.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Commands.CommerceCommand" />
        </member>
        <member name="F:Sitecore.Commerce.Core.ValidatePartyCommand._validatePartyPipeline">
            <summary>
            The validate party pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidatePartyCommand.#ctor(Sitecore.Commerce.Core.IValidatePartyPipeline,System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ValidatePartyCommand"/> class.
            </summary>
            <param name="validatePartyPipeline">
            The validate context pipeline.
            </param>
            <param name="serviceProvider">
            The service Provider.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidatePartyCommand.Process(Sitecore.Commerce.Core.CommerceContext,Sitecore.Commerce.Core.Party)">
            <summary>
            The process.
            </summary>
            <param name="commerceContext">The context.</param>
            <param name="party">The party.</param>
            <returns>
            True if the context is valid, false otherwise.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.RegionComponent">
            <summary>
            Defines the region component.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CommerceEntity" />
        </member>
        <member name="M:Sitecore.Commerce.Core.RegionComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RegionComponent"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.RegionComponent.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.RegionComponent.StatesProvinces">
            <summary>
            Gets or sets the states provinces.
            </summary>
            <value>
            The states provinces.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.StateProvinceComponent">
            <summary>
            Defines the state province component
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.StateProvinceComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.StateProvinceComponent"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.StateProvinceComponent.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.StateProvinceComponent.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.Country">
            <summary>
            Defines the country commerce entity
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CommerceEntity" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Country.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Country"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Country.IsoCode2">
            <summary>
            Gets or sets the 2-letter ISO code for the country as defined by ISO 3166-1 Alpha-2. 
            </summary>
            <value>
            The iso code2.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Country.IsoCode3">
            <summary>
            Gets or sets the 3-letter ISO code for the country as defined by ISO 3166-1 Alpha-3. 
            </summary>
            <value>
            The iso code3.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Country.LocalizedDisplayName">
            <summary>
            Gets or sets the display name of the localized.
            </summary>
            <value>
            The display name of the localized.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Country.AddressFormat">
            <summary>
            Gets or sets the address format.
            </summary>
            <value>
            The address format.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Country.PostalCodeOptional">
            <summary>
            Gets or sets a value indicating whether [postal code optional].
            </summary>
            <value>
              <c>true</c> if [postal code optional]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.GeoZone">
            <summary>
            The geo zone.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoZone.Latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
            <value>
            The latitude.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoZone.Longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
            <value>
            The longitude.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.Party">
            <summary>
            The address.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Party.ExternalId">
            <summary>
            Gets or sets the party id.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Party.AddressName">
            <summary>
            Gets or sets the name of the address.
            </summary>
            <value>
            The name of the address.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Party.City">
            <summary>
            Gets or sets the city.
            </summary>       
        </member>
        <member name="P:Sitecore.Commerce.Core.Party.PhoneNumber">
            <summary>
            Gets or sets the telephone.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Party.Email">
            <summary>
            Gets or sets the email.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Party.State">
            <summary>
            Gets or sets the state province name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Party.StateCode">
            <summary>
            Gets or Sets the State Code
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Party.Organization">
            <summary>
            Gets or sets the organization.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Party.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Party.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Party.Country">
            <summary>
            Gets or sets the country name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Party.CountryCode">
            <summary>
            Gets or Sets the Country Code
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Party.Address1">
            <summary>
            Gets or sets the line 1.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Party.Address2">
            <summary>
            Gets or sets the line 2.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Party.ZipPostalCode">
            <summary>
            Gets or sets the postal code.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Party.IsPrimary">
            <summary>
            Gets or sets is primary.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetCountryArgument">
            <summary>
            Defines the get country pipeline argument
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.PipelineArgument" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCountryArgument.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetCountryArgument"/> class.
            </summary>
            <param name="countryCode">The country code.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.GetCountryArgument.CountryCode">
            <summary>
            Gets or sets the country code.
            </summary>
            <value>
            The country code.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GetCountryArgument.IncludeRegions">
            <summary>
            Gets or sets a value indicating whether [include regions].
            </summary>
            <value>
              <c>true</c> if [include regions]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetCountryBlock">
            <summary>
            Defines a block which gets sitecore country
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{CountryArgument,
                    System.Collections.Generic.IDictionary{System.String, System.String},
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCountryBlock.#ctor(Sitecore.Commerce.Core.IGetCountriesPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetCountryBlock"/> class.
            </summary>
            <param name="getCountriesPipeline">The get countries pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCountryBlock.Run(Sitecore.Commerce.Core.GetCountryArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The execute.
            </summary>s
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.Country"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ValidatePartyBlock">
            <summary>
            Defines a block which validates address
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.Party, Sitecore.Commerce.Core.Party,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidatePartyBlock.#ctor(Sitecore.Commerce.Core.IGetCountryPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ValidatePartyBlock"/> class.
            </summary>
            <param name="getCountryPipeline">The get country pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidatePartyBlock.Run(Sitecore.Commerce.Core.Party,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The execute.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>
            True if Party is valid otherwise False.
            </returns>       
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidatePartyBlock.ValidateCountryState(Sitecore.Commerce.Core.Party,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Validates the state of the country.
            </summary>
            <param name="party">The party.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Party"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidatePartyBlock.GetPropertyDisplayName(System.String,System.Collections.Generic.IList{Sitecore.Commerce.Core.LocalizedTerm})">
            <summary>
            Gets the display name of the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="commerceTerms">The commerce terms.</param>
            <returns>DisplayName for the property </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetCountriesPipeline">
            <summary>
            Defines the get countries pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{System.String,
                    System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.Country}}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IGetCountriesPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCountriesPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IGetCountriesPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetCountriesPipeline"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetCountryPipeline">
            <summary>
            Defines the get country pipeline
            </summary>
            <seealso>
                <cref>Sitecore.Commerce.Core.CommercePipeline{GetCountryArgument, Sitecore.Commerce.Core.Country}</cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IGetCountryPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetCountryPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IGetCountryPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetCountryPipeline"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.IGetCountriesPipeline">
            <summary>
            Defines the get countries pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{System.String,
                    System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.Country},
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IGetCountryPipeline">
            <summary>
            Defines the get country pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{GetCountryArgument, Sitecore.Commerce.Core.Country,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IValidatePartyPipeline">
            <summary>
            Defines the validate party pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.ValidatePartyPipeline">
            <summary>
            Defines validate address pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidatePartyPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IValidatePartyPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ValidatePartyPipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.Logging.ApplicationInsightsLogger">
            <summary>
            Defines the application insights logger
            </summary>
            <seealso cref="T:Microsoft.Extensions.Logging.ILogger" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Logging.ApplicationInsightsLogger.#ctor(System.String,Sitecore.Commerce.Core.Logging.ApplicationInsightsSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Logging.ApplicationInsightsLogger"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Logging.ApplicationInsightsLogger.BeginScope``1(``0)">
            <summary>
            Begins the scope.
            </summary>
            <typeparam name="TState">
            The type of the state.
            </typeparam>
            <param name="state">
            The state.
            </param>
            <returns>
            A <see cref="T:System.IDisposable"/>
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Logging.ApplicationInsightsLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            Determines whether the specified log level is enabled.
            </summary>
            <param name="logLevel">
            The log level.
            </param>
            <returns>
            <c>true</c> if the specified log level is enabled; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Logging.ApplicationInsightsLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <summary>
            Logs the specified log level.
            </summary>
            <typeparam name="TState">
            The type of the state.
            </typeparam>
            <param name="logLevel">
            The log level.
            </param>
            <param name="eventId">
            The event identifier.
            </param>
            <param name="state">
            The state.
            </param>
            <param name="exception">
            The exception.
            </param>
            <param name="formatter">
            The formatter.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Logging.ApplicationInsightsLogger.GetSeverityLevel(Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            Gets the severity level.
            </summary>
            <param name="logLevel">
            The log level.
            </param>
            <returns>
            A <see cref="T:Microsoft.ApplicationInsights.DataContracts.SeverityLevel"/>
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Logging.ApplicationInsightsLogger.NoopDisposable">
            <summary>
            Defines the noop disposable private class
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="F:Sitecore.Commerce.Core.Logging.ApplicationInsightsLogger.NoopDisposable.Instance">
            <summary>
            The instance.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Logging.ApplicationInsightsLogger.NoopDisposable.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.Logging.ApplicationInsightsLoggerFactoryExtensions">
            <summary>
            Extensions for logger factory
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Logging.ApplicationInsightsLoggerFactoryExtensions.AddApplicationInsights(Microsoft.Extensions.Logging.ILoggerFactory,Sitecore.Commerce.Core.Logging.ApplicationInsightsSettings)">
            <summary>
            Adds the application insights.
            </summary>
            <param name="factory">The factory.</param>
            <param name="settings">The settings.</param>
            <returns>The logger factory</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Logging.ApplicationInsightsLoggerProvider">
            <summary>
            Defines the application insights logger provider
            </summary>
            <seealso cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />
        </member>
        <member name="M:Sitecore.Commerce.Core.Logging.ApplicationInsightsLoggerProvider.#ctor(Sitecore.Commerce.Core.Logging.ApplicationInsightsSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Logging.ApplicationInsightsLoggerProvider"/> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Logging.ApplicationInsightsLoggerProvider.CreateLogger(System.String)">
            <summary>
            Creates the logger.
            </summary>
            <param name="name">The name.</param>
            <returns>The logger</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Logging.ApplicationInsightsLoggerProvider.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.Logging.ApplicationInsightsSettings">
            <summary>
            Defines the application insights settings
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Logging.ApplicationInsightsSettings.DeveloperMode">
            <summary>
            Gets or sets a value indicating whether [developer mode].
            </summary>
            <value>
              <c>true</c> if [developer mode]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Logging.ApplicationInsightsSettings.TelemetryEnabled">
            <summary>
            Gets or sets a value indicating whether [telemetry enabled].
            </summary>
            <value>
              <c>true</c> if [telemetry enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Logging.ApplicationInsightsSettings.InstrumentationKey">
            <summary>
            Gets or sets the instrumentation key.
            </summary>
            <value>
            The instrumentation key.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Logging.ApplicationInsightsSettings.MinimumLevel">
            <summary>
            Gets or sets the minimum level.
            </summary>
            <value>
            The minimum level.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.Logging.LoggingSettings">
            <summary>
            Defines the logging settings class
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Logging.LoggingSettings.ApplicationInsightsLoggingEnabled">
            <summary>
            Gets or sets a value indicating whether [application insights logging enable].
            </summary>
            <value>
            <c>true</c> if [application insights logging enable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Logging.LoggingSettings.SerilogLoggingEnabled">
            <summary>
            Gets or sets a value indicating whether [serilog logging enable].
            </summary>
            <value>
            <c>true</c> if [serilog logging enable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.Logging.Serilog.SerilogSettings">
            <summary>
            Serilog settings class
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Logging.Serilog.SerilogSettings.MinimumLevel">
            <summary>
            Gets or sets the minimum level.
            </summary>
            <value>
            The minimum level.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Logging.Serilog.SerilogSettings.FileSizeLimitInBytes">
            <summary>
            Gets or sets the minimum the File Size Limit.
            </summary>
            <value>
            The file size limit in bytes.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.LoggingPolicy">
            <summary>
            Standard policies governing Logging
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.LoggingPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.LoggingPolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.LoggingPolicy.LogBlockCompletions">
            <summary>
            Gets or sets a value indicating whether [log block completions].
            Set to true if logging BlockCompletions is desired.
            </summary>
            <value>
              <c>true</c> if [log block completions]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LoggingPolicy.LogBlockStart">
            <summary>
            Gets or sets a value indicating whether [log block start].
            Set to true if logging Block Starts is desired
            </summary>
            <value>
              <c>true</c> if [log block start]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LoggingPolicy.LogPipelineStart">
            <summary>
            Gets or sets a value indicating whether [log pipeline start].
            True if logging Pipeline Starts is desired
            </summary>
            <value>
              <c>true</c> if [log pipeline start]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LoggingPolicy.LogPipelineCompletion">
            <summary>
            Gets or sets a value indicating whether [log pipeline completion].
            True if logging Pipeline Completion is desired
            </summary>
            <value>
            <c>true</c> if [log pipeline completion]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LoggingPolicy.LogPolicySetFromCache">
            <summary>
            Gets or sets a value indicating whether [log policy set from cache].
            True if getting a PolicySet from the cache generates a log entry
            </summary>
            <value>
            <c>true</c> if [log policy set from cache]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.LoggingPolicy.LogDeserializeEntity">
            <summary>
            Gets or sets a value indicating whether [log deserialize entity].
            True if Deserialize should generate a log entry
            </summary>
            <value>
            <c>true</c> if [log deserialize entity]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.ScLogEnricher">
            <summary>
            Provides Enrichment capabilities to logging in order to allow logs to be analyzed by SCLA
            </summary>
            <seealso cref="T:Serilog.Core.ILogEventEnricher" />
        </member>
        <member name="M:Sitecore.Commerce.Core.ScLogEnricher.Enrich(Serilog.Events.LogEvent,Serilog.Core.ILogEventPropertyFactory)">
            <summary>
            Enrich the log event.
            </summary>
            <param name="logEvent">The log event to enrich.</param>
            <param name="propertyFactory">Factory for creating new properties to add to the event.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.GlobalImagePolicy">
            <inheritdoc />
            <summary>
            Defines the global image policy
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GlobalImagePolicy.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GlobalImagePolicy" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.GlobalImagePolicy.DefaultImage">
            <summary>
            Gets or sets the default image.
            </summary>
            <value>
            The default image.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GlobalImagePolicy.DefaultAltText">
            <summary>
            Gets or sets the default alt text.
            </summary>
            <value>
            The default alt text.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.Image">
            <summary>
            Defines the image
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Image.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Image"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Image.ImageName">
            <summary>
            Gets or sets the name of the image.
            </summary>
            <value>
            The name of the image.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Image.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>
            The URL.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Image.SitecoreId">
            <summary>
            Gets or sets the sitecore identifier.
            </summary>
            <value>
            The sitecore identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Image.AltText">
            <summary>
            Gets or sets the alt text.
            </summary>
            <value>
            The alt text.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Image.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Image.Height">
            <summary>
            
            Gets or sets the height.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.Minion">
            <summary>
            Defines the base Minion.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Minion.MinionContext">
            <summary>
            Context object for Startup Process
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Minion.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Minion.Environment">
            <summary>
            Gets or sets the environment.
            </summary>
            <value>
            The environment.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Minion.GlobalContext">
            <summary>
            Gets or sets the global context.
            </summary>
            <value>
            The global context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Minion.Policy">
            <summary>
            Gets or sets the policy.
            </summary>
            <value>
            The policy.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Minion.EventRegistry">
            <summary>
            Gets or sets the event registry.
            </summary>
            <value>
            The event registry.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Minion.Logger">
            <summary>
            Gets the logger.
            </summary>
            <value>
            The logger.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Minion.FindEntitiesInListPipeline">
            <summary>
            Gets or sets the find entities in list pipeline.
            </summary>
            <value>
            The find entities in list pipeline.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Minion.PopulateListMetadataPipeline">
            <summary>
            Gets or sets the populate list metadata pipeline.
            </summary>
            <value>
            The populate list metadata pipeline.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.Minion.Initialize(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger,Sitecore.Commerce.Core.MinionPolicy,Sitecore.Commerce.Core.CommerceEnvironment,Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Initializes the specified service provider.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
            <param name="policy">The policy.</param>
            <param name="environment">The environment.</param>
            <param name="globalContext">The global context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Minion.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Minion.GetListCount(System.String)">
            <summary>
            Gets the list count.
            </summary>
            <param name="listName">Name of the list.</param>
            <returns>The list count</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Minion.Run">
            <summary>
            Runs this instance.
            </summary>
            <returns>A <see cref="T:Sitecore.Commerce.Core.MinionRunResultsModel"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Minion.ResolvePipeline``1">
            <summary>
            Resolves a pipeline from the ServiceProvider
            </summary>
            <typeparam name="T">The type.</typeparam>
            <returns>A Pipeline</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Minion.GetListItems``1(System.String,System.Int32)">
            <summary>
            Gets items from a list
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="listName">The list name</param>
            <param name="take">The take.</param>
            <returns>A list of items.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Minion.GetListItems``1(System.String,System.Int32,System.Int32)">
            <summary>
            Gets the list items.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="listName">Name of the list.</param>
            <param name="take">The take.</param>
            <param name="skip">The skip.</param>
            <returns>A list of items</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Minion.GetListIds``1(System.String,System.Int32)">
            <summary>
            Gets items from a list
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="listName">The list name</param>
            <param name="take">The take.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.FindEntitiesInListArgument"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.MinionBoss">
            <inheritdoc />
            <summary>
            Defines the minion boss.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Minion" />
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionBoss.MinionPipeline">
            <summary>
            Gets or sets the minion pipeline.
            </summary>
            <value>
            The minion pipeline.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionBoss.ChildrenQueue">
            <summary>
            Gets or sets the children queue.
            </summary>
            <value>
            The children queue.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.MinionBoss.Initialize(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger,Sitecore.Commerce.Core.MinionPolicy,Sitecore.Commerce.Core.CommerceEnvironment,Sitecore.Commerce.Core.CommerceContext)">
            <inheritdoc />
            <summary>
            Initializes the specified service provider.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
            <param name="policy">The policy.</param>
            <param name="environment">The environment.</param>
            <param name="globalContext">The global context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.MinionBoss.Run">
            <summary>
            Runs this instance.
            </summary>
            <returns>
            A <see cref="T:Sitecore.Commerce.Core.MinionRunResultsModel" />
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.MinionRunResultsModel">
            <summary>
            Defines the results of a particular Minion run.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.MinionRunResultsModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.MinionRunResultsModel"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionRunResultsModel.HasMoreItems">
            <summary>
            Gets or sets whether there are more items to process.
            </summary>
            <value>
            True if there are more items to process.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionRunResultsModel.ItemsProcessed">
            <summary>
            Gets or Sets the number of items processed in this run
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.RunningMinionModel">
            <summary>
            Defines running minion model component.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.RunningMinionModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RunningMinionModel"/> class.
            </summary>
            <param name="fullyQualifiedName">The full name.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.RunningMinionModel.FullyQualifiedName">
            <summary>
            Gets or sets the full name.
            </summary>
            <value>
            The full name.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.MinionBossArgument">
            <summary>
            Defines the minion boss pipeline argument.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.PipelineArgument" />
        </member>
        <member name="M:Sitecore.Commerce.Core.MinionBossArgument.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.MinionBossArgument"/> class.
            </summary>
            <param name="listToAssignTo">The list to assign to.</param>
            <param name="listToRemoveFrom">The list to remove from.</param>
            <param name="itemsIds">The items ids.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionBossArgument.ListToAssignTo">
            <summary>
            Gets or sets the list to assign to.
            </summary>
            <value>
            The list to assign to.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionBossArgument.ListToRemoveFrom">
            <summary>
            Gets or sets the list to remove from.
            </summary>
            <value>
            The list to remove from.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionBossArgument.ItemsIds">
            <summary>
            Gets or sets the items ids.
            </summary>
            <value>
            The items ids.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.RunMinionArgument">
            <summary>
            Defines the run minion pipeline argument.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.PipelineArgument" />
        </member>
        <member name="M:Sitecore.Commerce.Core.RunMinionArgument.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RunMinionArgument"/> class.
            </summary>
            <param name="minionFullName">Full name of the minion.</param>
            <param name="runChildren">if set to <c>true</c> [run children].</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.RunMinionArgument.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RunMinionArgument"/> class.
            </summary>
            <param name="minionFullName">Full name of the minion.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.RunMinionArgument.MinionFullName">
            <summary>
            Gets or sets the full name of the minion.
            </summary>
            <value>
            The full name of the minion.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.RunMinionArgument.RunChildren">
            <summary>
            Gets or sets a value indicating whether [run children].
            </summary>
            <value>
              <c>true</c> if [run children]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.RunMinionArgument.Policies">
            <summary>
            Gets or sets the policies.
            </summary>
            <value>
            The policies.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.FilterMinionsToRunByListBlock">
            <summary>
            Defines the filter minions to run by watch list name block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.Minion},
                    System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.Minion},
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.FilterMinionsToRunByListBlock.Run(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.Minion},Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A collection of <see cref="T:Sitecore.Commerce.Core.Minion"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetMinionsToRunBlock">
            <summary>
            Defines the get minions to run block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.RunMinionArgument,
                    System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.Minion},
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetMinionsToRunBlock.Run(Sitecore.Commerce.Core.RunMinionArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A collection of all <see cref="T:Sitecore.Commerce.Core.Minion"/> matching the type.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.MoveItemsBlock">
            <summary>
            Defines the move items block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.String, System.Boolean,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.MoveItemsBlock.#ctor(Sitecore.Commerce.Core.IAddListEntitiesPipeline,Sitecore.Commerce.Core.IRemoveListEntitiesPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.MoveItemsBlock"/> class.
            </summary>
            <param name="addListEntitiesPipeline">The add list entities pipeline.</param>
            <param name="removeListEntitiesPipeline">The remove list entities pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.MoveItemsBlock.Run(Sitecore.Commerce.Core.MinionBossArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.RunMinionBlock">
            <summary>
            Defines the run minion block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.Minion},
                    System.Boolean, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.RunMinionBlock.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RunMinionBlock" /> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.RunMinionBlock.Run(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.Minion},Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>True if the minion(s) ran, false otherwise.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.StartEnvironmentMinionsBlock">
            <summary>
            Defines a block which which starts an Environments Minions.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.CommerceEnvironment,
                    Sitecore.Commerce.Core.CommerceEnvironment, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.StartEnvironmentMinionsBlock.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.StartEnvironmentMinionsBlock"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.StartEnvironmentMinionsBlock.Run(Sitecore.Commerce.Core.CommerceEnvironment,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="environment">The environment.</param>
            <param name="context">The context.</param>
            <returns>
            A <see cref="T:Sitecore.Commerce.Core.CommerceEnvironment" />.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.StartEnvironmentMinionsBlock.MinionStartup(Sitecore.Commerce.Core.MinionPolicy,Sitecore.Commerce.Core.CommerceEnvironment,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Minions the startup.
            </summary>
            <param name="minionPolicy">The minion policy.</param>
            <param name="environment">The environment.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.IMinionBossPipeline">
            <summary>
            Defines the minion boss pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.MinionBossArgument, System.Boolean,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IRunMinionPipeline">
            <summary>
            Defines the run minion pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.RunMinionArgument, System.Boolean,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.MinionBossPipeline">
            <summary>
            Defines the minion boss pipeline.
            </summary>
            <seealso>
                <cref>Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.MinionBossArgument, System.Boolean}</cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IMinionBossPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.MinionBossPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IMinionBossPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.MinionBossPipeline"/> class.
            </summary>
            <param name="configuration">
            The definition.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.RunMinionPipeline">
            <summary>
            Defines the run minion pipeline.
            </summary>
            <seealso>
                <cref>Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.RunMinionArgument, System.Boolean}</cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IRunMinionPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.RunMinionPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IRunMinionPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RunMinionPipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.MinionBossPolicy">
            <summary>
            Defines a policy to register a Minion.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.MinionPolicy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.MinionBossPolicy.#ctor(System.String,System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.MinionBossPolicy"/> class.
            </summary>
            <param name="fullyQualifiedName">The minion fully qualified name.</param>
            <param name="listToWatch">The list to watch.</param>
            <param name="wakeupInterval">The wake up interval.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionBossPolicy.Children">
            <summary>
            Gets or sets the child minions.
            </summary>
            <value>
            The child minions.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.MinionDelayPolicy">
            <summary>
            Defines the minion delay policy.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.MinionDelayPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.MinionDelayPolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionDelayPolicy.ReleaseDelaySeconds">
            <summary>
            Gets or sets the release delay seconds.
            </summary>
            <value>
            The release delay seconds.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionDelayPolicy.CompleteDelaySeconds">
            <summary>
            Gets or sets the complete delay seconds.
            </summary>
            <value>
            The complete delay seconds.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionDelayPolicy.LogDelays">
            <summary>
            Should any delays caused by the MinionDelayPolicy be logged (false)?
            </summary>
            <value>
            True if you want to log any delays caused by the MinionDelayPolicy.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionDelayPolicy.ZeroDelayRoleTrigger">
            <summary>
            Role to use to trigger Zero Minion Delay
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.MinionPolicy">
            <summary>
            Defines a policy to register a Minion.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.MinionPolicy.#ctor(System.String,System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.MinionPolicy"/> class.
            </summary>
            <param name="fullyQualifiedName">The minion fully qualified name.</param>
            <param name="listToWatch">The list to watch.</param>
            <param name="wakeupInterval">The wake up interval.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionPolicy.WakeupInterval">
            <summary>
            Gets or sets the wakeup interval.
            </summary>
            <value>
            The wakeup interval.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionPolicy.ListToWatch">
            <summary>
            Gets or sets the list to watch.
            </summary>
            <value>
            The list to watch.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionPolicy.FullyQualifiedName">
            <summary>
            Gets or sets the name of the fully qualified.
            </summary>
            <value>
            The name of the fully qualified.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionPolicy.ItemsPerBatch">
            <summary>
            Gets or sets the number of items per batch.
            </summary>
            <value>
            The number of items per batch.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinionPolicy.SleepBetweenBatches">
            <summary>
            Gets or sets the interval of time to sleep between batches.
            </summary>
            <value>
            The interval of time to sleep between batches.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.RunMinionPolicy">
            <summary>
            Defines a policy to run a Minion.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.RunMinionPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RunMinionPolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.RunMinionPolicy.WithListToWatch">
            <summary>
            Gets or sets the with list to watch.
            </summary>
            <value>
            The with list to watch.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.RunMinionPolicy.RunChildren">
            <summary>
            Gets or sets a value indicating whether [run children].
            </summary>
            <value>
              <c>true</c> if [run children]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.Currency">
            <summary>
            Defines the currency model.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Currency.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Currency"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Currency.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Currency"/> class.
            </summary>
            <param name="code">The code.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.Currency.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.DateRange">
            <summary>
            A model that expresses a date range 
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.DateRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.DateRange"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.DateRange.StartDate">
            <summary>
            Gets or sets the start date.
            </summary>
            <value>
            The start date.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.DateRange.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>
            <value>
            The end date.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.EnumType`1">
            <summary>
            Defines the EnumType generic class./>
            </summary>
            <typeparam name="T">Type to be implemented.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Core.EnumType`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.EnumType`1"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.EnumType`1.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.EnumType`1"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="name">The name.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.EnumType`1.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.EnumType`1.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.EnumType`1.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.EnumType`1.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.EnumType`1.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.GeoLocation">
            <summary>
            Defines the GeoLocation model.
                <seealso cref="T:Sitecore.Commerce.Core.Model"/>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.GeoLocation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GeoLocation"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocation.TimeZone">
            <summary>
            Gets or sets the TimeZone.
            </summary>
            <value>
            The TimeZone.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocation.Longitude">
            <summary>
            Gets or sets the Longitude.
            </summary>
            <value>
            The Longitude.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocation.Latitude">
            <summary>
            Gets or sets the Latitude.
            </summary>
            <value>
            The Latitude.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocation.Region">
            <summary>
            Gets or sets the Region.
            </summary>
            <value>
            The Region.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocation.AreaCode">
            <summary>
            Gets or sets the AreaCode.
            </summary>
            <value>
            The AreaCode.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocation.MetroCode">
            <summary>
            Gets or sets the MetroCode.
            </summary>
            <value>
            The MetroCode.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocation.City">
            <summary>
            Gets or sets the City.
            </summary>
            <value>
            The City.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocation.PostalCode">
            <summary>
            Gets or sets the PostalCode.
            </summary>
            <value>
            The PostalCode.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocation.BusinessName">
            <summary>
            Gets or sets the BusinessName.
            </summary>
            <value>
            The BusinessName.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocation.DnsAddress">
            <summary>
            Gets or sets the DnsAddress.
            </summary>
            <value>
            The DnsAddress.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocation.IpAddress">
            <summary>
            Gets or sets the IpAddress.
            </summary>
            <value>
            The IpAddress.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocation.IspName">
            <summary>
            Gets or sets the IspName.
            </summary>
            <value>
            The IspName.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.GeoLocation.ToModel(System.String,Sitecore.Commerce.Core.GeoLocation,System.String)">
            <summary>
            Converts a delimited string to a <see cref="T:Sitecore.Commerce.Core.GeoLocation"/> model
            </summary>
            <param name="input">the delimited string</param>
            <param name="mergeValuesLocation">Merge values from delimited string into an existing GeoLocation model</param>
            <param name="separator">the delimiter</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.GeoLocation"/> model with the values from the delimited string</returns>
            <remarks>Contains no error checking of parameters at this time</remarks>
        </member>
        <member name="M:Sitecore.Commerce.Core.GeoLocation.ToDelimitedString(Sitecore.Commerce.Core.GeoLocation,System.String)">
            <summary>
            Converts a <see cref="T:Sitecore.Commerce.Core.GeoLocation"/> model to a delimited string
            </summary>
            <param name="model">The object to convert</param>
            <param name="separator">which separator to use in the string</param>
            <returns>the delimited string</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.Language">
            <summary>
            The language.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Language.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Language"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Language.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Language.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Language.Image">
            <summary>
            Gets or sets the image.
            </summary>
            <value>
            The image.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Language.SortOrder">
            <summary>
            Gets or sets the sort order.
            </summary>
            <value>
            The sort order.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.Localized`1">
            <summary>
            Represents a Localized version of a generic class of type T
            </summary>
            <typeparam name="T">The type</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Core.Localized`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Localized`1" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Localized`1.#ctor(System.String,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Localized`1"/> class.
            </summary>
            <param name="culture">
            The culture.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="P:Sitecore.Commerce.Core.Localized`1.LocalizedString">
            <summary>
            Gets or sets the localized string.
            </summary>
            <value>
            The localized string.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Localized`1.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>
            The values.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.Localized`1.ResolveLocalizedString(System.String)">
            <summary>
            Resolves and populates the LocalizedString property based on the value in the Context.
            </summary>
            <param name="language">
            The language to use to resolve.
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Core.Localized`1.Add(System.String,`0)">
            <summary>
            Adds the specified culture.
            </summary>
            <param name="culture">
            The culture.
            </param>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.Model">
            <summary>
            Defines the base class for all models.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Model.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Model"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Model.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Model.Policies">
            <summary>
            Gets or sets the policies.
            </summary>
            <value>
            The policies.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.Model.HasPolicy``1">
            <summary>
            Determines whether this instance has policy.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <returns>
              <c>true</c> if this instance has policy; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Model.GetPolicy``1">
            <summary>
            Helper method to resolve a policy
            If Policy is not located in the Policies list then Activator is called to create a new instance
            </summary>
            <typeparam name="T">
            Anything inheriting from GetPolicy
            </typeparam>
            <returns>
            A <see cref="T:Sitecore.Commerce.Core.Policy"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.Model.SetPolicy(Sitecore.Commerce.Core.Policy)">
            <summary>
            Sets a policy. Adds it if it doesn't exist, replaces it if it does.
            </summary>
            <param name="policy">The policy.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.MultiCurrency">
            <summary>
            Represents a Localized version of a generic class of type MultiCurrency
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.MultiCurrency.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.MultiCurrency" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.MultiCurrency.#ctor(Sitecore.Commerce.Core.Money)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.MultiCurrency"/> class.
            </summary>
            <param name="defaultValue">
            The default value.
            </param>
        </member>
        <member name="P:Sitecore.Commerce.Core.MultiCurrency.Values">
            <summary>
                Gets the values.
            </summary>
            <value>
                The values.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.MultiCurrency.Add(Sitecore.Commerce.Core.Money)">
            <summary> 
            Adds the specified culture.
            </summary>
            <param name="value">
            The value.
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.Parameter">
            <summary>
            Represents a parameter
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Parameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Parameter"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Parameter.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Parameter"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.Parameter.Key">
            <summary>
            Gets or sets the key.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Parameter.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.ParameterKeyComparer">
            <inheritdoc />
            <summary>
            Defines comparer by key for the parameter type
            </summary>
            <seealso>
                <cref>System.Collections.Generic.IEqualityComparer{Sitecore.Commerce.Core.Parameter}</cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.ParameterKeyComparer.Equals(Sitecore.Commerce.Core.Parameter,Sitecore.Commerce.Core.Parameter)">
            <inheritdoc />
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <param name="x">The first object of type <paramref>
                    <name>Sitecore.Commerce.Core.Parameter</name>
                </paramref>
                to compare.</param>
            <param name="y">The second object of type <paramref>
                    <name>Sitecore.Commerce.Core.Parameter</name>
                </paramref>
                to compare.</param>
            <returns>
            true if the specified objects are equal; otherwise, false.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.ParameterKeyComparer.GetHashCode(Sitecore.Commerce.Core.Parameter)">
            <inheritdoc />
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="parameter">The parameter.</param>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.PropertiesModel">
            <summary>
            Defines the properties bag model
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Model" />
        </member>
        <member name="M:Sitecore.Commerce.Core.PropertiesModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.PropertiesModel"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.PropertiesModel.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.PropertiesModel.ContainsProperty(System.String)">
            <summary>
            Determines whether the specified key contains property.
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if the specified key contains property; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.PropertiesModel.SetPropertyValue(System.String,System.Object)">
            <summary>
            Sets the property value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.PropertiesModel.SetPropertyValue(System.String)">
            <summary>
            Sets the property value.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.PropertiesModel.GetPropertyValue(System.String)">
            <summary>
            Gets the property value.
            </summary>
            <param name="key">The key.</param>
            <returns>The value of a property.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.PropertiesModel.RemoveAllProperties">
            <summary>
            Removes all properties.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.Selection">
            <summary>
            Defines selectable item model.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Selection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Selection"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Selection.DisplayName">
            <summary>
            Gets or sets the DisplayName.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Selection.IsDefault">
            <summary>
            Gets or sets a value indicating whether this instance is default.
            </summary>
            <value>
            <c>true</c> if this instance is default; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.Tag">
            <summary>
            Defines a tag.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Tag.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Tag"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.Tag.Excluded">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Sitecore.Commerce.Core.Tag"/> is exclude.
            </summary>
            <value>
              <c>true</c> if exclude; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.Tender">
            <summary>
            General Tender Class.  The Root of all value exchanges
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.Versioning">
            <summary>
            a model that expresses the concept of versioning
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Versioning.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Versioning"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Versioning.Version">
            <summary>
            Gets or sets the version.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Versioning.VersionComments">
            <summary>
            Gets or sets the version comments.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.NodeHeartBeatMinion">
            <inheritdoc />
            <summary>
            Defines the NodeHeart Beat Minion.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.NodeHeartBeatMinion.MinionPipeline">
            <summary>
            Gets or sets the minion pipeline.
            </summary>
            <value>
            The minion pipeline.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.NodeHeartBeatMinion.Initialize(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger,Sitecore.Commerce.Core.MinionPolicy,Sitecore.Commerce.Core.CommerceEnvironment,Sitecore.Commerce.Core.CommerceContext)">
            <inheritdoc />
            <summary>
            Initializes the specified service provider.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
            <param name="policy">The policy.</param>
            <param name="environment">The environment.</param>
            <param name="globalContext">The global context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.NodeHeartBeatMinion.Run">
            <inheritdoc />
            <summary>
            Runs this instance.
            </summary>
            <returns>
            A <see cref="T:Sitecore.Commerce.Core.MinionRunResultsModel" />
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.NodeHeartBeatMinionBlock">
            <summary>
            Defines the Node HeartBeat Minion Block.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.NodeHeartBeatMinionBlock.#ctor(Sitecore.Commerce.Core.IPersistEntityPipeline,Sitecore.Framework.Eventing.IEventRegistry)">
            <summary>
            Initializes a new instance of the <see /> class.
            </summary>
            <param name="persitEntityPipeline">The persit entity pipeline.</param>
            <param name="eventRegistry">The event registry.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.NodeHeartBeatMinionBlock.Run(Sitecore.Commerce.Core.MinionRunResultsModel,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The execute.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.MinionRunResultsModel"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.StartNodeBlock">
            <summary>
            Defines a block which retrieves a PolicySet from entity storage
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.StartNodeBlock.#ctor(Sitecore.Commerce.Core.IFindEntityPipeline,Sitecore.Commerce.Core.IGetEnvironmentCachePipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetPolicySetBlock"/> class.
            </summary>
            <param name="findEntityPipeline">The find entity pipeline.</param>
            <param name="cachePipeline">The cache pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.StartNodeBlock.Run(Sitecore.Commerce.Core.NodeContext,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The execute.
            </summary>
            <param name="nodeContext">
            The NodeContext to start.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.StartNodeLogConfigurationBlock">
            <summary>
            Defines a block which retrieves a PolicySet from entity storage
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.NodeContext,
                    Sitecore.Commerce.Core.NodeContext, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.StartNodeLogConfigurationBlock.#ctor(Sitecore.Commerce.Core.Commands.GetPipelineConfigurationCommand,Microsoft.ApplicationInsights.TelemetryClient,Sitecore.Commerce.Core.Commands.PerformanceCounterCommand,Sitecore.Commerce.Core.Commands.CustomMetricCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.StartNodeLogConfigurationBlock"/> class.
            </summary>
            <param name="getPipelineConfigurationCommand">The get pipeline configuration command.</param>
            <param name="telemetryClient">The telemetry client.</param>
            <param name="performanceCounterCommand">The performance counter command.</param>
            <param name="customMetricCommand">The custom metric command</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.StartNodeLogConfigurationBlock.Run(Sitecore.Commerce.Core.NodeContext,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The execute.
            </summary>
            <param name="nodeContext">
            The NodeContext to start.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.INodeHeartBeatMinionPipeline">
            <summary>
            Defines the Node HeartBeat Minion Pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IStartNodePipeline">
            <summary>
             Defines the StartNode pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.NodeHeartBeatMinionPipeline">
            <summary>
            Defines the Node HeartBeat Minion Pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.MinionRunResultsModel,
                    Sitecore.Commerce.Core.MinionRunResultsModel}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.INodeHeartBeatMinionPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.NodeHeartBeatMinionPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.INodeHeartBeatMinionPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.MinionRunResultsModel"/> class.
            </summary>
            <param name="configuration">
            The definition.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.StartNodePipeline">
            <summary>
            Defines the start node pipeline
            </summary>
            <seealso>
                <cref>Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.NodeContext, Sitecore.Commerce.Core.NodeContext}</cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IStartNodePipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.StartNodePipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IStartNodePipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.StartNodePipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.DeploymentPolicy">
            <summary>
                Defines basic Deployment policies
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.DeploymentPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.DeploymentPolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.DeploymentPolicy.DeploymentId">
            <summary>
            A unique Id may be supplied for this Deployment
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.DeploymentPolicy.DeploymentVersion">
            <summary>
            Version of current deployment (major:minor:build)
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.DeploymentPolicy.ParentNodeId">
            <summary>
            The Node of this Deployments parent
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.NodeHeartBeatPolicy">
            <summary>
            Defines basic NodeHeartBeat policies
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.NodeHeartBeatPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.NodeHeartBeatPolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.NodeHeartBeatPolicy.LogHeartBeats">
            <summary>
            Log any Node HeartBeats (false)
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.NodePolicy">
            <summary>
                Defines basic Node policies
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.NodePolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.NodePolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.NodePolicy.ParentNodeId">
            <summary>
            Gets or sets the parent node identifier.
            </summary>
            <value>
            The parent node identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.NodeContext">
            <inheritdoc />
            <summary>
            Defines the commerce context used by a running Node.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CommerceContext" />
        </member>
        <member name="M:Sitecore.Commerce.Core.NodeContext.#ctor(Microsoft.Extensions.Logging.ILogger,Microsoft.ApplicationInsights.TelemetryClient,Sitecore.Commerce.Core.IGetLocalizableMessagePipeline)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.NodeContext" /> class.
            </summary>
            <param name="logger">The logger.</param>
            <param name="telemetryClient">The Telemetry Client.</param>
            <param name="getLocalizableMessagePipeline">The get localizable message pipeline.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.NodeContext.WebRootPath">
            <summary>
            Gets or sets the web root path.
            </summary>
            <value>
            The web root path.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.NodeContext.LoggingPath">
            <summary>
            Gets or sets the logging path.
            </summary>
            <value>
            The logging path.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.NodeContext.BootstrapEnvironmentPath">
            <summary>
            Gets or sets the boot strap environment path.
            </summary>
            <value>
            The boot strap environment path.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.NodeContext.GlobalEnvironmentName">
            <summary>
            Gets or sets the name of the global environment.
            </summary>
            <value>
            The name of the global environment.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.NodeContext.BootstrapProviderPath">
            <summary>
            Gets or sets the boot strap provider path.
            </summary>
            <value>
            The boot strap provider path.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.NodeContext.AntiForgeryEnabled">
            <summary>
            Gets or sets the anti forgery enabled flag.
            </summary>
            <value>
            The anti forgery enabled flag.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.NodeContext.CertificateHeaderName">
            <summary>
            Gets or sets the certificate header name.
            </summary>
            <value>
            The certificate header name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.NodeContext.Semaphores">
            <summary>
            Gets or sets the semaphores.
            </summary>
            <value>
            The semaphores.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.NodeContext.GetEnvironmentContext(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Retrieves the EnvironmentContext for a particular Environment from the NodeContext
            Creates and adds one if it is not found
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <returns>An <see cref="T:Sitecore.Commerce.Core.EnvironmentContext"/></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.NodeContext.GetOrAddSemaphore(System.String,System.String,System.String)">
            <summary>
            Gets the or add semaphore.
            </summary>
            <param name="itemKey">The item key.</param>
            <param name="prependItemKey">The prepend item key.</param>
            <param name="delimiter">The delimiter.</param>
            <returns>Get or add System.Threading.SemaphoreSlim in the collection for asynchronous programming with async and await. Must by initialized from the Sitecore.Commerce.Core.NodeContext constructor.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.PerformancePolicy">
            <summary>
            Defines the Performance Policy for performance counters
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.PerformancePolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.PerformancePolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.PerformancePolicy.WriteCounters">
            <summary>
            Gets or sets a value indicating whether the capturing and writing of Performance Counters is enabled. 
            </summary>
            <value>
            True if writing Performance Counters is desired (true).
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.PerformancePolicy.CountersVersion">
            <summary>
            Gets or sets the counters version.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.FindEntityArgument">
            <summary>
            Defines the find entity pipeline argument.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.PipelineArgument" />
        </member>
        <member name="M:Sitecore.Commerce.Core.FindEntityArgument.#ctor(System.Type,System.String,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.FindEntityArgument"/> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="entityId">The entity identifier.</param>
            <param name="entityVersion">The entity version.</param>
            <param name="shouldCreate">if set to <c>true</c> [should create].</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.FindEntityArgument.#ctor(System.Type,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.FindEntityArgument"/> class.
            </summary>
            <param name="entityType">Type of the entity.</param>
            <param name="entityId">The entity identifier.</param>
            <param name="shouldCreate">if set to <c>true</c> [should create].</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntityArgument.EntityType">
            <summary>
            Gets or sets the type of the entity.
            </summary>
            <value>
            The type of the entity.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntityArgument.EntityId">
            <summary>
            Gets or sets the entity identifier.
            </summary>
            <value>
            The entity identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntityArgument.EntityVersion">
            <summary>
            Gets or sets the entity version.
            </summary>
            <value>
            The entity version.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntityArgument.ShouldCreate">
            <summary>
            Gets or sets a value indicating whether [should create].
            </summary>
            <value>
              <c>true</c> if [should create]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntityArgument.SerializedEntity">
            <summary>
            Gets or sets the serialized entity.
            </summary>
            <value>
            The serialized entity.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntityArgument.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>
            The entity.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.FindEntityArgument.EntityAsStream">
            <summary>
            Gets or sets the EntityAsStream.
            </summary>
            <value>
            The EntityAsStream.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.FindEntityArgument.TrySetVersion(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            Tries to the set version.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.PersistEntityArgument">
            <summary>
            Argument used during the persistence of an entity
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.PipelineArgument" />
        </member>
        <member name="M:Sitecore.Commerce.Core.PersistEntityArgument.#ctor(Sitecore.Commerce.Core.CommerceEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.PersistEntityArgument"/> class.
            </summary>
            <param name="commerceEntity">The commerce entity.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.PersistEntityArgument.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>
            The entity.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.PersistEntityArgument.SerializedEntity">
            <summary>
            Gets or sets the serialized entity.
            </summary>
            <value>
            The serialized entity.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.PipelineArgument">
            <summary>
            Defines the base pipeline argument.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.CommercePipeline`2">
            <summary>
            The commerce pipeline.
            </summary>
            <typeparam name="TArg">
            Pipeline argument
            </typeparam>
            <typeparam name="TResult">
            Pipeline result
            </typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipeline`2.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CommercePipeline`2"/> class.
            </summary>
            <param name="configuration">
            The pipeline configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipeline`2.CreateContext(Sitecore.Framework.Pipelines.IPipelineExecutionContextOptions,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            The create context.
            </summary>
            <param name="options">
            The pipeline execution context options.
            </param>
            <param name="logger">
            The logger
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.CommercePipelineExecutionContext"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.CommercePipeline`1">
            <summary>
            Defines the base commerce pipeline
            </summary>
            <typeparam name="T">The type of the request and return</typeparam>
            <seealso>
                <cref>Sitecore.Framework.Pipelines.Pipeline{TArg, TResult, Sitecore.Commerce.Core.CommercePipelineExecutionContext}</cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipeline`1.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CommercePipeline`1"/> class.
            </summary>
            <param name="configuration">
            The pipeline configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.CommercePipelineExecutionContext">
            <summary>
            Defines the commerce pipeline execution context.
            </summary>
            <seealso cref="T:Sitecore.Framework.Pipelines.DefaultPipelineExecutionContext" />
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipelineExecutionContext.#ctor(Sitecore.Framework.Pipelines.IPipelineExecutionContextOptions,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CommercePipelineExecutionContext"/> class.
            </summary>
            <param name="options">
            The options.
            </param>
            <param name="pipelineLogger">
            The pipeline logger.
            </param>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommercePipelineExecutionContext.CommerceContext">
            <summary>
            Gets or sets the commerce context.
            </summary>
            <value>
            The commerce context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommercePipelineExecutionContext.Models">
            <summary>
            Gets or sets the models.
            Stores a list of models that may need to be accessed from one pipeline block to the next
            </summary>
            <value>
            The models.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommercePipelineExecutionContext.ContextOptions">
            <summary>
            Gets the context options.
            </summary>
            <value>
            The context options.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipelineExecutionContext.GetPolicy``1">
            <summary>
            Helper method to resolve a policy
            </summary>
            <typeparam name="T">
            Anything inheriting from GetPolicy
            </typeparam>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.Policy"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipelineExecutionContext.HasPolicy``1">
            <summary>
            Has policy
            </summary>
            <typeparam name="T">Policy type</typeparam>
            <returns>True if policy found, false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipelineExecutionContext.SetPolicy(Sitecore.Commerce.Core.Policy)">
            <summary>
            Sets the policy.
            </summary>
            <param name="policy">The policy.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipelineExecutionContext.LogInfoIf(System.Boolean,System.String)">
            <summary>
            Logs the information if.
            </summary>
            <param name="conditionResult">if set to <c>true</c> [condition result].</param>
            <param name="info">The information.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipelineExecutionContext.Abort(System.String,System.Object)">
            <summary>
            Called when [pipeline abort].
            </summary>
            <param name="message">The message.</param>
            <param name="context">The Pipeline Context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipelineExecutionContext.AddModel(Sitecore.Commerce.Core.Model)">
            <summary>
            Adds the model.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipelineExecutionContext.RemoveModel(Sitecore.Commerce.Core.Model)">
            <summary>
            Removes the model.
            </summary>
            <param name="modelToRemove">The model to remove.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipelineExecutionContext.GetModels``1">
            <summary>
            Gets the models.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipelineExecutionContext.GetModel``1">
            <summary>
            Gets the first model of the specified type.
            </summary>
            <typeparam name="T">The type of model to retrieve.</typeparam>
            <returns>the first model of the specified type.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipelineExecutionContext.GetModel``1(System.Func{``0,System.Boolean})">
            <summary>
            Gets the first model of the specified type matching the specified <paramref name="predicate"/>.
            </summary>
            <param name="predicate">The match criteria.</param>
            <typeparam name="T">The type of model to retrieve.</typeparam>
            <returns>the first model of the specified type matching the specified <paramref name="predicate"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipelineExecutionContext.GetModels">
            <summary>
            Gets the models.
            </summary>
            <returns>A <see cref="T:Sitecore.Commerce.Core.Model"/> list.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.CommercePipelineExecutionContextOptions">
            <summary>
            Defines the commerce pipeline execution context options.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipelineExecutionContextOptions.#ctor(Sitecore.Commerce.Core.CommerceContext,System.Threading.CancellationTokenSource,System.Action{System.Exception},System.Action{System.Object},System.Action{System.String},System.Action{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CommercePipelineExecutionContextOptions"/> class.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="cancellationTokenSource">The cancellation token source.</param>
            <param name="onError">The on error.</param>
            <param name="onBlockResult">The on block result.</param>
            <param name="onStatus">The on status.</param>
            <param name="onAbort">The on abort.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.CommercePipelineExecutionContextOptions.CommerceContext">
            <summary>
            Gets the commerce context.
            </summary>
            <value>
            The commerce context.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.CommercePipelineExecutionContextOptions.Abort(System.String,System.Object)">
            <summary>
            Called when [pipeline abort].
            </summary>
            <param name="message">The message.</param>
            <param name="context">The Pipeline Context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ConditionalPipelineBlock`3">
            <summary>
            This class represents a Pipeline Block that will evaluate it's Predicate condition before executing.
            </summary>
            <typeparam name="TIn">The type of the in.</typeparam>
            <typeparam name="TOut">The type of the out.</typeparam>
            <typeparam name="TContext">The type of the context.</typeparam>
            <seealso cref="T:Sitecore.Framework.Pipelines.PipelineBlock`3" />
        </member>
        <member name="P:Sitecore.Commerce.Core.ConditionalPipelineBlock`3.BlockCondition">
            <summary> 
            Gets or sets the block condition.
            </summary>
            <value>
            The block condition.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.ConditionalPipelineBlock`3.Run(`0,Sitecore.Framework.Pipelines.IPipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>An object</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.ConditionalPipelineBlock`3.Run(`0,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>An object</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.ConditionalPipelineBlock`3.ContinueTask(`0,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Continues (skips over) the block run when the condition evaluates to false.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>An object</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ConfigureOpsServiceApiPipeline">
            <summary>
            Defines the configure ops service API pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ConfigureOpsServiceApiPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IConfigureOpsServiceApiPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ConfigureOpsServiceApiPipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ConfigureServiceApiPipeline">
            <summary>
            Defines the configure service api pipeline.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Microsoft.AspNetCore.OData.Builder.ODataConventionModelBuilder,
                    Microsoft.AspNetCore.OData.Builder.ODataConventionModelBuilder}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IConfigureServiceApiPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.ConfigureServiceApiPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IConfigureServiceApiPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ConfigureServiceApiPipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.IConfigureOpsServiceApiPipeline">
            <summary>
            Defines the configure ops service api pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IConfigureServiceApiPipeline">
            <summary>
            Defines the configure service api pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IValidateContextPipeline">
            <summary>
             Defines the validate context pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.ConfiguredBlock">
            <summary>
            A model that expresses the concept of a configured block
            Used for collecting Block information to return configured pipelines
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ConfiguredBlock.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ConfiguredBlock.Namespace">
            <summary>
            The Namespace of the configured block
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ConfiguredBlock.Receives">
            <summary>
            The Name of the Type that the block receives
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ConfiguredBlock.Returns">
            <summary>
            The Name of the Type that the block returns
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.ConfiguredPipeline">
            <summary>
            A model that expresses the concept of a configured pipeline
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Model" />
        </member>
        <member name="M:Sitecore.Commerce.Core.ConfiguredPipeline.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ConfiguredPipeline"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ConfiguredPipeline.Namespace">
            <summary>
            Gets or sets the namespace.
            </summary>
            <value>
            The namespace.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.ConfiguredPipeline.Receives">
            <summary>
            Gets or sets the receives.
            </summary>
            <value>
            The receives.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.ConfiguredPipeline.Returns">
            <summary>
            Gets or sets the returns.
            </summary>
            <value>
            The returns.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.ConfiguredPipeline.Blocks">
            <summary>
            Gets or sets the blocks.
            </summary>
            <value>
            The blocks.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.ConfiguredPipeline.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.ConfiguredPipelines">
            <summary>
            A List class of ConfiguredPipelines
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ConfiguredPipelines.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ConfiguredPipelines.List">
            <summary>
            List of ConfiguredPipeline
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.PipelineBlockServiceCollectionExtensions">
            <summary>
            The pipeline block service collection extensions.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.PipelineBlockServiceCollectionExtensions.RegisterAllPipelineBlocks(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Reflection.Assembly)">
            <summary>
            Registers all of the pipeline blocks for this assembly.
            Pipeline blocks implement the <see cref="T:Sitecore.Framework.Pipelines.IPipelineBlock"/> interface
            </summary>
            <param name="services">
            The services collection.
            </param>
            <param name="assembly">
            The assembly to register the pipeline blocks from
            </param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.PolicyTriggerConditionalPipelineBlock`2">
            <inheritdoc />
            <summary>
            This class represents a Pipeline Block that will run only if it' PolicyTrigger isn't in the request's headers.
            </summary>
            <typeparam name="TIn">The type of the in.</typeparam>
            <typeparam name="TOut">The type of the out.</typeparam>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.ConditionalPipelineBlock{TIn, TOut,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.PolicyTriggerConditionalPipelineBlock`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.PolicyTriggerConditionalPipelineBlock`2"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.PolicyTriggerConditionalPipelineBlock`2.ShouldNotRunPolicyTrigger">
            <summary>
            Gets the should not run policy trigger.
            </summary>
            <value>
            The should not run policy trigger.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.PolicyTriggerConditionalPipelineBlock`2.ContinueTask(`0,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <inheritdoc />
            <summary>
            Continues (skips over) the block run when the condition evaluates to false.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>
            An object
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.PolicyTriggerConditionalPipelineBlock`2.ShouldRun(Sitecore.Framework.Pipelines.IPipelineExecutionContext)">
            <summary>
            Shoulds the run.
            </summary>
            <param name="context">The context.</param>
            <returns>True if the block should run, false otherwise.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ValidateContextPipeline">
            <summary>
            Defines validate context pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidateContextPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IValidateContextPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ValidateContextPipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.PluginHelper">
            <summary>
            Defines the PluginHelper.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.PluginHelper.RegisterPlugin(System.Object,System.Collections.Generic.List{Sitecore.Commerce.Core.RegisteredPluginModel})">
            <summary>
            Registers the plugin.
            </summary>
            <param name="plugin">The plugin.</param>
            <param name="plugins">The plugins.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ICommercePlugin">
            <summary>
            The CommercePlugin interface.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ICommercePlugin.Activate(Sitecore.Commerce.Core.CommerceEnvironment)">
            <summary>
            The activate.
            </summary>
            <param name="environment">
            The environment.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.RegisteredPluginModel">
            <summary>
             Defines the registered plugin model.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.RegisteredPluginModel.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RegisteredPluginModel"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="version">The version.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.RegisteredPluginModel.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>
            The version.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.RunningPluginsBlock">
            <summary>
             Defines the running plugins block.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.RunningPluginsBlock.Run(System.String,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The list of <see cref="T:Sitecore.Commerce.Core.RegisteredPluginModel"/>
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.IRunningPluginsPipeline">
            <summary>
            Defines the running plugins pipeline.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.RunningPluginsPipeline">
            <summary>
            Defines the running plugins pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.RunningPluginsPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IRunningPluginsPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RunningPluginsPipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.PluginPolicy">
            <inheritdoc />
            <summary>
            Defines the plugin policy
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="P:Sitecore.Commerce.Core.PluginPolicy.Plugin">
            <summary>
            Gets or sets the plugin.
            </summary>
            <value>
            The plugin.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.PluginPolicy.Icon">
            <summary>
            Gets or sets the icon.
            </summary>
            <value>
            The icon.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.PluginPolicy.GetPolicyByPlugin(Sitecore.Commerce.Core.CommerceContext,System.Object)">
            <summary>
            Gets the policy by plugin.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="plugin">The plugin.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.PluginPolicy"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.AvailableSelectionsPolicy">
            <inheritdoc />
            <summary>
            Defines the available selections policy
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.AvailableSelectionsPolicy.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.AvailableSelectionsPolicy" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.AvailableSelectionsPolicy.#ctor(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Core.Selection},System.Boolean)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.AvailableSelectionsPolicy" /> class.
            </summary>
            <param name="selections">The selections.</param>
            <param name="addEmptySelection">if set to <c>true</c> [add empty selection].</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.AvailableSelectionsPolicy.List">
            <summary>
            Gets or sets the list.
            </summary>
            <value>
            The list.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.AvailableSelectionsPolicy.AllowMultiSelect">
            <summary>
            Gets or sets a value indicating whether [allow multi select].
            </summary>
            <value>
              <c>true</c> if [allow multi select]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.ControllerMethodRolesPolicy">
            <summary>
            Defines the ControllerMethod Roles policy
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.ControllerMethodRolesPolicy.#ctor(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ControllerMethodRolesPolicy"/> class.
            </summary>
            <param name="controllerMethodRegularExpression">The controller method regular expression.</param>
            <param name="authorizedRoles">The authorized roles.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.ControllerMethodRolesPolicy.ControllerMethodRegularExpression">
            <summary>
            Gets or sets the controller method regular expression.
            </summary>
            <value>
            The controller method regular expression.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.ControllerMethodRolesPolicy.AuthorizedRoles">
            <summary>
            Gets or sets the authorized roles.
            </summary>
            <value>
            The authorized roles.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.ControllerMethodRolesPolicy.GetByRequestPath(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            Gets the Controller method roles policy by name.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="requestPath">The request path.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.ControllerMethodRolesPolicy"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.DisabledPolicy">
            <summary>
            Defines the disabled policy
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.DisabledPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.DisabledPolicy"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.DisabledPolicy.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.DisabledPolicy"/> class.
            </summary>
            <param name="comment">The comment.</param>
            <param name="disabledBy">The disabled by.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.DisabledPolicy.Comment">
            <summary>
            Gets or sets the comment.
            </summary>
            <value>
            The comment.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.DisabledPolicy.DisabledBy">
            <summary>
            Gets or sets the disabled by.
            </summary>
            <value>
            The disabled by.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.CantResolvePolicyException">
            <summary>
            Attempt to resolve a <see cref="T:Sitecore.Commerce.Core.Policy"/> that cannot be created
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.CantResolvePolicyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.CantResolvePolicyException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy">
            <summary>
            Defines the <see cref="T:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy"/> class
                <seealso cref="T:Sitecore.Commerce.Core.GeoLocation"/>
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy._locationDefaults">
            <summary>
            The _location defaults.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy.TimeZone">
            <summary>
            Gets or sets the TimeZone.
            </summary>
            <value>
            The TimeZone.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy.Longitude">
            <summary>
            Gets or sets the Longitude.
            </summary>
            <value>
            The Longitude.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy.Latitude">
            <summary>
            Gets or sets the Latitude.
            </summary>
            <value>
            The Latitude.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy.Region">
            <summary>
            Gets or sets the Region.
            </summary>
            <value>
            The Region.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy.AreaCode">
            <summary>
            Gets or sets the AreaCode.
            </summary>
            <value>
            The AreaCode.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy.MetroCode">
            <summary>
            Gets or sets the MetroCode.
            </summary>
            <value>
            The MetroCode.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy.City">
            <summary>
            Gets or sets the City.
            </summary>
            <value>
            The City.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy.PostalCode">
            <summary>
            Gets or sets the PostalCode.
            </summary>
            <value>
            The PostalCode.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy.BusinessName">
            <summary>
            Gets or sets the BusinessName.
            </summary>
            <value>
            The BusinessName.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy.DnsAddress">
            <summary>
            Gets or sets the DnsAddress.
            </summary>
            <value>
            The DnsAddress.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy.IpAddress">
            <summary>
            Gets or sets the IpAddress.
            </summary>
            <value>
            The IpAddress.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy.IspName">
            <summary>
            Gets or sets the IspName.
            </summary>
            <value>
            The IspName.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy.LocationDefaults">
            <summary>
            Gets or sets the Geo Location defaults
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.GeoLocationDefaultsPolicy.InitGeoLocation">
            <summary>
            Initializes the Geo Location model
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.KnownContextPolicy">
            <summary>
            Defines the known context policy.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.KnownContextPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.KnownContextPolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.KnownContextPolicy.DefaultCurrency">
            <summary>
            Gets or sets the default currency.
            </summary>
            <value>
            The default currency.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.KnownMessageCodePolicy">
            <summary>
            Defines the known message code policy.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.KnownMessageCodePolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.KnownMessageCodePolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.KnownMessageCodePolicy.Pricing">
            <summary>
            Gets or sets the pricing.
            </summary>
            <value>
            The pricing.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.KnownMessageCodePolicy.Promotions">
            <summary>
            Gets or sets the promotions.
            </summary>
            <value>
            The promotions.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.KnownPolicySets">
            <summary>
              The KnownCartPolicySets.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.KnownPolicySets.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.KnownPolicySets"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.ListNamePolicy">
            <summary>
            Defines the list name policy.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ListNamePolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ListNamePolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ListNamePolicy.Prefix">
            <summary>
            Gets or sets the prefix.
            </summary>
            <value>
            The prefix.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.ListNamePolicy.Suffix">
            <summary>
            Gets or sets the suffix.
            </summary>
            <value>
            The suffix.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.ListNamePolicy.Separator">
            <summary>
            Gets or sets the separator.
            </summary>
            <value>
            The separator.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.ListNamePolicy.ListName(System.String)">
            <summary>
            Lists the name.
            </summary>
            <param name="listMembership">The list membership.</param>
            <returns>The name of a list</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.MaxLengthPolicy">
            <summary>
            Defines the maximum length policy
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.MaxLengthPolicy.MaxLengthAllow">
            <summary>
            Gets or sets the maximum length allow.
            </summary>
            <value>
            The maximum length allow.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.MinMaxValuePolicy">
            <inheritdoc />
            <summary>
            Defines the min-max value policy
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="P:Sitecore.Commerce.Core.MinMaxValuePolicy.MaxAllow">
            <summary>
            Gets or sets the maximum allow.
            </summary>
            <value>
            The maximum allow.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.MinMaxValuePolicy.MinAllow">
            <summary>
            Gets or sets the minimum allow.
            </summary>
            <value>
            The minimum allow.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.ImportedPolicySetModel">
            <summary>
            Defines imported policy set model component.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ImportedPolicySetModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ImportedPolicySetModel"/> class.
            </summary>
            <param name="policySetId">The policy set identifier.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.ImportedPolicySetModel.PolicySetId">
            <summary>
            Gets or sets the policy set identifier.
            </summary>
            <value>
            The policy set identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.PolicyAddedModel">
            <summary>
            Defines the policy added model
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Model" />
        </member>
        <member name="M:Sitecore.Commerce.Core.PolicyAddedModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.PolicyAddedModel"/> class.
            </summary>
            <param name="policyId">The policy identifier.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.PolicyAddedModel.PolicyId">
            <summary>
            Gets or sets the policy identifier.
            </summary>
            <value>
            The policy identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.PaginationPolicy">
            <inheritdoc />
            <summary>
            Defines the pagination policy.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="P:Sitecore.Commerce.Core.PaginationPolicy.PageSize">
            <summary>
            Gets or sets the items per page.
            </summary>
            <value>
            The items per page.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.PaginationPolicy.PageSizeOptions">
            <summary>
            Gets or sets the page size options.
            </summary>
            <value>
            The page size options.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.AddPolicyToEntityPipeline">
            <summary>
            Defines the add policy to entity pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.AddPolicyToEntityArgument,
                    Sitecore.Commerce.Core.CommerceEntity}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IAddPolicyToEntityPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.AddPolicyToEntityPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IAddPolicyToEntityPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.AddPolicyToEntityPipeline"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.AddPolicyToEntityArgument">
            <summary>
            Defines the add policy to entity argument.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.PipelineArgument" />
        </member>
        <member name="M:Sitecore.Commerce.Core.AddPolicyToEntityArgument.#ctor(Sitecore.Commerce.Core.CommerceEntity,Sitecore.Commerce.Core.Policy)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.AddPolicyToEntityArgument"/> class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="policy">The policy.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.AddPolicyToEntityArgument.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>
            The entity.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.AddPolicyToEntityArgument.Policy">
            <summary>
            Gets or sets the policy.
            </summary>
            <value>
            The policy.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.RemovePolicyFromEntityArgument">
            <summary>
            Defines the remove policy from entity argument.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.PipelineArgument" />
        </member>
        <member name="M:Sitecore.Commerce.Core.RemovePolicyFromEntityArgument.#ctor(Sitecore.Commerce.Core.CommerceEntity,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RemovePolicyFromEntityArgument"/> class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="policyType">Type of the policy.</param>
        </member>
        <member name="P:Sitecore.Commerce.Core.RemovePolicyFromEntityArgument.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>
            The entity.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.RemovePolicyFromEntityArgument.PolicyType">
            <summary>
            Gets or sets the type of the policy.
            </summary>
            <value>
            The type of the policy.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.RemovePolicyFromEntityArgument.PolicyId">
            <summary>
            Gets or sets the policy identifier.
            </summary>
            <value>
            The policy identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.AddPolicyToEntityBlock">
            <summary>
            Defines the add policy to entity block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.AddPolicyToEntityArgument,
                    Sitecore.Commerce.Core.CommerceEntity, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.AddPolicyToEntityBlock.#ctor(Sitecore.Commerce.Core.IPersistEntityPipeline,Sitecore.Commerce.Core.Commands.ResetNodeContextCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.AddPolicyToEntityBlock"/> class.
            </summary>
            <param name="persistEntityPipeline">The persist entity pipeline.</param>
            <param name="resetNodeContextCommand">The reset node context command.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.AddPolicyToEntityBlock.Run(Sitecore.Commerce.Core.AddPolicyToEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetPolicySetBlock">
            <summary>
            Defines a block which retrieves a PolicySet from entity storage
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.String, Sitecore.Commerce.Core.PolicySet,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetPolicySetBlock.#ctor(Sitecore.Commerce.Core.IFindEntityPipeline,Sitecore.Commerce.Core.IGetEnvironmentCachePipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetPolicySetBlock"/> class.
            </summary>
            <param name="findEntityPipeline">The find entity pipeline.</param>
            <param name="cachePipeline">The cache pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.GetPolicySetBlock.Run(System.String,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The execute.
            </summary>
            <param name="policySetName">
            The argument PolicySet name.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.CommerceEntity"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ImportPolicySetBlock">
            <summary>
            Defines the import PolicySet block.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Core.ImportPolicySetBlock.findEntityPipeline">
            <summary>
            The find entity pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ImportPolicySetBlock.#ctor(Sitecore.Commerce.Core.IFindEntityPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ImportPolicySetBlock"/> class.
            </summary>
            <param name="findEntityPipeline">The find entity pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.ImportPolicySetBlock.Run(Sitecore.Commerce.Core.PolicySet,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.PolicySet"/>
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.PersistPolicySetBlock">
            <summary>
            Defines the persist PolicySet block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.PolicySet,
                    Sitecore.Commerce.Core.PolicySet, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.PersistPolicySetBlock.#ctor(Sitecore.Commerce.Core.IPersistEntityPipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.PersistPolicySetBlock" /> class.
            </summary>
            <param name="persistEntityPipeline">The persist entity pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.PersistPolicySetBlock.Run(Sitecore.Commerce.Core.PolicySet,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="policySet">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.PolicySet"/>
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.RemovePolicyFromEntityBlock">
            <summary>
            Defines the remove policy from entity block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.RemovePolicyFromEntityArgument,
                    System.Boolean, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.RemovePolicyFromEntityBlock.#ctor(Sitecore.Commerce.Core.IPersistEntityPipeline,Sitecore.Commerce.Core.Commands.ResetNodeContextCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RemovePolicyFromEntityBlock"/> class.
            </summary>
            <param name="persistEntityPipeline">The persist entity pipeline.</param>
            <param name="resetNodeContextCommand">The reset node context command.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.RemovePolicyFromEntityBlock.Run(Sitecore.Commerce.Core.RemovePolicyFromEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>True if the police was removed, false otherwise.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.UpdatePolicySetInCacheBlock">
            <summary>
            Defines the update policy set in cache block
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.PersistEntityArgument,
                    Sitecore.Commerce.Core.PersistEntityArgument, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.UpdatePolicySetInCacheBlock.#ctor(Sitecore.Commerce.Core.IGetEnvironmentCachePipeline)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.UpdatePolicySetInCacheBlock"/> class.
            </summary>
            <param name="cachePipeline">The cache pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.UpdatePolicySetInCacheBlock.Run(Sitecore.Commerce.Core.PersistEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="argument">The argument.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.PersistEntityArgument"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ValidatePolicySetJsonBlock">
            <summary>
            Defines the validate PolicySet json block.
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{System.String, Sitecore.Commerce.Core.PolicySet,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidatePolicySetJsonBlock.Run(System.String,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            The run.
            </summary>
            <param name="arg">
            The argument.
            </param>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.PolicySet"/>
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.GetPolicySetPipeline">
            <summary>
            Defines the get policy set pipeline
            </summary>
            <seealso>
                <cref>Sitecore.Commerce.Core.CommercePipeline{System.String, Sitecore.Commerce.Core.PolicySet}</cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IGetPolicySetPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.GetPolicySetPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IGetPolicySetPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.GetPolicySetPipeline"/> class.
            </summary>
            <param name="configuration">
            The configuration.
            </param>
            <param name="loggerFactory">
            The logger factory
            </param>
        </member>
        <member name="T:Sitecore.Commerce.Core.IAddPolicyToEntityPipeline">
            <summary>
            Defines the add policy to entity pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.AddPolicyToEntityArgument,
                    Sitecore.Commerce.Core.CommerceEntity, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.IGetPolicySetPipeline">
            <summary>
            The GetPolicySet interface.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IImportPolicySetPipeline">
            <summary>
            Defines the import policy set pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{System.String,
                    Sitecore.Commerce.Core.PolicySet, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.ImportPolicySetPipeline">
            <summary>
            Defines the import PolicySet pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{System.String,
                    Sitecore.Commerce.Core.PolicySet}
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IImportPolicySetPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.ImportPolicySetPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IImportPolicySetPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ImportPolicySetPipeline"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.IRemovePolicyFromEntityPipeline">
            <summary>
            Defines the remove policy from entity pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.RemovePolicyFromEntityArgument, System.Boolean,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.RemovePolicyFromEntityPipeline">
            <summary>
            Defines the remove policy from entity pipeline
            </summary>
            <seealso>
                <cref>Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.RemovePolicyFromEntityArgument, System.Boolean}</cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IRemovePolicyFromEntityPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.RemovePolicyFromEntityPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IRemovePolicyFromEntityPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RemovePolicyFromEntityPipeline"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.Policy">
            <summary>
            Defines the base policy
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.Policy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.Policy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.Policy.PolicyId">
            <summary>
            Gets or sets the policy identifier.
            </summary>
            <value>
            The policy identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.Policy.Models">
            <summary>
            Gets or sets the models.
            </summary>
            <value>
            The models.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.PolicyContainer">
            <summary>
            Container class for a list of Policies with helper methods
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.PolicyContainer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.PolicyContainer"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.PolicyContainer.List">
            <summary>
            Gets or sets the list.
            </summary>
            <value>
            The list.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Core.PolicyContainer.GetPolicies``1">
            <summary>
            Retrieves a list of policies of a specific type.
            </summary>
            <typeparam name="T">
            Any T
            </typeparam>
            <returns>
            A list of type T.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.PolicyContainer.GetPolicy``1">
            <summary>
            Helper method to resolve a policy
            If Policy is not located in the Policies list then Activator is called to create a new instance
            </summary>
            <typeparam name="T">
            Anything inheriting from Policy
            </typeparam>
            <returns>
            The <see cref="T:Sitecore.Commerce.Core.Policy"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.PolicyContainer.HasPolicy``1">
            <summary>
            Returns true if the Policies list has a policy of type T.
            </summary>
            <typeparam name="T">
            The policy type
            </typeparam>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.PolicyContainer.SetPolicy(Sitecore.Commerce.Core.Policy)">
            <summary>
            Sets a policy.  Adds it if it doesn't exist, replaces it if it does.
            </summary>
            <param name="policy">The <see cref="T:Sitecore.Commerce.Core.Policy"/>.</param>
        </member>
        <member name="M:Sitecore.Commerce.Core.PolicyContainer.RemovePolicy(System.Type)">
            <summary>
            Removes a specific policy by type if present.
            </summary>
            <param name="policyType">The <see cref="T:System.Type"/>.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.PolicySet">
            <summary>
            Defines the policy set entity
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.CommerceEntity" />
        </member>
        <member name="T:Sitecore.Commerce.Core.PolicySetPolicy">
            <summary>
            The policy set policy.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.PolicySetPolicy.PolicySetId">
            <summary>
            The Id of the targeted PolicySet
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.QualifyPolicy">
            <summary>
            The qualify policy.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.IEntityProvider">
            <summary>
            The EntityProvider interface.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.IEntityProvider.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.IEntityProvider.CorrelationId">
            <summary>
            Gets or sets the correlation id.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.IEntityProvider.Tracking">
            <summary>
            Gets or sets the tracking.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.IEntityProvider.Persist``1(Sitecore.Commerce.Core.CommerceContext,``0)">
            <summary>
            The persist.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="t">
            The t.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.IEntityProvider.Find``1(Sitecore.Commerce.Core.CommerceContext,System.String,System.Boolean)">
            <summary>
            The find.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="id">
            The id.
            </param>
            <param name="createIfNotFound">
            The create if not found.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.IEntityProvider.GetTotalIndexCount(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            The get total index count.
            </summary>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.IEntityProvider.ClearEntities(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            The clear entities.
            </summary>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.IEntityProvider.Persist(Sitecore.Commerce.Core.CommerceContext,Sitecore.Commerce.Core.CommerceEntity,System.Boolean)">
            <summary>
            The persist.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="entityToPersist">
            The entity to persist.
            </param>
            <param name="commitChanges">
            The commit changes.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.IEntityProvider.Delete(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            The delete.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="id">
            The id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.IIndexProvider">
            <summary>
            The IndexProvider interface.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.IIndexProvider.ListCount(Sitecore.Commerce.Core.CommerceContext,System.String)">
            <summary>
            The list count.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="listName">
            The list name.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.IIndexProvider.PersistIndex``1(Sitecore.Commerce.Core.CommerceContext,``0)">
            <summary>
            The persist index.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="t">
            The t.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.IIndexProvider.FindEntityByIndex``1(Sitecore.Commerce.Core.CommerceContext,Sitecore.Commerce.Core.IEntityProvider,System.String,System.String)">
            <summary>
            The find entity by index.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="entityProvider">
            The entity provider.
            </param>
            <param name="indexName">
            The index name.
            </param>
            <param name="indexKey">
            The index key.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.IIndexProvider.FindWithIndexName``1(Sitecore.Commerce.Core.CommerceContext,Sitecore.Commerce.Core.IEntityProvider,System.String,System.Int32,System.Int32)">
            <summary>
            The find with index name.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="entityProvider">
            The entity provider.
            </param>
            <param name="indexName">
            The index name.
            </param>
            <param name="skip">
            The skip.
            </param>
            <param name="take">
            The take.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.IIndexProvider.FindAll``1(Sitecore.Commerce.Core.CommerceContext,Sitecore.Commerce.Core.IEntityProvider)">
            <summary>
            The find all.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="entityProvider">
            The entity provider.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.IIndexProvider.GetTotalIndexCount(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            The get total index count.
            </summary>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.IIndexProvider.ClearIndexes(Sitecore.Commerce.Core.CommerceContext)">
            <summary>
            The clear indexes.
            </summary>
            <param name="context">
            The context.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.IIndexProvider.EntitiesInList``1(Sitecore.Commerce.Core.CommerceContext,Sitecore.Commerce.Core.IEntityProvider,System.String,System.Int32,System.Int32)">
            <summary>
            The entities in list.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="entityProvider">
            The entity provider.
            </param>
            <param name="listName">
            The list name.
            </param>
            <param name="skip">
            The skip.
            </param>
            <param name="take">
            The take.
            </param>
            <typeparam name="T">
            </typeparam>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.IIndexProvider.EntitiesInList(Sitecore.Commerce.Core.CommerceContext,Sitecore.Commerce.Core.IEntityProvider,System.String,System.Int32,System.Int32)">
            <summary>
            The entities in list.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="entityProvider">
            The entity provider.
            </param>
            <param name="listName">
            The list name.
            </param>
            <param name="skip">
            The skip.
            </param>
            <param name="take">
            The take.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.IIndexProvider.AddToList(Sitecore.Commerce.Core.CommerceContext,System.String,System.String)">
            <summary>
            The add to list.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="listName">
            The list name.
            </param>
            <param name="itemId">
            The item id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.IIndexProvider.IsInList(Sitecore.Commerce.Core.CommerceContext,System.String,System.String)">
            <summary>
            The is in list.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="listName">
            The list name.
            </param>
            <param name="itemId">
            The item id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.IIndexProvider.RemoveFromList(Sitecore.Commerce.Core.CommerceContext,System.String,System.String)">
            <summary>
            The remove from list.
            </summary>
            <param name="context">
            The context.
            </param>
            <param name="listName">
            The list name.
            </param>
            <param name="itemId">
            The item id.
            </param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.SearchOption">
            <summary>
            The search option.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.SearchOption.Phrase">
            <summary>
            Gets or sets the phrase.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.SearchOption.ReturnTypes">
            <summary>
            Gets or sets the return types.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.SearchOption.Skip">
            <summary>
            Gets or sets the skip.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.SearchOption.WhereClause">
            <summary>
            Gets or sets the where clause.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.SearchOption.Take">
            <summary>
            Gets or sets the take.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.SearchOption.ListMemberships">
            <summary>
            Gets or sets the list memberships.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Core.RequestContext">
            <summary>
            A model that gathers metadata from an HttpRequest
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Model" />
        </member>
        <member name="M:Sitecore.Commerce.Core.RequestContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.RequestContext"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.RequestContext.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value>
            The path.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.RequestContext.BasePath">
            <summary>
            Gets or sets the base path.
            </summary>
            <value>
            The base path.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.RequestContext.Host">
            <summary>
            Gets or sets the host.
            </summary>
            <value>
            The host.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.RequestContext.IsHttps">
            <summary>
            Gets or sets a value indicating whether this instance is HTTPS.
            </summary>
            <value>
              <c>true</c> if this instance is HTTPS; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.KnownServiceRoutesPolicy">
            <summary>
            Policy providing the standard Service API routes.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.KnownServiceRoutesPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.KnownServiceRoutesPolicy"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.KnownServiceRoutesPolicy.CommerceOps">
            <summary>
            Gets or sets the commerce ops.
            </summary>
            <value>
            The commerce ops.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.KnownServiceRoutesPolicy.Shops">
            <summary>
            Gets or sets the shops.
            </summary>
            <value>
            The shops.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.KnownServiceRoutesPolicy.Authoring">
            <summary>
            Gets or sets the authoring.
            </summary>
            <value>
            The authoring.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.TransactionsPolicy">
            <inheritdoc />
            <summary>
            The Transactions Policy.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.TransactionsPolicy.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.TransactionsPolicy" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.TransactionsPolicy.TransactionalityEnabled">
            <summary>
            Gets or sets a value indicating whether [transactionality enabled].
            </summary>
            <value>
            <c>true</c> if [transactionality enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.TransactionsPolicy.TransactionTimeOut">
            <summary>
            Gets or sets the transaction time out.
            </summary>
            <value>
            The transaction time out.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Core.TransactionsPolicy.AsyncFlowOption">
            <summary>
            Gets or sets the asynchronous flow option.
            Allow Transactions to flow across thread continuations
            1 = Enabled
            0 = Suppressed
            </summary>
            <value>
            The asynchronous flow option.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Core.ICustomValidator">
            <summary>
            Defines the ICustomValidator interface
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Core.ICustomValidator.ValidateProperty(System.Object,System.String,Sitecore.Commerce.Core.ValidationAttributes,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Validates the property.
            </summary>
            <param name="propertyValue">The property value.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="attributes">The attributes.</param>
            <param name="context">The context.</param>
            <returns>
            'True' is property is valid otherwise 'false'
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ValidationAttributes">
            <summary>
            Defines the validation attributes model
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Model" />
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidationAttributes.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ValidationAttributes"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ValidationAttributes.MinLength">
            <summary>
            Gets or sets the minimum length.
            </summary>       
        </member>
        <member name="P:Sitecore.Commerce.Core.ValidationAttributes.MaxLength">
            <summary>
            Gets or sets the maximum length.
            </summary>      
        </member>
        <member name="P:Sitecore.Commerce.Core.ValidationAttributes.MinValue">
            <summary>
            Gets or sets the minimum value.
            </summary>     
        </member>
        <member name="P:Sitecore.Commerce.Core.ValidationAttributes.MaxValue">
            <summary>
            Gets or sets the maximum value.
            </summary>    
        </member>
        <member name="P:Sitecore.Commerce.Core.ValidationAttributes.StareDate">
            <summary>
            Gets or sets the stare date.
            </summary>       
        </member>
        <member name="P:Sitecore.Commerce.Core.ValidationAttributes.EndDate">
            <summary>
            Gets or sets the end date.
            </summary>        
        </member>
        <member name="P:Sitecore.Commerce.Core.ValidationAttributes.IsRequired">
            <summary>
            Gets a value indicating whether this instance is required.
            </summary>       
        </member>
        <member name="P:Sitecore.Commerce.Core.ValidationAttributes.RegexValidator">
            <summary>
            Gets or sets the regex validator.
            </summary>        
        </member>
        <member name="P:Sitecore.Commerce.Core.ValidationAttributes.RegexValidatorErrorCode">
            <summary>
            Gets or sets the regex validator error code.
            </summary>        
        </member>
        <member name="P:Sitecore.Commerce.Core.ValidationAttributes.CustomValidator">
            <summary>
            Gets or sets the custom validator.
            </summary>        
        </member>
        <member name="T:Sitecore.Commerce.Core.FinalizeEntityValidationBlock">
            <summary>
            Defines a block which retrieves a PolicySet from entity storage
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.PersistEntityArgument, Sitecore.Commerce.Core.PersistEntityArgument,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.FinalizeEntityValidationBlock.Run(Sitecore.Commerce.Core.PersistEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.PersistEntityArgument"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ValidateEntityBlock">
            <summary>
            Defines a block which retrieves a PolicySet from entity storage
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.PersistEntityArgument, Sitecore.Commerce.Core.PersistEntityArgument,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidateEntityBlock.Run(Sitecore.Commerce.Core.PersistEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.PersistEntityArgument"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.ValidateEntityComponentsBlock">
            <summary>
            Defines a block which retrieves a PolicySet from entity storage
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.PipelineBlock{Sitecore.Commerce.Core.PersistEntityArgument, Sitecore.Commerce.Core.PersistEntityArgument,
                    Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidateEntityComponentsBlock.Run(Sitecore.Commerce.Core.PersistEntityArgument,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Runs the specified argument.
            </summary>
            <param name="arg">The argument.</param>
            <param name="context">The context.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Core.PersistEntityArgument"/></returns>
        </member>
        <member name="T:Sitecore.Commerce.Core.IValidateEntityPipeline">
            <summary>
            Defines the add policy to entity pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Framework.Pipelines.IPipeline{Sitecore.Commerce.Core.AddPolicyToEntityArgument,
                    Sitecore.Commerce.Core.CommerceEntity, Sitecore.Commerce.Core.CommercePipelineExecutionContext}
                </cref>
            </seealso>
        </member>
        <member name="T:Sitecore.Commerce.Core.ValidateEntityPipeline">
            <summary>
            Defines the add policy to entity pipeline
            </summary>
            <seealso>
                <cref>
                    Sitecore.Commerce.Core.CommercePipeline{Sitecore.Commerce.Core.PersistEntityArgument
                </cref>
            </seealso>
            <seealso cref="T:Sitecore.Commerce.Core.IValidateEntityPipeline" />
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidateEntityPipeline.#ctor(Sitecore.Framework.Pipelines.IPipelineConfiguration{Sitecore.Commerce.Core.IValidateEntityPipeline},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ValidateEntityPipeline"/> class.
            </summary>
            <param name="configuration">The configuration.</param>
            <param name="loggerFactory">The logger factory.</param>
        </member>
        <member name="T:Sitecore.Commerce.Core.ValidationPolicy">
            <inheritdoc />
            <summary>
            Defines the validation policy
            </summary>
            <seealso cref="T:Sitecore.Commerce.Core.Policy" />
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidationPolicy.#ctor">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Core.ValidationPolicy" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Core.ValidationPolicy.TypeFullName">
            <summary>
            Gets or sets the full name of the entity.
            </summary>       
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidationPolicy.GetValidationPolicy(Sitecore.Commerce.Core.CommerceContext,System.Type)">
            <summary>
            Gets the entity properties policy.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="arg">The argument.</param>
            <returns>
            arg.FullName
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidationPolicy.GetValidationPolicies(Sitecore.Commerce.Core.CommerceContext,System.Type)">
            <summary>
            Gets the entity validation policies.
            </summary>
            <param name="commerceContext">The commerce context.</param>
            <param name="arg">The argument.</param>
            <returns>
            The list of arg.FullName
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidationPolicy.Validate(System.Object,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Validates the entity.
            </summary>
            <param name="target">The target.</param>
            <param name="context">The context.</param>
            <returns>'True' is property is valid otherwise 'false'</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidationPolicy.ValidateModels(System.Object,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Validates the models.
            </summary>
            <param name="target">The target.</param>
            <param name="context">The context.</param>
            <returns>True if the target is valid, false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidationPolicy.ValidateProperty(System.Collections.Generic.KeyValuePair{System.Tuple{System.String,System.String},System.Object},Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Validates the property.
            </summary>
            <param name="property">The property.</param>
            <param name="context">The context.</param>
            <returns>'True' is property is valid otherwise 'false'</returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidationPolicy.RegexValidation(System.String,System.String,Sitecore.Commerce.Core.ValidationAttributes,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Regexes the validation.
            </summary>
            <param name="propertyValue">The property value.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="attributes">The attributes.</param>
            <param name="context">The context.</param>
            <returns>
            'True' is property is valid otherwise 'false'
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Core.ValidationPolicy.ValidateProperty(System.Object,System.String,System.String,Sitecore.Commerce.Core.ValidationAttributes,Sitecore.Commerce.Core.CommercePipelineExecutionContext)">
            <summary>
            Validates the property.
            </summary>
            <param name="propertyValue">The property value.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyDisplayName">Display name of the property.</param>
            <param name="attributes">The attributes.</param>
            <param name="context">The context.</param>
            <returns>
            'True' is property is valid otherwise 'false'
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Exceptions.InvalidEnvironmentException">
            <inheritdoc />
            <summary>
            Defines the error being raised if an Environment is found to be invalid
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Sitecore.Commerce.Exceptions.InvalidEnvironmentException.#ctor(System.String)">
            <inheritdoc />
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Exceptions.InvalidEnvironmentException" /> class.
            </summary>
            <param name="environment">The environment.</param>
        </member>
        <member name="P:Sitecore.Commerce.Exceptions.InvalidEnvironmentException.Environment">
            <summary>
            Gets or sets the environment.
            </summary>
            <value>
            The environment.
            </value>
        </member>
    </members>
</doc>
